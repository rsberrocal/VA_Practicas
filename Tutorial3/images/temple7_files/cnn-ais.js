"use strict";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _typeof4(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof4 = function _typeof4(obj) { return typeof obj; }; } else { _typeof4 = function _typeof4(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof4(obj); }

// CNN - AdFuel Modules - 15
// Deployed: 2020-10-07 10:39:16
////////////////////////////////////////////
// AD UTILITIES
////////////////////////////////////////////
(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.AdFuelUtils = {}));
})(void 0, function (exports) {
  'use strict';

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function createCommonjsModule(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }

  function getCjsExportFromNamespace(n) {
    return n && n['default'] || n;
  }

  var _global = createCommonjsModule(function (module) {
    // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
    var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self // eslint-disable-next-line no-new-func
    : Function('return this')();
    if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
  });

  var _core = createCommonjsModule(function (module) {
    var core = module.exports = {
      version: '2.6.9'
    };
    if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
  });

  var _core_1 = _core.version;

  var _aFunction = function _aFunction(it) {
    if (typeof it != 'function') throw TypeError(it + ' is not a function!');
    return it;
  }; // optional / simple context binding


  var _ctx = function _ctx(fn, that, length) {
    _aFunction(fn);

    if (that === undefined) return fn;

    switch (length) {
      case 1:
        return function (a) {
          return fn.call(that, a);
        };

      case 2:
        return function (a, b) {
          return fn.call(that, a, b);
        };

      case 3:
        return function (a, b, c) {
          return fn.call(that, a, b, c);
        };
    }

    return function ()
    /* ...args */
    {
      return fn.apply(that, arguments);
    };
  };

  var _isObject = function _isObject(it) {
    return _typeof4(it) === 'object' ? it !== null : typeof it === 'function';
  };

  var _anObject = function _anObject(it) {
    if (!_isObject(it)) throw TypeError(it + ' is not an object!');
    return it;
  };

  var _fails = function _fails(exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  }; // Thank's IE8 for his funny defineProperty


  var _descriptors = !_fails(function () {
    return Object.defineProperty({}, 'a', {
      get: function get() {
        return 7;
      }
    }).a != 7;
  });

  var document$1 = _global.document; // typeof document.createElement is 'object' in old IE

  var is = _isObject(document$1) && _isObject(document$1.createElement);

  var _domCreate = function _domCreate(it) {
    return is ? document$1.createElement(it) : {};
  };

  var _ie8DomDefine = !_descriptors && !_fails(function () {
    return Object.defineProperty(_domCreate('div'), 'a', {
      get: function get() {
        return 7;
      }
    }).a != 7;
  }); // 7.1.1 ToPrimitive(input [, PreferredType])
  // instead of the ES6 spec version, we didn't implement @@toPrimitive case
  // and the second argument - flag - preferred type is a string


  var _toPrimitive = function _toPrimitive(it, S) {
    if (!_isObject(it)) return it;
    var fn, val;
    if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
    if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
    if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
    throw TypeError("Can't convert object to primitive value");
  };

  var dP = Object.defineProperty;
  var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    _anObject(O);

    P = _toPrimitive(P, true);

    _anObject(Attributes);

    if (_ie8DomDefine) try {
      return dP(O, P, Attributes);
    } catch (e) {
      /* empty */
    }
    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };
  var _objectDp = {
    f: f
  };

  var _propertyDesc = function _propertyDesc(bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };

  var _hide = _descriptors ? function (object, key, value) {
    return _objectDp.f(object, key, _propertyDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };

  var hasOwnProperty = {}.hasOwnProperty;

  var _has = function _has(it, key) {
    return hasOwnProperty.call(it, key);
  };

  var PROTOTYPE = 'prototype';

  var $export = function $export(type, name, source) {
    var IS_FORCED = type & $export.F;
    var IS_GLOBAL = type & $export.G;
    var IS_STATIC = type & $export.S;
    var IS_PROTO = type & $export.P;
    var IS_BIND = type & $export.B;
    var IS_WRAP = type & $export.W;
    var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
    var expProto = exports[PROTOTYPE];
    var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE];
    var key, own, out;
    if (IS_GLOBAL) source = name;

    for (key in source) {
      // contains in native
      own = !IS_FORCED && target && target[key] !== undefined;
      if (own && _has(exports, key)) continue; // export native or passed

      out = own ? target[key] : source[key]; // prevent global pollution for namespaces

      exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key] // bind timers to global for call from export context
      : IS_BIND && own ? _ctx(out, _global) // wrap global constructors for prevent change them in library
      : IS_WRAP && target[key] == out ? function (C) {
        var F = function F(a, b, c) {
          if (this instanceof C) {
            switch (arguments.length) {
              case 0:
                return new C();

              case 1:
                return new C(a);

              case 2:
                return new C(a, b);
            }

            return new C(a, b, c);
          }

          return C.apply(this, arguments);
        };

        F[PROTOTYPE] = C[PROTOTYPE];
        return F; // make static versions for prototype methods
      }(out) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out; // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%

      if (IS_PROTO) {
        (exports.virtual || (exports.virtual = {}))[key] = out; // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%

        if (type & $export.R && expProto && !expProto[key]) _hide(expProto, key, out);
      }
    }
  }; // type bitmap


  $export.F = 1; // forced

  $export.G = 2; // global

  $export.S = 4; // static

  $export.P = 8; // proto

  $export.B = 16; // bind

  $export.W = 32; // wrap

  $export.U = 64; // safe

  $export.R = 128; // real proto method for `library`

  var _export = $export; // 7.2.1 RequireObjectCoercible(argument)

  var _defined = function _defined(it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
  };

  var _stringWs = "\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003" + "\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";

  var space = '[' + _stringWs + ']';
  var non = "\u200B\x85";
  var ltrim = RegExp('^' + space + space + '*');
  var rtrim = RegExp(space + space + '*$');

  var exporter = function exporter(KEY, exec, ALIAS) {
    var exp = {};

    var FORCE = _fails(function () {
      return !!_stringWs[KEY]() || non[KEY]() != non;
    });

    var fn = exp[KEY] = FORCE ? exec(trim) : _stringWs[KEY];
    if (ALIAS) exp[ALIAS] = fn;

    _export(_export.P + _export.F * FORCE, 'String', exp);
  }; // 1 -> String#trimLeft
  // 2 -> String#trimRight
  // 3 -> String#trim


  var trim = exporter.trim = function (string, TYPE) {
    string = String(_defined(string));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };

  var _stringTrim = exporter;
  var $parseInt = _global.parseInt;
  var $trim = _stringTrim.trim;
  var hex = /^[-+]?0[xX]/;

  var _parseInt = $parseInt(_stringWs + '08') !== 8 || $parseInt(_stringWs + '0x16') !== 22 ? function parseInt(str, radix) {
    var string = $trim(String(str), 3);
    return $parseInt(string, radix >>> 0 || (hex.test(string) ? 16 : 10));
  } : $parseInt; // 18.2.5 parseInt(string, radix)


  _export(_export.G + _export.F * (parseInt != _parseInt), {
    parseInt: _parseInt
  });

  var _parseInt$1 = _core.parseInt;
  var _parseInt$2 = _parseInt$1; // most Object methods by ES6 should accept primitives

  var _objectSap = function _objectSap(KEY, exec) {
    var fn = (_core.Object || {})[KEY] || Object[KEY];
    var exp = {};
    exp[KEY] = exec(fn);

    _export(_export.S + _export.F * _fails(function () {
      fn(1);
    }), 'Object', exp);
  };

  var toString = {}.toString;

  var _cof = function _cof(it) {
    return toString.call(it).slice(8, -1);
  }; // fallback for non-array-like ES3 and non-enumerable old V8 strings
  // eslint-disable-next-line no-prototype-builtins


  var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
    return _cof(it) == 'String' ? it.split('') : Object(it);
  }; // to indexed object, toObject with fallback for non-array-like ES3 strings


  var _toIobject = function _toIobject(it) {
    return _iobject(_defined(it));
  }; // 7.1.4 ToInteger


  var ceil = Math.ceil;
  var floor = Math.floor;

  var _toInteger = function _toInteger(it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  }; // 7.1.15 ToLength


  var min = Math.min;

  var _toLength = function _toLength(it) {
    return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
  };

  var max = Math.max;
  var min$1 = Math.min;

  var _toAbsoluteIndex = function _toAbsoluteIndex(index, length) {
    index = _toInteger(index);
    return index < 0 ? max(index + length, 0) : min$1(index, length);
  }; // false -> Array#indexOf
  // true  -> Array#includes


  var _arrayIncludes = function _arrayIncludes(IS_INCLUDES) {
    return function ($this, el, fromIndex) {
      var O = _toIobject($this);

      var length = _toLength(O.length);

      var index = _toAbsoluteIndex(fromIndex, length);

      var value; // Array#includes uses SameValueZero equality algorithm
      // eslint-disable-next-line no-self-compare

      if (IS_INCLUDES && el != el) while (length > index) {
        value = O[index++]; // eslint-disable-next-line no-self-compare

        if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not
      } else for (; length > index; index++) {
        if (IS_INCLUDES || index in O) {
          if (O[index] === el) return IS_INCLUDES || index || 0;
        }
      }
      return !IS_INCLUDES && -1;
    };
  };

  var _library = true;

  var _shared = createCommonjsModule(function (module) {
    var SHARED = '__core-js_shared__';
    var store = _global[SHARED] || (_global[SHARED] = {});
    (module.exports = function (key, value) {
      return store[key] || (store[key] = value !== undefined ? value : {});
    })('versions', []).push({
      version: _core.version,
      mode: 'pure',
      copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
    });
  });

  var id = 0;
  var px = Math.random();

  var _uid = function _uid(key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };

  var shared = _shared('keys');

  var _sharedKey = function _sharedKey(key) {
    return shared[key] || (shared[key] = _uid(key));
  };

  var arrayIndexOf = _arrayIncludes(false);

  var IE_PROTO = _sharedKey('IE_PROTO');

  var _objectKeysInternal = function _objectKeysInternal(object, names) {
    var O = _toIobject(object);

    var i = 0;
    var result = [];
    var key;

    for (key in O) {
      if (key != IE_PROTO) _has(O, key) && result.push(key);
    } // Don't enum bug & hidden keys


    while (names.length > i) {
      if (_has(O, key = names[i++])) {
        ~arrayIndexOf(result, key) || result.push(key);
      }
    }

    return result;
  }; // IE 8- don't enum bug keys


  var _enumBugKeys = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(','); // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)


  var hiddenKeys = _enumBugKeys.concat('length', 'prototype');

  var f$1 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return _objectKeysInternal(O, hiddenKeys);
  };

  var _objectGopn = {
    f: f$1
  }; // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window

  var gOPN = _objectGopn.f;
  var toString$1 = {}.toString;
  var windowNames = (typeof window === "undefined" ? "undefined" : _typeof4(window)) == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

  var getWindowNames = function getWindowNames(it) {
    try {
      return gOPN(it);
    } catch (e) {
      return windowNames.slice();
    }
  };

  var f$2 = function getOwnPropertyNames(it) {
    return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));
  };

  var _objectGopnExt = {
    f: f$2
  }; // 19.1.2.7 Object.getOwnPropertyNames(O)

  _objectSap('getOwnPropertyNames', function () {
    return _objectGopnExt.f;
  });

  var $Object = _core.Object;

  var getOwnPropertyNames = function getOwnPropertyNames(it) {
    return $Object.getOwnPropertyNames(it);
  };

  var getOwnPropertyNames$1 = getOwnPropertyNames;
  var es6_object_toString = /*#__PURE__*/Object.freeze({}); // true  -> String#at
  // false -> String#codePointAt

  var _stringAt = function _stringAt(TO_STRING) {
    return function (that, pos) {
      var s = String(_defined(that));

      var i = _toInteger(pos);

      var l = s.length;
      var a, b;
      if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };

  var _redefine = _hide;
  var _iterators = {}; // 19.1.2.14 / 15.2.3.14 Object.keys(O)

  var _objectKeys = Object.keys || function keys(O) {
    return _objectKeysInternal(O, _enumBugKeys);
  };

  var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
    _anObject(O);

    var keys = _objectKeys(Properties);

    var length = keys.length;
    var i = 0;
    var P;

    while (length > i) {
      _objectDp.f(O, P = keys[i++], Properties[P]);
    }

    return O;
  };

  var document$2 = _global.document;

  var _html = document$2 && document$2.documentElement; // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])


  var IE_PROTO$1 = _sharedKey('IE_PROTO');

  var Empty = function Empty() {
    /* empty */
  };

  var PROTOTYPE$1 = 'prototype'; // Create object with fake `null` prototype: use iframe Object with cleared prototype

  var _createDict = function createDict() {
    // Thrash, waste and sodomy: IE GC bug
    var iframe = _domCreate('iframe');

    var i = _enumBugKeys.length;
    var lt = '<';
    var gt = '>';
    var iframeDocument;
    iframe.style.display = 'none';

    _html.appendChild(iframe);

    iframe.src = 'javascript:'; // eslint-disable-line no-script-url
    // createDict = iframe.contentWindow.Object;
    // html.removeChild(iframe);

    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
    iframeDocument.close();
    _createDict = iframeDocument.F;

    while (i--) {
      delete _createDict[PROTOTYPE$1][_enumBugKeys[i]];
    }

    return _createDict();
  };

  var _objectCreate = Object.create || function create(O, Properties) {
    var result;

    if (O !== null) {
      Empty[PROTOTYPE$1] = _anObject(O);
      result = new Empty();
      Empty[PROTOTYPE$1] = null; // add "__proto__" for Object.getPrototypeOf polyfill

      result[IE_PROTO$1] = O;
    } else result = _createDict();

    return Properties === undefined ? result : _objectDps(result, Properties);
  };

  var _wks = createCommonjsModule(function (module) {
    var store = _shared('wks');

    var _Symbol = _global.Symbol;
    var USE_SYMBOL = typeof _Symbol == 'function';

    var $exports = module.exports = function (name) {
      return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : _uid)('Symbol.' + name));
    };

    $exports.store = store;
  });

  var def = _objectDp.f;

  var TAG = _wks('toStringTag');

  var _setToStringTag = function _setToStringTag(it, tag, stat) {
    if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {
      configurable: true,
      value: tag
    });
  };

  var IteratorPrototype = {}; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()

  _hide(IteratorPrototype, _wks('iterator'), function () {
    return this;
  });

  var _iterCreate = function _iterCreate(Constructor, NAME, next) {
    Constructor.prototype = _objectCreate(IteratorPrototype, {
      next: _propertyDesc(1, next)
    });

    _setToStringTag(Constructor, NAME + ' Iterator');
  }; // 7.1.13 ToObject(argument)


  var _toObject = function _toObject(it) {
    return Object(_defined(it));
  }; // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)


  var IE_PROTO$2 = _sharedKey('IE_PROTO');

  var ObjectProto = Object.prototype;

  var _objectGpo = Object.getPrototypeOf || function (O) {
    O = _toObject(O);
    if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];

    if (typeof O.constructor == 'function' && O instanceof O.constructor) {
      return O.constructor.prototype;
    }

    return O instanceof Object ? ObjectProto : null;
  };

  var ITERATOR = _wks('iterator');

  var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`

  var FF_ITERATOR = '@@iterator';
  var KEYS = 'keys';
  var VALUES = 'values';

  var returnThis = function returnThis() {
    return this;
  };

  var _iterDefine = function _iterDefine(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
    _iterCreate(Constructor, NAME, next);

    var getMethod = function getMethod(kind) {
      if (!BUGGY && kind in proto) return proto[kind];

      switch (kind) {
        case KEYS:
          return function keys() {
            return new Constructor(this, kind);
          };

        case VALUES:
          return function values() {
            return new Constructor(this, kind);
          };
      }

      return function entries() {
        return new Constructor(this, kind);
      };
    };

    var TAG = NAME + ' Iterator';
    var DEF_VALUES = DEFAULT == VALUES;
    var VALUES_BUG = false;
    var proto = Base.prototype;
    var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
    var $default = $native || getMethod(DEFAULT);
    var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
    var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
    var methods, key, IteratorPrototype; // Fix native

    if ($anyNative) {
      IteratorPrototype = _objectGpo($anyNative.call(new Base()));

      if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
        // Set @@toStringTag to native iterators
        _setToStringTag(IteratorPrototype, TAG, true);
      }
    } // fix Array#{values, @@iterator}.name in V8 / FF


    if (DEF_VALUES && $native && $native.name !== VALUES) {
      VALUES_BUG = true;

      $default = function values() {
        return $native.call(this);
      };
    } // Define iterator


    if (FORCED && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
      _hide(proto, ITERATOR, $default);
    } // Plug for library


    _iterators[NAME] = $default;
    _iterators[TAG] = returnThis;

    if (DEFAULT) {
      methods = {
        values: DEF_VALUES ? $default : getMethod(VALUES),
        keys: IS_SET ? $default : getMethod(KEYS),
        entries: $entries
      };
      if (FORCED) for (key in methods) {
        if (!(key in proto)) _redefine(proto, key, methods[key]);
      } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }

    return methods;
  };

  var $at = _stringAt(true); // 21.1.3.27 String.prototype[@@iterator]()


  _iterDefine(String, 'String', function (iterated) {
    this._t = String(iterated); // target

    this._i = 0; // next index
    // 21.1.5.2.1 %StringIteratorPrototype%.next()
  }, function () {
    var O = this._t;
    var index = this._i;
    var point;
    if (index >= O.length) return {
      value: undefined,
      done: true
    };
    point = $at(O, index);
    this._i += point.length;
    return {
      value: point,
      done: false
    };
  });

  var _iterStep = function _iterStep(done, value) {
    return {
      value: value,
      done: !!done
    };
  }; // 22.1.3.4 Array.prototype.entries()
  // 22.1.3.13 Array.prototype.keys()
  // 22.1.3.29 Array.prototype.values()
  // 22.1.3.30 Array.prototype[@@iterator]()


  var es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {
    this._t = _toIobject(iterated); // target

    this._i = 0; // next index

    this._k = kind; // kind
    // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
  }, function () {
    var O = this._t;
    var kind = this._k;
    var index = this._i++;

    if (!O || index >= O.length) {
      this._t = undefined;
      return _iterStep(1);
    }

    if (kind == 'keys') return _iterStep(0, index);
    if (kind == 'values') return _iterStep(0, O[index]);
    return _iterStep(0, [index, O[index]]);
  }, 'values'); // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)


  _iterators.Arguments = _iterators.Array;

  var TO_STRING_TAG = _wks('toStringTag');

  var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' + 'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' + 'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' + 'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' + 'TextTrackList,TouchList').split(',');

  for (var i = 0; i < DOMIterables.length; i++) {
    var NAME = DOMIterables[i];
    var Collection = _global[NAME];
    var proto = Collection && Collection.prototype;
    if (proto && !proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);
    _iterators[NAME] = _iterators.Array;
  } // getting tag from 19.1.3.6 Object.prototype.toString()


  var TAG$1 = _wks('toStringTag'); // ES3 wrong here


  var ARG = _cof(function () {
    return arguments;
  }()) == 'Arguments'; // fallback for IE11 Script Access Denied error

  var tryGet = function tryGet(it, key) {
    try {
      return it[key];
    } catch (e) {
      /* empty */
    }
  };

  var _classof = function _classof(it) {
    var O, T, B;
    return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T // builtinTag case
    : ARG ? _cof(O) // ES3 arguments fallback
    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
  };

  var _anInstance = function _anInstance(it, Constructor, name, forbiddenField) {
    if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {
      throw TypeError(name + ': incorrect invocation!');
    }

    return it;
  }; // call something on iterator step with safe closing on error


  var _iterCall = function _iterCall(iterator, fn, value, entries) {
    try {
      return entries ? fn(_anObject(value)[0], value[1]) : fn(value); // 7.4.6 IteratorClose(iterator, completion)
    } catch (e) {
      var ret = iterator['return'];
      if (ret !== undefined) _anObject(ret.call(iterator));
      throw e;
    }
  }; // check on default Array iterator


  var ITERATOR$1 = _wks('iterator');

  var ArrayProto = Array.prototype;

  var _isArrayIter = function _isArrayIter(it) {
    return it !== undefined && (_iterators.Array === it || ArrayProto[ITERATOR$1] === it);
  };

  var ITERATOR$2 = _wks('iterator');

  var core_getIteratorMethod = _core.getIteratorMethod = function (it) {
    if (it != undefined) return it[ITERATOR$2] || it['@@iterator'] || _iterators[_classof(it)];
  };

  var _forOf = createCommonjsModule(function (module) {
    var BREAK = {};
    var RETURN = {};

    var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
      var iterFn = ITERATOR ? function () {
        return iterable;
      } : core_getIteratorMethod(iterable);

      var f = _ctx(fn, that, entries ? 2 : 1);

      var index = 0;
      var length, step, iterator, result;
      if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!'); // fast case for arrays with default iterator

      if (_isArrayIter(iterFn)) for (length = _toLength(iterable.length); length > index; index++) {
        result = entries ? f(_anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
        if (result === BREAK || result === RETURN) return result;
      } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
        result = _iterCall(iterator, f, step.value, entries);
        if (result === BREAK || result === RETURN) return result;
      }
    };

    exports.BREAK = BREAK;
    exports.RETURN = RETURN;
  }); // 7.3.20 SpeciesConstructor(O, defaultConstructor)


  var SPECIES = _wks('species');

  var _speciesConstructor = function _speciesConstructor(O, D) {
    var C = _anObject(O).constructor;

    var S;
    return C === undefined || (S = _anObject(C)[SPECIES]) == undefined ? D : _aFunction(S);
  }; // fast apply, http://jsperf.lnkit.com/fast-apply/5


  var _invoke = function _invoke(fn, args, that) {
    var un = that === undefined;

    switch (args.length) {
      case 0:
        return un ? fn() : fn.call(that);

      case 1:
        return un ? fn(args[0]) : fn.call(that, args[0]);

      case 2:
        return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);

      case 3:
        return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);

      case 4:
        return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);
    }

    return fn.apply(that, args);
  };

  var process$1 = _global.process;
  var setTask = _global.setImmediate;
  var clearTask = _global.clearImmediate;
  var MessageChannel = _global.MessageChannel;
  var Dispatch = _global.Dispatch;
  var counter = 0;
  var queue = {};
  var ONREADYSTATECHANGE = 'onreadystatechange';
  var defer, channel, port;

  var run = function run() {
    var id = +this; // eslint-disable-next-line no-prototype-builtins

    if (queue.hasOwnProperty(id)) {
      var fn = queue[id];
      delete queue[id];
      fn();
    }
  };

  var listener = function listener(event) {
    run.call(event.data);
  }; // Node.js 0.9+ & IE10+ has setImmediate, otherwise:


  if (!setTask || !clearTask) {
    setTask = function setImmediate(fn) {
      var args = [];
      var i = 1;

      while (arguments.length > i) {
        args.push(arguments[i++]);
      }

      queue[++counter] = function () {
        // eslint-disable-next-line no-new-func
        _invoke(typeof fn == 'function' ? fn : Function(fn), args);
      };

      defer(counter);
      return counter;
    };

    clearTask = function clearImmediate(id) {
      delete queue[id];
    }; // Node.js 0.8-


    if (_cof(process$1) == 'process') {
      defer = function defer(id) {
        process$1.nextTick(_ctx(run, id, 1));
      }; // Sphere (JS game engine) Dispatch API

    } else if (Dispatch && Dispatch.now) {
      defer = function defer(id) {
        Dispatch.now(_ctx(run, id, 1));
      }; // Browsers with MessageChannel, includes WebWorkers

    } else if (MessageChannel) {
      channel = new MessageChannel();
      port = channel.port2;
      channel.port1.onmessage = listener;
      defer = _ctx(port.postMessage, port, 1); // Browsers with postMessage, skip WebWorkers
      // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
    } else if (_global.addEventListener && typeof postMessage == 'function' && !_global.importScripts) {
      defer = function defer(id) {
        _global.postMessage(id + '', '*');
      };

      _global.addEventListener('message', listener, false); // IE8-

    } else if (ONREADYSTATECHANGE in _domCreate('script')) {
      defer = function defer(id) {
        _html.appendChild(_domCreate('script'))[ONREADYSTATECHANGE] = function () {
          _html.removeChild(this);

          run.call(id);
        };
      }; // Rest old browsers

    } else {
      defer = function defer(id) {
        setTimeout(_ctx(run, id, 1), 0);
      };
    }
  }

  var _task = {
    set: setTask,
    clear: clearTask
  };
  var macrotask = _task.set;
  var Observer = _global.MutationObserver || _global.WebKitMutationObserver;
  var process$2 = _global.process;
  var Promise = _global.Promise;
  var isNode = _cof(process$2) == 'process';

  var _microtask = function _microtask() {
    var head, last, notify;

    var flush = function flush() {
      var parent, fn;
      if (isNode && (parent = process$2.domain)) parent.exit();

      while (head) {
        fn = head.fn;
        head = head.next;

        try {
          fn();
        } catch (e) {
          if (head) notify();else last = undefined;
          throw e;
        }
      }

      last = undefined;
      if (parent) parent.enter();
    }; // Node.js


    if (isNode) {
      notify = function notify() {
        process$2.nextTick(flush);
      }; // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339

    } else if (Observer && !(_global.navigator && _global.navigator.standalone)) {
      var toggle = true;
      var node = document.createTextNode('');
      new Observer(flush).observe(node, {
        characterData: true
      }); // eslint-disable-line no-new

      notify = function notify() {
        node.data = toggle = !toggle;
      }; // environments with maybe non-completely correct, but existent Promise

    } else if (Promise && Promise.resolve) {
      // Promise.resolve without an argument throws an error in LG WebOS 2
      var promise = Promise.resolve(undefined);

      notify = function notify() {
        promise.then(flush);
      }; // for other environments - macrotask based on:
      // - setImmediate
      // - MessageChannel
      // - window.postMessag
      // - onreadystatechange
      // - setTimeout

    } else {
      notify = function notify() {
        // strange IE + webpack dev server bug - use .call(global)
        macrotask.call(_global, flush);
      };
    }

    return function (fn) {
      var task = {
        fn: fn,
        next: undefined
      };
      if (last) last.next = task;

      if (!head) {
        head = task;
        notify();
      }

      last = task;
    };
  }; // 25.4.1.5 NewPromiseCapability(C)


  function PromiseCapability(C) {
    var resolve, reject;
    this.promise = new C(function ($$resolve, $$reject) {
      if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
      resolve = $$resolve;
      reject = $$reject;
    });
    this.resolve = _aFunction(resolve);
    this.reject = _aFunction(reject);
  }

  var f$3 = function f$3(C) {
    return new PromiseCapability(C);
  };

  var _newPromiseCapability = {
    f: f$3
  };

  var _perform = function _perform(exec) {
    try {
      return {
        e: false,
        v: exec()
      };
    } catch (e) {
      return {
        e: true,
        v: e
      };
    }
  };

  var navigator$1 = _global.navigator;

  var _userAgent = navigator$1 && navigator$1.userAgent || '';

  var _promiseResolve = function _promiseResolve(C, x) {
    _anObject(C);

    if (_isObject(x) && x.constructor === C) return x;

    var promiseCapability = _newPromiseCapability.f(C);

    var resolve = promiseCapability.resolve;
    resolve(x);
    return promiseCapability.promise;
  };

  var _redefineAll = function _redefineAll(target, src, safe) {
    for (var key in src) {
      if (safe && target[key]) target[key] = src[key];else _hide(target, key, src[key]);
    }

    return target;
  };

  var SPECIES$1 = _wks('species');

  var _setSpecies = function _setSpecies(KEY) {
    var C = typeof _core[KEY] == 'function' ? _core[KEY] : _global[KEY];
    if (_descriptors && C && !C[SPECIES$1]) _objectDp.f(C, SPECIES$1, {
      configurable: true,
      get: function get() {
        return this;
      }
    });
  };

  var ITERATOR$3 = _wks('iterator');

  var SAFE_CLOSING = false;

  try {
    var riter = [7][ITERATOR$3]();

    riter['return'] = function () {
      SAFE_CLOSING = true;
    }; // eslint-disable-next-line no-throw-literal


    Array.from(riter, function () {
      throw 2;
    });
  } catch (e) {
    /* empty */
  }

  var _iterDetect = function _iterDetect(exec, skipClosing) {
    if (!skipClosing && !SAFE_CLOSING) return false;
    var safe = false;

    try {
      var arr = [7];
      var iter = arr[ITERATOR$3]();

      iter.next = function () {
        return {
          done: safe = true
        };
      };

      arr[ITERATOR$3] = function () {
        return iter;
      };

      exec(arr);
    } catch (e) {
      /* empty */
    }

    return safe;
  };

  var task = _task.set;

  var microtask = _microtask();

  var PROMISE = 'Promise';
  var TypeError$1 = _global.TypeError;
  var process$3 = _global.process;
  var versions = process$3 && process$3.versions;
  var v8 = versions && versions.v8 || '';
  var $Promise = _global[PROMISE];
  var isNode$1 = _classof(process$3) == 'process';

  var empty = function empty() {
    /* empty */
  };

  var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
  var newPromiseCapability = newGenericPromiseCapability = _newPromiseCapability.f;
  var USE_NATIVE = !!function () {
    try {
      // correct subclassing with @@species support
      var promise = $Promise.resolve(1);

      var FakePromise = (promise.constructor = {})[_wks('species')] = function (exec) {
        exec(empty, empty);
      }; // unhandled rejections tracking support, NodeJS Promise without it fails @@species test


      return (isNode$1 || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0 && _userAgent.indexOf('Chrome/66') === -1;
    } catch (e) {
      /* empty */
    }
  }(); // helpers

  var isThenable = function isThenable(it) {
    var then;
    return _isObject(it) && typeof (then = it.then) == 'function' ? then : false;
  };

  var notify = function notify(promise, isReject) {
    if (promise._n) return;
    promise._n = true;
    var chain = promise._c;
    microtask(function () {
      var value = promise._v;
      var ok = promise._s == 1;
      var i = 0;

      var run = function run(reaction) {
        var handler = ok ? reaction.ok : reaction.fail;
        var resolve = reaction.resolve;
        var reject = reaction.reject;
        var domain = reaction.domain;
        var result, then, exited;

        try {
          if (handler) {
            if (!ok) {
              if (promise._h == 2) onHandleUnhandled(promise);
              promise._h = 1;
            }

            if (handler === true) result = value;else {
              if (domain) domain.enter();
              result = handler(value); // may throw

              if (domain) {
                domain.exit();
                exited = true;
              }
            }

            if (result === reaction.promise) {
              reject(TypeError$1('Promise-chain cycle'));
            } else if (then = isThenable(result)) {
              then.call(result, resolve, reject);
            } else resolve(result);
          } else reject(value);
        } catch (e) {
          if (domain && !exited) domain.exit();
          reject(e);
        }
      };

      while (chain.length > i) {
        run(chain[i++]);
      } // variable length - can't use forEach


      promise._c = [];
      promise._n = false;
      if (isReject && !promise._h) onUnhandled(promise);
    });
  };

  var onUnhandled = function onUnhandled(promise) {
    task.call(_global, function () {
      var value = promise._v;
      var unhandled = isUnhandled(promise);
      var result, handler, console;

      if (unhandled) {
        result = _perform(function () {
          if (isNode$1) {
            process$3.emit('unhandledRejection', value, promise);
          } else if (handler = _global.onunhandledrejection) {
            handler({
              promise: promise,
              reason: value
            });
          } else if ((console = _global.console) && console.error) {
            console.error('Unhandled promise rejection', value);
          }
        }); // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should

        promise._h = isNode$1 || isUnhandled(promise) ? 2 : 1;
      }

      promise._a = undefined;
      if (unhandled && result.e) throw result.v;
    });
  };

  var isUnhandled = function isUnhandled(promise) {
    return promise._h !== 1 && (promise._a || promise._c).length === 0;
  };

  var onHandleUnhandled = function onHandleUnhandled(promise) {
    task.call(_global, function () {
      var handler;

      if (isNode$1) {
        process$3.emit('rejectionHandled', promise);
      } else if (handler = _global.onrejectionhandled) {
        handler({
          promise: promise,
          reason: promise._v
        });
      }
    });
  };

  var $reject = function $reject(value) {
    var promise = this;
    if (promise._d) return;
    promise._d = true;
    promise = promise._w || promise; // unwrap

    promise._v = value;
    promise._s = 2;
    if (!promise._a) promise._a = promise._c.slice();
    notify(promise, true);
  };

  var $resolve = function $resolve(value) {
    var promise = this;
    var then;
    if (promise._d) return;
    promise._d = true;
    promise = promise._w || promise; // unwrap

    try {
      if (promise === value) throw TypeError$1("Promise can't be resolved itself");

      if (then = isThenable(value)) {
        microtask(function () {
          var wrapper = {
            _w: promise,
            _d: false
          }; // wrap

          try {
            then.call(value, _ctx($resolve, wrapper, 1), _ctx($reject, wrapper, 1));
          } catch (e) {
            $reject.call(wrapper, e);
          }
        });
      } else {
        promise._v = value;
        promise._s = 1;
        notify(promise, false);
      }
    } catch (e) {
      $reject.call({
        _w: promise,
        _d: false
      }, e); // wrap
    }
  }; // constructor polyfill


  if (!USE_NATIVE) {
    // 25.4.3.1 Promise(executor)
    $Promise = function Promise(executor) {
      _anInstance(this, $Promise, PROMISE, '_h');

      _aFunction(executor);

      Internal.call(this);

      try {
        executor(_ctx($resolve, this, 1), _ctx($reject, this, 1));
      } catch (err) {
        $reject.call(this, err);
      }
    }; // eslint-disable-next-line no-unused-vars


    Internal = function Promise(executor) {
      this._c = []; // <- awaiting reactions

      this._a = undefined; // <- checked in isUnhandled reactions

      this._s = 0; // <- state

      this._d = false; // <- done

      this._v = undefined; // <- value

      this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled

      this._n = false; // <- notify
    };

    Internal.prototype = _redefineAll($Promise.prototype, {
      // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
      then: function then(onFulfilled, onRejected) {
        var reaction = newPromiseCapability(_speciesConstructor(this, $Promise));
        reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
        reaction.fail = typeof onRejected == 'function' && onRejected;
        reaction.domain = isNode$1 ? process$3.domain : undefined;

        this._c.push(reaction);

        if (this._a) this._a.push(reaction);
        if (this._s) notify(this, false);
        return reaction.promise;
      },
      // 25.4.5.1 Promise.prototype.catch(onRejected)
      'catch': function _catch(onRejected) {
        return this.then(undefined, onRejected);
      }
    });

    OwnPromiseCapability = function OwnPromiseCapability() {
      var promise = new Internal();
      this.promise = promise;
      this.resolve = _ctx($resolve, promise, 1);
      this.reject = _ctx($reject, promise, 1);
    };

    _newPromiseCapability.f = newPromiseCapability = function newPromiseCapability(C) {
      return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
    };
  }

  _export(_export.G + _export.W + _export.F * !USE_NATIVE, {
    Promise: $Promise
  });

  _setToStringTag($Promise, PROMISE);

  _setSpecies(PROMISE);

  Wrapper = _core[PROMISE]; // statics

  _export(_export.S + _export.F * !USE_NATIVE, PROMISE, {
    // 25.4.4.5 Promise.reject(r)
    reject: function reject(r) {
      var capability = newPromiseCapability(this);
      var $$reject = capability.reject;
      $$reject(r);
      return capability.promise;
    }
  });

  _export(_export.S + _export.F * _library, PROMISE, {
    // 25.4.4.6 Promise.resolve(x)
    resolve: function resolve(x) {
      return _promiseResolve(this === Wrapper ? $Promise : this, x);
    }
  });

  _export(_export.S + _export.F * !(USE_NATIVE && _iterDetect(function (iter) {
    $Promise.all(iter)['catch'](empty);
  })), PROMISE, {
    // 25.4.4.1 Promise.all(iterable)
    all: function all(iterable) {
      var C = this;
      var capability = newPromiseCapability(C);
      var resolve = capability.resolve;
      var reject = capability.reject;

      var result = _perform(function () {
        var values = [];
        var index = 0;
        var remaining = 1;

        _forOf(iterable, false, function (promise) {
          var $index = index++;
          var alreadyCalled = false;
          values.push(undefined);
          remaining++;
          C.resolve(promise).then(function (value) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values[$index] = value;
            --remaining || resolve(values);
          }, reject);
        });

        --remaining || resolve(values);
      });

      if (result.e) reject(result.v);
      return capability.promise;
    },
    // 25.4.4.4 Promise.race(iterable)
    race: function race(iterable) {
      var C = this;
      var capability = newPromiseCapability(C);
      var reject = capability.reject;

      var result = _perform(function () {
        _forOf(iterable, false, function (promise) {
          C.resolve(promise).then(capability.resolve, reject);
        });
      });

      if (result.e) reject(result.v);
      return capability.promise;
    }
  });

  _export(_export.P + _export.R, 'Promise', {
    'finally': function _finally(onFinally) {
      var C = _speciesConstructor(this, _core.Promise || _global.Promise);

      var isFunction = typeof onFinally == 'function';
      return this.then(isFunction ? function (x) {
        return _promiseResolve(C, onFinally()).then(function () {
          return x;
        });
      } : onFinally, isFunction ? function (e) {
        return _promiseResolve(C, onFinally()).then(function () {
          throw e;
        });
      } : onFinally);
    }
  }); // https://github.com/tc39/proposal-promise-try


  _export(_export.S, 'Promise', {
    'try': function _try(callbackfn) {
      var promiseCapability = _newPromiseCapability.f(this);

      var result = _perform(callbackfn);

      (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
      return promiseCapability.promise;
    }
  });

  getCjsExportFromNamespace(es6_object_toString);
  var promise = _core.Promise;
  var promise$1 = promise; // 19.1.2.14 Object.keys(O)

  _objectSap('keys', function () {
    return function keys(it) {
      return _objectKeys(_toObject(it));
    };
  });

  var keys = _core.Object.keys;
  var keys$1 = keys; // 7.2.2 IsArray(argument)

  var _isArray = Array.isArray || function isArray(arg) {
    return _cof(arg) == 'Array';
  }; // 22.1.2.2 / 15.4.3.2 Array.isArray(arg)


  _export(_export.S, 'Array', {
    isArray: _isArray
  });

  var isArray = _core.Array.isArray;
  var isArray$1 = isArray;
  var f$4 = _wks;
  var _wksExt = {
    f: f$4
  };

  var iterator = _wksExt.f('iterator');

  var iterator$1 = iterator;

  var _meta = createCommonjsModule(function (module) {
    var META = _uid('meta');

    var setDesc = _objectDp.f;
    var id = 0;

    var isExtensible = Object.isExtensible || function () {
      return true;
    };

    var FREEZE = !_fails(function () {
      return isExtensible(Object.preventExtensions({}));
    });

    var setMeta = function setMeta(it) {
      setDesc(it, META, {
        value: {
          i: 'O' + ++id,
          // object ID
          w: {} // weak collections IDs

        }
      });
    };

    var fastKey = function fastKey(it, create) {
      // return primitive with prefix
      if (!_isObject(it)) return _typeof4(it) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;

      if (!_has(it, META)) {
        // can't set metadata to uncaught frozen object
        if (!isExtensible(it)) return 'F'; // not necessary to add metadata

        if (!create) return 'E'; // add missing metadata

        setMeta(it); // return object ID
      }

      return it[META].i;
    };

    var getWeak = function getWeak(it, create) {
      if (!_has(it, META)) {
        // can't set metadata to uncaught frozen object
        if (!isExtensible(it)) return true; // not necessary to add metadata

        if (!create) return false; // add missing metadata

        setMeta(it); // return hash weak collections IDs
      }

      return it[META].w;
    }; // add metadata on freeze-family methods calling


    var onFreeze = function onFreeze(it) {
      if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);
      return it;
    };

    var meta = module.exports = {
      KEY: META,
      NEED: false,
      fastKey: fastKey,
      getWeak: getWeak,
      onFreeze: onFreeze
    };
  });

  var _meta_1 = _meta.KEY;
  var _meta_2 = _meta.NEED;
  var _meta_3 = _meta.fastKey;
  var _meta_4 = _meta.getWeak;
  var _meta_5 = _meta.onFreeze;
  var defineProperty = _objectDp.f;

  var _wksDefine = function _wksDefine(name) {
    var $Symbol = _core.Symbol || (_core.Symbol = {});
    if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, {
      value: _wksExt.f(name)
    });
  };

  var f$5 = Object.getOwnPropertySymbols;
  var _objectGops = {
    f: f$5
  };
  var f$6 = {}.propertyIsEnumerable;
  var _objectPie = {
    f: f$6
  }; // all enumerable object keys, includes symbols

  var _enumKeys = function _enumKeys(it) {
    var result = _objectKeys(it);

    var getSymbols = _objectGops.f;

    if (getSymbols) {
      var symbols = getSymbols(it);
      var isEnum = _objectPie.f;
      var i = 0;
      var key;

      while (symbols.length > i) {
        if (isEnum.call(it, key = symbols[i++])) result.push(key);
      }
    }

    return result;
  };

  var gOPD = Object.getOwnPropertyDescriptor;
  var f$7 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {
    O = _toIobject(O);
    P = _toPrimitive(P, true);
    if (_ie8DomDefine) try {
      return gOPD(O, P);
    } catch (e) {
      /* empty */
    }
    if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);
  };
  var _objectGopd = {
    f: f$7
  }; // ECMAScript 6 symbols shim

  var META = _meta.KEY;
  var gOPD$1 = _objectGopd.f;
  var dP$1 = _objectDp.f;
  var gOPN$1 = _objectGopnExt.f;
  var $Symbol = _global.Symbol;
  var $JSON = _global.JSON;

  var _stringify = $JSON && $JSON.stringify;

  var PROTOTYPE$2 = 'prototype';

  var HIDDEN = _wks('_hidden');

  var TO_PRIMITIVE = _wks('toPrimitive');

  var isEnum = {}.propertyIsEnumerable;

  var SymbolRegistry = _shared('symbol-registry');

  var AllSymbols = _shared('symbols');

  var OPSymbols = _shared('op-symbols');

  var ObjectProto$1 = Object[PROTOTYPE$2];
  var USE_NATIVE$1 = typeof $Symbol == 'function' && !!_objectGops.f;
  var QObject = _global.QObject; // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173

  var setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild; // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687

  var setSymbolDesc = _descriptors && _fails(function () {
    return _objectCreate(dP$1({}, 'a', {
      get: function get() {
        return dP$1(this, 'a', {
          value: 7
        }).a;
      }
    })).a != 7;
  }) ? function (it, key, D) {
    var protoDesc = gOPD$1(ObjectProto$1, key);
    if (protoDesc) delete ObjectProto$1[key];
    dP$1(it, key, D);
    if (protoDesc && it !== ObjectProto$1) dP$1(ObjectProto$1, key, protoDesc);
  } : dP$1;

  var wrap = function wrap(tag) {
    var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);

    sym._k = tag;
    return sym;
  };

  var isSymbol = USE_NATIVE$1 && _typeof4($Symbol.iterator) == 'symbol' ? function (it) {
    return _typeof4(it) == 'symbol';
  } : function (it) {
    return it instanceof $Symbol;
  };

  var $defineProperty = function defineProperty(it, key, D) {
    if (it === ObjectProto$1) $defineProperty(OPSymbols, key, D);

    _anObject(it);

    key = _toPrimitive(key, true);

    _anObject(D);

    if (_has(AllSymbols, key)) {
      if (!D.enumerable) {
        if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));
        it[HIDDEN][key] = true;
      } else {
        if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
        D = _objectCreate(D, {
          enumerable: _propertyDesc(0, false)
        });
      }

      return setSymbolDesc(it, key, D);
    }

    return dP$1(it, key, D);
  };

  var $defineProperties = function defineProperties(it, P) {
    _anObject(it);

    var keys = _enumKeys(P = _toIobject(P));

    var i = 0;
    var l = keys.length;
    var key;

    while (l > i) {
      $defineProperty(it, key = keys[i++], P[key]);
    }

    return it;
  };

  var $create = function create(it, P) {
    return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);
  };

  var $propertyIsEnumerable = function propertyIsEnumerable(key) {
    var E = isEnum.call(this, key = _toPrimitive(key, true));
    if (this === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;
    return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
  };

  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
    it = _toIobject(it);
    key = _toPrimitive(key, true);
    if (it === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;
    var D = gOPD$1(it, key);
    if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
    return D;
  };

  var $getOwnPropertyNames = function getOwnPropertyNames(it) {
    var names = gOPN$1(_toIobject(it));
    var result = [];
    var i = 0;
    var key;

    while (names.length > i) {
      if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
    }

    return result;
  };

  var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
    var IS_OP = it === ObjectProto$1;
    var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));
    var result = [];
    var i = 0;
    var key;

    while (names.length > i) {
      if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto$1, key) : true)) result.push(AllSymbols[key]);
    }

    return result;
  }; // 19.4.1.1 Symbol([description])


  if (!USE_NATIVE$1) {
    $Symbol = function _Symbol2() {
      if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');

      var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);

      var $set = function $set(value) {
        if (this === ObjectProto$1) $set.call(OPSymbols, value);
        if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
        setSymbolDesc(this, tag, _propertyDesc(1, value));
      };

      if (_descriptors && setter) setSymbolDesc(ObjectProto$1, tag, {
        configurable: true,
        set: $set
      });
      return wrap(tag);
    };

    _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {
      return this._k;
    });

    _objectGopd.f = $getOwnPropertyDescriptor;
    _objectDp.f = $defineProperty;
    _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;
    _objectPie.f = $propertyIsEnumerable;
    _objectGops.f = $getOwnPropertySymbols;

    if (_descriptors && !_library) {
      _redefine(ObjectProto$1, 'propertyIsEnumerable', $propertyIsEnumerable, true);
    }

    _wksExt.f = function (name) {
      return wrap(_wks(name));
    };
  }

  _export(_export.G + _export.W + _export.F * !USE_NATIVE$1, {
    Symbol: $Symbol
  });

  for (var es6Symbols = // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) {
    _wks(es6Symbols[j++]);
  }

  for (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) {
    _wksDefine(wellKnownSymbols[k++]);
  }

  _export(_export.S + _export.F * !USE_NATIVE$1, 'Symbol', {
    // 19.4.2.1 Symbol.for(key)
    'for': function _for(key) {
      return _has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
    },
    // 19.4.2.5 Symbol.keyFor(sym)
    keyFor: function keyFor(sym) {
      if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');

      for (var key in SymbolRegistry) {
        if (SymbolRegistry[key] === sym) return key;
      }
    },
    useSetter: function useSetter() {
      setter = true;
    },
    useSimple: function useSimple() {
      setter = false;
    }
  });

  _export(_export.S + _export.F * !USE_NATIVE$1, 'Object', {
    // 19.1.2.2 Object.create(O [, Properties])
    create: $create,
    // 19.1.2.4 Object.defineProperty(O, P, Attributes)
    defineProperty: $defineProperty,
    // 19.1.2.3 Object.defineProperties(O, Properties)
    defineProperties: $defineProperties,
    // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
    // 19.1.2.7 Object.getOwnPropertyNames(O)
    getOwnPropertyNames: $getOwnPropertyNames,
    // 19.1.2.8 Object.getOwnPropertySymbols(O)
    getOwnPropertySymbols: $getOwnPropertySymbols
  }); // Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
  // https://bugs.chromium.org/p/v8/issues/detail?id=3443


  var FAILS_ON_PRIMITIVES = _fails(function () {
    _objectGops.f(1);
  });

  _export(_export.S + _export.F * FAILS_ON_PRIMITIVES, 'Object', {
    getOwnPropertySymbols: function getOwnPropertySymbols(it) {
      return _objectGops.f(_toObject(it));
    }
  }); // 24.3.2 JSON.stringify(value [, replacer [, space]])


  $JSON && _export(_export.S + _export.F * (!USE_NATIVE$1 || _fails(function () {
    var S = $Symbol(); // MS Edge converts symbol values to JSON as {}
    // WebKit converts symbol values to JSON as null
    // V8 throws on boxed symbols

    return _stringify([S]) != '[null]' || _stringify({
      a: S
    }) != '{}' || _stringify(Object(S)) != '{}';
  })), 'JSON', {
    stringify: function stringify(it) {
      var args = [it];
      var i = 1;
      var replacer, $replacer;

      while (arguments.length > i) {
        args.push(arguments[i++]);
      }

      $replacer = replacer = args[1];
      if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined

      if (!_isArray(replacer)) replacer = function replacer(key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return _stringify.apply($JSON, args);
    }
  }); // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)

  $Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf); // 19.4.3.5 Symbol.prototype[@@toStringTag]

  _setToStringTag($Symbol, 'Symbol'); // 20.2.1.9 Math[@@toStringTag]


  _setToStringTag(Math, 'Math', true); // 24.3.3 JSON[@@toStringTag]


  _setToStringTag(_global.JSON, 'JSON', true);

  _wksDefine('asyncIterator');

  _wksDefine('observable');

  var symbol = _core.Symbol;
  var symbol$1 = symbol;

  var _typeof_1 = createCommonjsModule(function (module) {
    function _typeof2(obj) {
      if (typeof symbol$1 === "function" && _typeof4(iterator$1) === "symbol") {
        _typeof2 = function _typeof2(obj) {
          return _typeof4(obj);
        };
      } else {
        _typeof2 = function _typeof2(obj) {
          return obj && typeof symbol$1 === "function" && obj.constructor === symbol$1 && obj !== symbol$1.prototype ? "symbol" : _typeof4(obj);
        };
      }

      return _typeof2(obj);
    }

    function _typeof(obj) {
      if (typeof symbol$1 === "function" && _typeof2(iterator$1) === "symbol") {
        module.exports = _typeof = function _typeof(obj) {
          return _typeof2(obj);
        };
      } else {
        module.exports = _typeof = function _typeof(obj) {
          return obj && typeof symbol$1 === "function" && obj.constructor === symbol$1 && obj !== symbol$1.prototype ? "symbol" : _typeof2(obj);
        };
      }

      return _typeof(obj);
    }

    module.exports = _typeof;
  });

  var isMobile = createCommonjsModule(function (module) {
    (function (global) {
      var apple_phone = /iPhone/i,
          apple_ipod = /iPod/i,
          apple_tablet = /iPad/i,
          android_phone = /\bAndroid(?:.+)Mobile\b/i,
          // Match 'Android' AND 'Mobile'
      android_tablet = /Android/i,
          amazon_phone = /\bAndroid(?:.+)SD4930UR\b/i,
          amazon_tablet = /\bAndroid(?:.+)(?:KF[A-Z]{2,4})\b/i,
          windows_phone = /Windows Phone/i,
          windows_tablet = /\bWindows(?:.+)ARM\b/i,
          // Match 'Windows' AND 'ARM'
      other_blackberry = /BlackBerry/i,
          other_blackberry_10 = /BB10/i,
          other_opera = /Opera Mini/i,
          other_chrome = /\b(CriOS|Chrome)(?:.+)Mobile/i,
          other_firefox = /Mobile(?:.+)Firefox\b/i; // Match 'Mobile' AND 'Firefox'

      function match(regex, userAgent) {
        return regex.test(userAgent);
      }

      function isMobile(userAgent) {
        var ua = userAgent || (typeof navigator !== 'undefined' ? navigator.userAgent : ''); // Facebook mobile app's integrated browser adds a bunch of strings that
        // match everything. Strip it out if it exists.

        var tmp = ua.split('[FBAN');

        if (typeof tmp[1] !== 'undefined') {
          ua = tmp[0];
        } // Twitter mobile app's integrated browser on iPad adds a "Twitter for
        // iPhone" string. Same probably happens on other tablet platforms.
        // This will confuse detection so strip it out if it exists.


        tmp = ua.split('Twitter');

        if (typeof tmp[1] !== 'undefined') {
          ua = tmp[0];
        }

        var result = {
          apple: {
            phone: match(apple_phone, ua) && !match(windows_phone, ua),
            ipod: match(apple_ipod, ua),
            tablet: !match(apple_phone, ua) && match(apple_tablet, ua) && !match(windows_phone, ua),
            device: (match(apple_phone, ua) || match(apple_ipod, ua) || match(apple_tablet, ua)) && !match(windows_phone, ua)
          },
          amazon: {
            phone: match(amazon_phone, ua),
            tablet: !match(amazon_phone, ua) && match(amazon_tablet, ua),
            device: match(amazon_phone, ua) || match(amazon_tablet, ua)
          },
          android: {
            phone: !match(windows_phone, ua) && match(amazon_phone, ua) || !match(windows_phone, ua) && match(android_phone, ua),
            tablet: !match(windows_phone, ua) && !match(amazon_phone, ua) && !match(android_phone, ua) && (match(amazon_tablet, ua) || match(android_tablet, ua)),
            device: !match(windows_phone, ua) && (match(amazon_phone, ua) || match(amazon_tablet, ua) || match(android_phone, ua) || match(android_tablet, ua)) || match(/\bokhttp\b/i, ua)
          },
          windows: {
            phone: match(windows_phone, ua),
            tablet: match(windows_tablet, ua),
            device: match(windows_phone, ua) || match(windows_tablet, ua)
          },
          other: {
            blackberry: match(other_blackberry, ua),
            blackberry10: match(other_blackberry_10, ua),
            opera: match(other_opera, ua),
            firefox: match(other_firefox, ua),
            chrome: match(other_chrome, ua),
            device: match(other_blackberry, ua) || match(other_blackberry_10, ua) || match(other_opera, ua) || match(other_firefox, ua) || match(other_chrome, ua)
          }
        };
        result.any = result.apple.device || result.android.device || result.windows.device || result.other.device, // excludes 'other' devices and ipods, targeting touchscreen phones
        result.phone = result.apple.phone || result.android.phone || result.windows.phone, result.tablet = result.apple.tablet || result.android.tablet || result.windows.tablet;
        return result;
      }

      if (module.exports && typeof window === 'undefined') {
        // Node.js
        module.exports = isMobile;
      } else if (module.exports && typeof window !== 'undefined') {
        // Browserify
        module.exports = isMobile();
        module.exports.isMobile = isMobile;
      } else {
        global.isMobile = isMobile();
      }
    })(commonjsGlobal);
  });
  var isMobile_1 = isMobile.isMobile;
  var semver = createCommonjsModule(function (module, exports) {
    exports = module.exports = SemVer;
    var debug;
    /* istanbul ignore next */

    if ((typeof process === "undefined" ? "undefined" : _typeof4(process)) === 'object' && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG)) {
      debug = function debug() {
        var args = Array.prototype.slice.call(arguments, 0);
        args.unshift('SEMVER');
        console.log.apply(console, args);
      };
    } else {
      debug = function debug() {};
    } // Note: this is the semver.org version of the spec that it implements
    // Not necessarily the package version of this code.


    exports.SEMVER_SPEC_VERSION = '2.0.0';
    var MAX_LENGTH = 256;
    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
    /* istanbul ignore next */
    9007199254740991; // Max safe segment length for coercion.

    var MAX_SAFE_COMPONENT_LENGTH = 16; // The actual regexps go on exports.re

    var re = exports.re = [];
    var src = exports.src = [];
    var R = 0; // The following Regular Expressions can be used for tokenizing,
    // validating, and parsing SemVer version strings.
    // ## Numeric Identifier
    // A single `0`, or a non-zero digit followed by zero or more digits.

    var NUMERICIDENTIFIER = R++;
    src[NUMERICIDENTIFIER] = '0|[1-9]\\d*';
    var NUMERICIDENTIFIERLOOSE = R++;
    src[NUMERICIDENTIFIERLOOSE] = '[0-9]+'; // ## Non-numeric Identifier
    // Zero or more digits, followed by a letter or hyphen, and then zero or
    // more letters, digits, or hyphens.

    var NONNUMERICIDENTIFIER = R++;
    src[NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*'; // ## Main Version
    // Three dot-separated numeric identifiers.

    var MAINVERSION = R++;
    src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\.' + '(' + src[NUMERICIDENTIFIER] + ')';
    var MAINVERSIONLOOSE = R++;
    src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')'; // ## Pre-release Version Identifier
    // A numeric identifier, or a non-numeric identifier.

    var PRERELEASEIDENTIFIER = R++;
    src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';
    var PRERELEASEIDENTIFIERLOOSE = R++;
    src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')'; // ## Pre-release Version
    // Hyphen, followed by one or more dot-separated pre-release version
    // identifiers.

    var PRERELEASE = R++;
    src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\.' + src[PRERELEASEIDENTIFIER] + ')*))';
    var PRERELEASELOOSE = R++;
    src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'; // ## Build Metadata Identifier
    // Any combination of digits, letters, or hyphens.

    var BUILDIDENTIFIER = R++;
    src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'; // ## Build Metadata
    // Plus sign, followed by one or more period-separated build metadata
    // identifiers.

    var BUILD = R++;
    src[BUILD] = '(?:\\+(' + src[BUILDIDENTIFIER] + '(?:\\.' + src[BUILDIDENTIFIER] + ')*))'; // ## Full Version String
    // A main version, followed optionally by a pre-release version and
    // build metadata.
    // Note that the only major, minor, patch, and pre-release sections of
    // the version string are capturing groups.  The build metadata is not a
    // capturing group, because it should not ever be used in version
    // comparison.

    var FULL = R++;
    var FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';
    src[FULL] = '^' + FULLPLAIN + '$'; // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
    // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
    // common in the npm registry.

    var LOOSEPLAIN = '[v=\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';
    var LOOSE = R++;
    src[LOOSE] = '^' + LOOSEPLAIN + '$';
    var GTLT = R++;
    src[GTLT] = '((?:<|>)?=?)'; // Something like "2.*" or "1.2.x".
    // Note that "x.x" is a valid xRange identifer, meaning "any version"
    // Only the first item is strictly required.

    var XRANGEIDENTIFIERLOOSE = R++;
    src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\*';
    var XRANGEIDENTIFIER = R++;
    src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\*';
    var XRANGEPLAIN = R++;
    src[XRANGEPLAIN] = '[v=\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';
    var XRANGEPLAINLOOSE = R++;
    src[XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';
    var XRANGE = R++;
    src[XRANGE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAIN] + '$';
    var XRANGELOOSE = R++;
    src[XRANGELOOSE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAINLOOSE] + '$'; // Coercion.
    // Extract anything that could conceivably be a part of a valid semver

    var COERCE = R++;
    src[COERCE] = '(?:^|[^\\d])' + '(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' + '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:$|[^\\d])'; // Tilde ranges.
    // Meaning is "reasonably at or greater than"

    var LONETILDE = R++;
    src[LONETILDE] = '(?:~>?)';
    var TILDETRIM = R++;
    src[TILDETRIM] = '(\\s*)' + src[LONETILDE] + '\\s+';
    re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');
    var tildeTrimReplace = '$1~';
    var TILDE = R++;
    src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';
    var TILDELOOSE = R++;
    src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'; // Caret ranges.
    // Meaning is "at least and backwards compatible with"

    var LONECARET = R++;
    src[LONECARET] = '(?:\\^)';
    var CARETTRIM = R++;
    src[CARETTRIM] = '(\\s*)' + src[LONECARET] + '\\s+';
    re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');
    var caretTrimReplace = '$1^';
    var CARET = R++;
    src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';
    var CARETLOOSE = R++;
    src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'; // A simple gt/lt/eq thing, or just "" to indicate "any version"

    var COMPARATORLOOSE = R++;
    src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\s*(' + LOOSEPLAIN + ')$|^$';
    var COMPARATOR = R++;
    src[COMPARATOR] = '^' + src[GTLT] + '\\s*(' + FULLPLAIN + ')$|^$'; // An expression to strip any whitespace between the gtlt and the thing
    // it modifies, so that `> 1.2.3` ==> `>1.2.3`

    var COMPARATORTRIM = R++;
    src[COMPARATORTRIM] = '(\\s*)' + src[GTLT] + '\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'; // this one has to use the /g flag

    re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');
    var comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`
    // Note that these all use the loose form, because they'll be
    // checked against either the strict or loose comparator form
    // later.

    var HYPHENRANGE = R++;
    src[HYPHENRANGE] = '^\\s*(' + src[XRANGEPLAIN] + ')' + '\\s+-\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\s*$';
    var HYPHENRANGELOOSE = R++;
    src[HYPHENRANGELOOSE] = '^\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\s+-\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\s*$'; // Star ranges basically just allow anything at all.

    var STAR = R++;
    src[STAR] = '(<|>)?=?\\s*\\*'; // Compile to actual regexp objects.
    // All are flag-free, unless they were created above with a flag.

    for (var i = 0; i < R; i++) {
      debug(i, src[i]);

      if (!re[i]) {
        re[i] = new RegExp(src[i]);
      }
    }

    exports.parse = parse;

    function parse(version, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (version instanceof SemVer) {
        return version;
      }

      if (typeof version !== 'string') {
        return null;
      }

      if (version.length > MAX_LENGTH) {
        return null;
      }

      var r = options.loose ? re[LOOSE] : re[FULL];

      if (!r.test(version)) {
        return null;
      }

      try {
        return new SemVer(version, options);
      } catch (er) {
        return null;
      }
    }

    exports.valid = valid;

    function valid(version, options) {
      var v = parse(version, options);
      return v ? v.version : null;
    }

    exports.clean = clean;

    function clean(version, options) {
      var s = parse(version.trim().replace(/^[=v]+/, ''), options);
      return s ? s.version : null;
    }

    exports.SemVer = SemVer;

    function SemVer(version, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (version instanceof SemVer) {
        if (version.loose === options.loose) {
          return version;
        } else {
          version = version.version;
        }
      } else if (typeof version !== 'string') {
        throw new TypeError('Invalid Version: ' + version);
      }

      if (version.length > MAX_LENGTH) {
        throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');
      }

      if (!(this instanceof SemVer)) {
        return new SemVer(version, options);
      }

      debug('SemVer', version, options);
      this.options = options;
      this.loose = !!options.loose;
      var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);

      if (!m) {
        throw new TypeError('Invalid Version: ' + version);
      }

      this.raw = version; // these are actually numbers

      this.major = +m[1];
      this.minor = +m[2];
      this.patch = +m[3];

      if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
        throw new TypeError('Invalid major version');
      }

      if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
        throw new TypeError('Invalid minor version');
      }

      if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
        throw new TypeError('Invalid patch version');
      } // numberify any prerelease numeric ids


      if (!m[4]) {
        this.prerelease = [];
      } else {
        this.prerelease = m[4].split('.').map(function (id) {
          if (/^[0-9]+$/.test(id)) {
            var num = +id;

            if (num >= 0 && num < MAX_SAFE_INTEGER) {
              return num;
            }
          }

          return id;
        });
      }

      this.build = m[5] ? m[5].split('.') : [];
      this.format();
    }

    SemVer.prototype.format = function () {
      this.version = this.major + '.' + this.minor + '.' + this.patch;

      if (this.prerelease.length) {
        this.version += '-' + this.prerelease.join('.');
      }

      return this.version;
    };

    SemVer.prototype.toString = function () {
      return this.version;
    };

    SemVer.prototype.compare = function (other) {
      debug('SemVer.compare', this.version, this.options, other);

      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      }

      return this.compareMain(other) || this.comparePre(other);
    };

    SemVer.prototype.compareMain = function (other) {
      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      }

      return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);
    };

    SemVer.prototype.comparePre = function (other) {
      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      } // NOT having a prerelease is > having one


      if (this.prerelease.length && !other.prerelease.length) {
        return -1;
      } else if (!this.prerelease.length && other.prerelease.length) {
        return 1;
      } else if (!this.prerelease.length && !other.prerelease.length) {
        return 0;
      }

      var i = 0;

      do {
        var a = this.prerelease[i];
        var b = other.prerelease[i];
        debug('prerelease compare', i, a, b);

        if (a === undefined && b === undefined) {
          return 0;
        } else if (b === undefined) {
          return 1;
        } else if (a === undefined) {
          return -1;
        } else if (a === b) {
          continue;
        } else {
          return compareIdentifiers(a, b);
        }
      } while (++i);
    }; // preminor will bump the version up to the next minor release, and immediately
    // down to pre-release. premajor and prepatch work the same way.


    SemVer.prototype.inc = function (release, identifier) {
      switch (release) {
        case 'premajor':
          this.prerelease.length = 0;
          this.patch = 0;
          this.minor = 0;
          this.major++;
          this.inc('pre', identifier);
          break;

        case 'preminor':
          this.prerelease.length = 0;
          this.patch = 0;
          this.minor++;
          this.inc('pre', identifier);
          break;

        case 'prepatch':
          // If this is already a prerelease, it will bump to the next version
          // drop any prereleases that might already exist, since they are not
          // relevant at this point.
          this.prerelease.length = 0;
          this.inc('patch', identifier);
          this.inc('pre', identifier);
          break;
        // If the input is a non-prerelease version, this acts the same as
        // prepatch.

        case 'prerelease':
          if (this.prerelease.length === 0) {
            this.inc('patch', identifier);
          }

          this.inc('pre', identifier);
          break;

        case 'major':
          // If this is a pre-major version, bump up to the same major version.
          // Otherwise increment major.
          // 1.0.0-5 bumps to 1.0.0
          // 1.1.0 bumps to 2.0.0
          if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
            this.major++;
          }

          this.minor = 0;
          this.patch = 0;
          this.prerelease = [];
          break;

        case 'minor':
          // If this is a pre-minor version, bump up to the same minor version.
          // Otherwise increment minor.
          // 1.2.0-5 bumps to 1.2.0
          // 1.2.1 bumps to 1.3.0
          if (this.patch !== 0 || this.prerelease.length === 0) {
            this.minor++;
          }

          this.patch = 0;
          this.prerelease = [];
          break;

        case 'patch':
          // If this is not a pre-release version, it will increment the patch.
          // If it is a pre-release it will bump up to the same patch version.
          // 1.2.0-5 patches to 1.2.0
          // 1.2.0 patches to 1.2.1
          if (this.prerelease.length === 0) {
            this.patch++;
          }

          this.prerelease = [];
          break;
        // This probably shouldn't be used publicly.
        // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.

        case 'pre':
          if (this.prerelease.length === 0) {
            this.prerelease = [0];
          } else {
            var i = this.prerelease.length;

            while (--i >= 0) {
              if (typeof this.prerelease[i] === 'number') {
                this.prerelease[i]++;
                i = -2;
              }
            }

            if (i === -1) {
              // didn't increment anything
              this.prerelease.push(0);
            }
          }

          if (identifier) {
            // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
            // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
            if (this.prerelease[0] === identifier) {
              if (isNaN(this.prerelease[1])) {
                this.prerelease = [identifier, 0];
              }
            } else {
              this.prerelease = [identifier, 0];
            }
          }

          break;

        default:
          throw new Error('invalid increment argument: ' + release);
      }

      this.format();
      this.raw = this.version;
      return this;
    };

    exports.inc = inc;

    function inc(version, release, loose, identifier) {
      if (typeof loose === 'string') {
        identifier = loose;
        loose = undefined;
      }

      try {
        return new SemVer(version, loose).inc(release, identifier).version;
      } catch (er) {
        return null;
      }
    }

    exports.diff = diff;

    function diff(version1, version2) {
      if (eq(version1, version2)) {
        return null;
      } else {
        var v1 = parse(version1);
        var v2 = parse(version2);
        var prefix = '';

        if (v1.prerelease.length || v2.prerelease.length) {
          prefix = 'pre';
          var defaultResult = 'prerelease';
        }

        for (var key in v1) {
          if (key === 'major' || key === 'minor' || key === 'patch') {
            if (v1[key] !== v2[key]) {
              return prefix + key;
            }
          }
        }

        return defaultResult; // may be undefined
      }
    }

    exports.compareIdentifiers = compareIdentifiers;
    var numeric = /^[0-9]+$/;

    function compareIdentifiers(a, b) {
      var anum = numeric.test(a);
      var bnum = numeric.test(b);

      if (anum && bnum) {
        a = +a;
        b = +b;
      }

      return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;
    }

    exports.rcompareIdentifiers = rcompareIdentifiers;

    function rcompareIdentifiers(a, b) {
      return compareIdentifiers(b, a);
    }

    exports.major = major;

    function major(a, loose) {
      return new SemVer(a, loose).major;
    }

    exports.minor = minor;

    function minor(a, loose) {
      return new SemVer(a, loose).minor;
    }

    exports.patch = patch;

    function patch(a, loose) {
      return new SemVer(a, loose).patch;
    }

    exports.compare = compare;

    function compare(a, b, loose) {
      return new SemVer(a, loose).compare(new SemVer(b, loose));
    }

    exports.compareLoose = compareLoose;

    function compareLoose(a, b) {
      return compare(a, b, true);
    }

    exports.rcompare = rcompare;

    function rcompare(a, b, loose) {
      return compare(b, a, loose);
    }

    exports.sort = sort;

    function sort(list, loose) {
      return list.sort(function (a, b) {
        return exports.compare(a, b, loose);
      });
    }

    exports.rsort = rsort;

    function rsort(list, loose) {
      return list.sort(function (a, b) {
        return exports.rcompare(a, b, loose);
      });
    }

    exports.gt = gt;

    function gt(a, b, loose) {
      return compare(a, b, loose) > 0;
    }

    exports.lt = lt;

    function lt(a, b, loose) {
      return compare(a, b, loose) < 0;
    }

    exports.eq = eq;

    function eq(a, b, loose) {
      return compare(a, b, loose) === 0;
    }

    exports.neq = neq;

    function neq(a, b, loose) {
      return compare(a, b, loose) !== 0;
    }

    exports.gte = gte;

    function gte(a, b, loose) {
      return compare(a, b, loose) >= 0;
    }

    exports.lte = lte;

    function lte(a, b, loose) {
      return compare(a, b, loose) <= 0;
    }

    exports.cmp = cmp;

    function cmp(a, op, b, loose) {
      switch (op) {
        case '===':
          if (_typeof4(a) === 'object') a = a.version;
          if (_typeof4(b) === 'object') b = b.version;
          return a === b;

        case '!==':
          if (_typeof4(a) === 'object') a = a.version;
          if (_typeof4(b) === 'object') b = b.version;
          return a !== b;

        case '':
        case '=':
        case '==':
          return eq(a, b, loose);

        case '!=':
          return neq(a, b, loose);

        case '>':
          return gt(a, b, loose);

        case '>=':
          return gte(a, b, loose);

        case '<':
          return lt(a, b, loose);

        case '<=':
          return lte(a, b, loose);

        default:
          throw new TypeError('Invalid operator: ' + op);
      }
    }

    exports.Comparator = Comparator;

    function Comparator(comp, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (comp instanceof Comparator) {
        if (comp.loose === !!options.loose) {
          return comp;
        } else {
          comp = comp.value;
        }
      }

      if (!(this instanceof Comparator)) {
        return new Comparator(comp, options);
      }

      debug('comparator', comp, options);
      this.options = options;
      this.loose = !!options.loose;
      this.parse(comp);

      if (this.semver === ANY) {
        this.value = '';
      } else {
        this.value = this.operator + this.semver.version;
      }

      debug('comp', this);
    }

    var ANY = {};

    Comparator.prototype.parse = function (comp) {
      var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
      var m = comp.match(r);

      if (!m) {
        throw new TypeError('Invalid comparator: ' + comp);
      }

      this.operator = m[1];

      if (this.operator === '=') {
        this.operator = '';
      } // if it literally is just '>' or '' then allow anything.


      if (!m[2]) {
        this.semver = ANY;
      } else {
        this.semver = new SemVer(m[2], this.options.loose);
      }
    };

    Comparator.prototype.toString = function () {
      return this.value;
    };

    Comparator.prototype.test = function (version) {
      debug('Comparator.test', version, this.options.loose);

      if (this.semver === ANY) {
        return true;
      }

      if (typeof version === 'string') {
        version = new SemVer(version, this.options);
      }

      return cmp(version, this.operator, this.semver, this.options);
    };

    Comparator.prototype.intersects = function (comp, options) {
      if (!(comp instanceof Comparator)) {
        throw new TypeError('a Comparator is required');
      }

      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      var rangeTmp;

      if (this.operator === '') {
        rangeTmp = new Range(comp.value, options);
        return satisfies(this.value, rangeTmp, options);
      } else if (comp.operator === '') {
        rangeTmp = new Range(this.value, options);
        return satisfies(comp.semver, rangeTmp, options);
      }

      var sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');
      var sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');
      var sameSemVer = this.semver.version === comp.semver.version;
      var differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');
      var oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');
      var oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');
      return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;
    };

    exports.Range = Range;

    function Range(range, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (range instanceof Range) {
        if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {
          return range;
        } else {
          return new Range(range.raw, options);
        }
      }

      if (range instanceof Comparator) {
        return new Range(range.value, options);
      }

      if (!(this instanceof Range)) {
        return new Range(range, options);
      }

      this.options = options;
      this.loose = !!options.loose;
      this.includePrerelease = !!options.includePrerelease; // First, split based on boolean or ||

      this.raw = range;
      this.set = range.split(/\s*\|\|\s*/).map(function (range) {
        return this.parseRange(range.trim());
      }, this).filter(function (c) {
        // throw out any that are not relevant for whatever reason
        return c.length;
      });

      if (!this.set.length) {
        throw new TypeError('Invalid SemVer Range: ' + range);
      }

      this.format();
    }

    Range.prototype.format = function () {
      this.range = this.set.map(function (comps) {
        return comps.join(' ').trim();
      }).join('||').trim();
      return this.range;
    };

    Range.prototype.toString = function () {
      return this.range;
    };

    Range.prototype.parseRange = function (range) {
      var loose = this.options.loose;
      range = range.trim(); // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`

      var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];
      range = range.replace(hr, hyphenReplace);
      debug('hyphen replace', range); // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`

      range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);
      debug('comparator trim', range, re[COMPARATORTRIM]); // `~ 1.2.3` => `~1.2.3`

      range = range.replace(re[TILDETRIM], tildeTrimReplace); // `^ 1.2.3` => `^1.2.3`

      range = range.replace(re[CARETTRIM], caretTrimReplace); // normalize spaces

      range = range.split(/\s+/).join(' '); // At this point, the range is completely trimmed and
      // ready to be split into comparators.

      var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
      var set = range.split(' ').map(function (comp) {
        return parseComparator(comp, this.options);
      }, this).join(' ').split(/\s+/);

      if (this.options.loose) {
        // in loose mode, throw out any that are not valid comparators
        set = set.filter(function (comp) {
          return !!comp.match(compRe);
        });
      }

      set = set.map(function (comp) {
        return new Comparator(comp, this.options);
      }, this);
      return set;
    };

    Range.prototype.intersects = function (range, options) {
      if (!(range instanceof Range)) {
        throw new TypeError('a Range is required');
      }

      return this.set.some(function (thisComparators) {
        return thisComparators.every(function (thisComparator) {
          return range.set.some(function (rangeComparators) {
            return rangeComparators.every(function (rangeComparator) {
              return thisComparator.intersects(rangeComparator, options);
            });
          });
        });
      });
    }; // Mostly just for testing and legacy API reasons


    exports.toComparators = toComparators;

    function toComparators(range, options) {
      return new Range(range, options).set.map(function (comp) {
        return comp.map(function (c) {
          return c.value;
        }).join(' ').trim().split(' ');
      });
    } // comprised of xranges, tildes, stars, and gtlt's at this point.
    // already replaced the hyphen ranges
    // turn into a set of JUST comparators.


    function parseComparator(comp, options) {
      debug('comp', comp, options);
      comp = replaceCarets(comp, options);
      debug('caret', comp);
      comp = replaceTildes(comp, options);
      debug('tildes', comp);
      comp = replaceXRanges(comp, options);
      debug('xrange', comp);
      comp = replaceStars(comp, options);
      debug('stars', comp);
      return comp;
    }

    function isX(id) {
      return !id || id.toLowerCase() === 'x' || id === '*';
    } // ~, ~> --> * (any, kinda silly)
    // ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
    // ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
    // ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
    // ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
    // ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0


    function replaceTildes(comp, options) {
      return comp.trim().split(/\s+/).map(function (comp) {
        return replaceTilde(comp, options);
      }).join(' ');
    }

    function replaceTilde(comp, options) {
      var r = options.loose ? re[TILDELOOSE] : re[TILDE];
      return comp.replace(r, function (_, M, m, p, pr) {
        debug('tilde', comp, _, M, m, p, pr);
        var ret;

        if (isX(M)) {
          ret = '';
        } else if (isX(m)) {
          ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
        } else if (isX(p)) {
          // ~1.2 == >=1.2.0 <1.3.0
          ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
        } else if (pr) {
          debug('replaceTilde pr', pr);
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';
        } else {
          // ~1.2.3 == >=1.2.3 <1.3.0
          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';
        }

        debug('tilde return', ret);
        return ret;
      });
    } // ^ --> * (any, kinda silly)
    // ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
    // ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
    // ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
    // ^1.2.3 --> >=1.2.3 <2.0.0
    // ^1.2.0 --> >=1.2.0 <2.0.0


    function replaceCarets(comp, options) {
      return comp.trim().split(/\s+/).map(function (comp) {
        return replaceCaret(comp, options);
      }).join(' ');
    }

    function replaceCaret(comp, options) {
      debug('caret', comp, options);
      var r = options.loose ? re[CARETLOOSE] : re[CARET];
      return comp.replace(r, function (_, M, m, p, pr) {
        debug('caret', comp, _, M, m, p, pr);
        var ret;

        if (isX(M)) {
          ret = '';
        } else if (isX(m)) {
          ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
        } else if (isX(p)) {
          if (M === '0') {
            ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
          } else {
            ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';
          }
        } else if (pr) {
          debug('replaceCaret pr', pr);

          if (M === '0') {
            if (m === '0') {
              ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + m + '.' + (+p + 1);
            } else {
              ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';
            }
          } else {
            ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + (+M + 1) + '.0.0';
          }
        } else {
          debug('no pr');

          if (M === '0') {
            if (m === '0') {
              ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);
            } else {
              ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';
            }
          } else {
            ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';
          }
        }

        debug('caret return', ret);
        return ret;
      });
    }

    function replaceXRanges(comp, options) {
      debug('replaceXRanges', comp, options);
      return comp.split(/\s+/).map(function (comp) {
        return replaceXRange(comp, options);
      }).join(' ');
    }

    function replaceXRange(comp, options) {
      comp = comp.trim();
      var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];
      return comp.replace(r, function (ret, gtlt, M, m, p, pr) {
        debug('xRange', comp, ret, gtlt, M, m, p, pr);
        var xM = isX(M);
        var xm = xM || isX(m);
        var xp = xm || isX(p);
        var anyX = xp;

        if (gtlt === '=' && anyX) {
          gtlt = '';
        }

        if (xM) {
          if (gtlt === '>' || gtlt === '<') {
            // nothing is allowed
            ret = '<0.0.0';
          } else {
            // nothing is forbidden
            ret = '*';
          }
        } else if (gtlt && anyX) {
          // we know patch is an x, because we have any x at all.
          // replace X with 0
          if (xm) {
            m = 0;
          }

          p = 0;

          if (gtlt === '>') {
            // >1 => >=2.0.0
            // >1.2 => >=1.3.0
            // >1.2.3 => >= 1.2.4
            gtlt = '>=';

            if (xm) {
              M = +M + 1;
              m = 0;
              p = 0;
            } else {
              m = +m + 1;
              p = 0;
            }
          } else if (gtlt === '<=') {
            // <=0.7.x is actually <0.8.0, since any 0.7.x should
            // pass.  Similarly, <=7.x is actually <8.0.0, etc.
            gtlt = '<';

            if (xm) {
              M = +M + 1;
            } else {
              m = +m + 1;
            }
          }

          ret = gtlt + M + '.' + m + '.' + p;
        } else if (xm) {
          ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
        } else if (xp) {
          ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
        }

        debug('xRange return', ret);
        return ret;
      });
    } // Because * is AND-ed with everything else in the comparator,
    // and '' means "any version", just remove the *s entirely.


    function replaceStars(comp, options) {
      debug('replaceStars', comp, options); // Looseness is ignored here.  star is always as loose as it gets!

      return comp.trim().replace(re[STAR], '');
    } // This function is passed to string.replace(re[HYPHENRANGE])
    // M, m, patch, prerelease, build
    // 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
    // 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
    // 1.2 - 3.4 => >=1.2.0 <3.5.0


    function hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {
      if (isX(fM)) {
        from = '';
      } else if (isX(fm)) {
        from = '>=' + fM + '.0.0';
      } else if (isX(fp)) {
        from = '>=' + fM + '.' + fm + '.0';
      } else {
        from = '>=' + from;
      }

      if (isX(tM)) {
        to = '';
      } else if (isX(tm)) {
        to = '<' + (+tM + 1) + '.0.0';
      } else if (isX(tp)) {
        to = '<' + tM + '.' + (+tm + 1) + '.0';
      } else if (tpr) {
        to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;
      } else {
        to = '<=' + to;
      }

      return (from + ' ' + to).trim();
    } // if ANY of the sets match ALL of its comparators, then pass


    Range.prototype.test = function (version) {
      if (!version) {
        return false;
      }

      if (typeof version === 'string') {
        version = new SemVer(version, this.options);
      }

      for (var i = 0; i < this.set.length; i++) {
        if (testSet(this.set[i], version, this.options)) {
          return true;
        }
      }

      return false;
    };

    function testSet(set, version, options) {
      for (var i = 0; i < set.length; i++) {
        if (!set[i].test(version)) {
          return false;
        }
      }

      if (version.prerelease.length && !options.includePrerelease) {
        // Find the set of versions that are allowed to have prereleases
        // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
        // That should allow `1.2.3-pr.2` to pass.
        // However, `1.2.4-alpha.notready` should NOT be allowed,
        // even though it's within the range set by the comparators.
        for (i = 0; i < set.length; i++) {
          debug(set[i].semver);

          if (set[i].semver === ANY) {
            continue;
          }

          if (set[i].semver.prerelease.length > 0) {
            var allowed = set[i].semver;

            if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {
              return true;
            }
          }
        } // Version has a -pre, but it's not one of the ones we like.


        return false;
      }

      return true;
    }

    exports.satisfies = satisfies;

    function satisfies(version, range, options) {
      try {
        range = new Range(range, options);
      } catch (er) {
        return false;
      }

      return range.test(version);
    }

    exports.maxSatisfying = maxSatisfying;

    function maxSatisfying(versions, range, options) {
      var max = null;
      var maxSV = null;

      try {
        var rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }

      versions.forEach(function (v) {
        if (rangeObj.test(v)) {
          // satisfies(v, range, options)
          if (!max || maxSV.compare(v) === -1) {
            // compare(max, v, true)
            max = v;
            maxSV = new SemVer(max, options);
          }
        }
      });
      return max;
    }

    exports.minSatisfying = minSatisfying;

    function minSatisfying(versions, range, options) {
      var min = null;
      var minSV = null;

      try {
        var rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }

      versions.forEach(function (v) {
        if (rangeObj.test(v)) {
          // satisfies(v, range, options)
          if (!min || minSV.compare(v) === 1) {
            // compare(min, v, true)
            min = v;
            minSV = new SemVer(min, options);
          }
        }
      });
      return min;
    }

    exports.minVersion = minVersion;

    function minVersion(range, loose) {
      range = new Range(range, loose);
      var minver = new SemVer('0.0.0');

      if (range.test(minver)) {
        return minver;
      }

      minver = new SemVer('0.0.0-0');

      if (range.test(minver)) {
        return minver;
      }

      minver = null;

      for (var i = 0; i < range.set.length; ++i) {
        var comparators = range.set[i];
        comparators.forEach(function (comparator) {
          // Clone to avoid manipulating the comparator's semver object.
          var compver = new SemVer(comparator.semver.version);

          switch (comparator.operator) {
            case '>':
              if (compver.prerelease.length === 0) {
                compver.patch++;
              } else {
                compver.prerelease.push(0);
              }

              compver.raw = compver.format();

            /* fallthrough */

            case '':
            case '>=':
              if (!minver || gt(minver, compver)) {
                minver = compver;
              }

              break;

            case '<':
            case '<=':
              /* Ignore maximum versions */
              break;

            /* istanbul ignore next */

            default:
              throw new Error('Unexpected operation: ' + comparator.operator);
          }
        });
      }

      if (minver && range.test(minver)) {
        return minver;
      }

      return null;
    }

    exports.validRange = validRange;

    function validRange(range, options) {
      try {
        // Return '*' instead of '' so that truthiness works.
        // This will throw if it's invalid anyway
        return new Range(range, options).range || '*';
      } catch (er) {
        return null;
      }
    } // Determine if version is less than all the versions possible in the range


    exports.ltr = ltr;

    function ltr(version, range, options) {
      return outside(version, range, '<', options);
    } // Determine if version is greater than all the versions possible in the range.


    exports.gtr = gtr;

    function gtr(version, range, options) {
      return outside(version, range, '>', options);
    }

    exports.outside = outside;

    function outside(version, range, hilo, options) {
      version = new SemVer(version, options);
      range = new Range(range, options);
      var gtfn, ltefn, ltfn, comp, ecomp;

      switch (hilo) {
        case '>':
          gtfn = gt;
          ltefn = lte;
          ltfn = lt;
          comp = '>';
          ecomp = '>=';
          break;

        case '<':
          gtfn = lt;
          ltefn = gte;
          ltfn = gt;
          comp = '<';
          ecomp = '<=';
          break;

        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"');
      } // If it satisifes the range it is not outside


      if (satisfies(version, range, options)) {
        return false;
      } // From now on, variable terms are as if we're in "gtr" mode.
      // but note that everything is flipped for the "ltr" function.


      for (var i = 0; i < range.set.length; ++i) {
        var comparators = range.set[i];
        var high = null;
        var low = null;
        comparators.forEach(function (comparator) {
          if (comparator.semver === ANY) {
            comparator = new Comparator('>=0.0.0');
          }

          high = high || comparator;
          low = low || comparator;

          if (gtfn(comparator.semver, high.semver, options)) {
            high = comparator;
          } else if (ltfn(comparator.semver, low.semver, options)) {
            low = comparator;
          }
        }); // If the edge version comparator has a operator then our version
        // isn't outside it

        if (high.operator === comp || high.operator === ecomp) {
          return false;
        } // If the lowest version comparator has an operator and our version
        // is less than it then it isn't higher than the range


        if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {
          return false;
        } else if (low.operator === ecomp && ltfn(version, low.semver)) {
          return false;
        }
      }

      return true;
    }

    exports.prerelease = prerelease;

    function prerelease(version, options) {
      var parsed = parse(version, options);
      return parsed && parsed.prerelease.length ? parsed.prerelease : null;
    }

    exports.intersects = intersects;

    function intersects(r1, r2, options) {
      r1 = new Range(r1, options);
      r2 = new Range(r2, options);
      return r1.intersects(r2);
    }

    exports.coerce = coerce;

    function coerce(version) {
      if (version instanceof SemVer) {
        return version;
      }

      if (typeof version !== 'string') {
        return null;
      }

      var match = version.match(re[COERCE]);

      if (match == null) {
        return null;
      }

      return parse(match[1] + '.' + (match[2] || '0') + '.' + (match[3] || '0'));
    }
  });
  var semver_1 = semver.SEMVER_SPEC_VERSION;
  var semver_2 = semver.re;
  var semver_3 = semver.src;
  var semver_4 = semver.parse;
  var semver_5 = semver.valid;
  var semver_6 = semver.clean;
  var semver_7 = semver.SemVer;
  var semver_8 = semver.inc;
  var semver_9 = semver.diff;
  var semver_10 = semver.compareIdentifiers;
  var semver_11 = semver.rcompareIdentifiers;
  var semver_12 = semver.major;
  var semver_13 = semver.minor;
  var semver_14 = semver.patch;
  var semver_15 = semver.compare;
  var semver_16 = semver.compareLoose;
  var semver_17 = semver.rcompare;
  var semver_18 = semver.sort;
  var semver_19 = semver.rsort;
  var semver_20 = semver.gt;
  var semver_21 = semver.lt;
  var semver_22 = semver.eq;
  var semver_23 = semver.neq;
  var semver_24 = semver.gte;
  var semver_25 = semver.lte;
  var semver_26 = semver.cmp;
  var semver_27 = semver.Comparator;
  var semver_28 = semver.Range;
  var semver_29 = semver.toComparators;
  var semver_30 = semver.satisfies;
  var semver_31 = semver.maxSatisfying;
  var semver_32 = semver.minSatisfying;
  var semver_33 = semver.minVersion;
  var semver_34 = semver.validRange;
  var semver_35 = semver.ltr;
  var semver_36 = semver.gtr;
  var semver_37 = semver.outside;
  var semver_38 = semver.prerelease;
  var semver_39 = semver.intersects;
  var semver_40 = semver.coerce;
  var MODULE_NAME = 'Ad Utilities';
  var MODULE_VERSION = 'v4.0.5';
  var objectProto = Object.prototype;
  var toString$2 = objectProto.toString;

  var noop = function noop() {};

  var cdnRoot = function cdnRoot() {
    return typeof document !== 'undefined' && document.location !== 'undefined' && document.location.hostname !== 'undefined' && document.location.hostname !== '' ? document.location.hostname.indexOf('cnn.com') >= 0 ? 'cdn.cnn.com' : 'i.cdn.turner.com' : 'i.cdn.turner.com';
  };

  var isFunction = function isFunction(object) {
    return toString$2.call(object) === '[object Function]';
  };

  var IsMobile = isMobile;

  var getUMTOCookies = function getUMTOCookies() {
    var FreewheelNetwork = document.location.pathname.indexOf('/dev/') > 0 || document.location.pathname.indexOf('/qa/') > 0 ? '42448' : '48804';
    logger.log('getting UMTO cookies');
    return (readCookie('bea4') ? '_fw_vcid2=' + FreewheelNetwork + ':' + readCookie('bea4') : readCookie('bea4r') ? '_fw_vcid2=' + FreewheelNetwork + ':' + readCookie('bea4r') : '') + (readCookie('kxuser') ? '&krux_user=' + readCookie('kxuser') : '') + (readCookie('zwmc') ? '&zwmc=' + readCookie('zwmc') : '') + (readCookie('ifyr') ? '&ifyr=' + readCookie('ifyr') : '') + (readCookie('hkgc') ? '&hkgc=' + readCookie('hkgc') : '') + (readCookie('goiz') ? '&goiz=' + readCookie('goiz') : '');
  };

  var isObject = function isObject(object) {
    var type = _typeof_1(object);

    return (type === 'function' || type === 'object') && !!object;
  };

  var getURLParam = function getURLParam(name) {
    if (typeof document === 'undefined') {
      return '';
    }

    var nameParam = name.replace(/[[]/, '\\[').replace(/[\]]/, '\\]');
    var regexS = '[\\?&]' + nameParam + '=([^&#]*)';
    var regex = new RegExp(regexS);

    if (document && document.location && document.location.search) {
      var results = regex.exec(document.location.search);

      if (results) {
        return results[1];
      }

      return '';
    }

    return '';
  };

  var hasCookie = function hasCookie(name) {
    if (typeof window === 'undefined') return false;

    if (document && document.cookie) {
      logger.log('found?', document.cookie.indexOf('; ' + name + '=') >= 0 || document.cookie.indexOf(name + '=') === 0);
      return document.cookie.indexOf('; ' + name + '=') >= 0 || document.cookie.indexOf(name + '=') === 0;
    }

    return false;
  };

  var getViewport = function getViewport() {
    var viewportWidth;
    var viewportHeight;

    if (typeof window !== 'undefined' && window && typeof window.innerWidth !== 'undefined') {
      viewportWidth = window.innerWidth;
      viewportHeight = window.innerHeight;
    } else if (typeof document !== 'undefined' && document && typeof document.documentElement !== 'undefined' && typeof document.documentElement.clientWidth !== 'undefined' && document.documentElement.clientWidth !== 0) {
      viewportWidth = document.documentElement.clientWidth;
      viewportHeight = document.documentElement.clientHeight;
    } else {
      viewportWidth = document.getElementsByTagName('body')[0].clientWidth;
      viewportHeight = document.getElementsByTagName('body')[0].clientHeight;
    }

    return [viewportWidth, viewportHeight];
  };

  var getBrowser = function getBrowser() {
    logger.time('Getting Browser Information');
    var ua = navigator.userAgent;
    var tem;
    var M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];

    if (/trident/i.test(M[1])) {
      tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
      return 'IE ' + (tem[1] || '');
    }

    if (M[1] === 'Chrome') {
      tem = ua.match(/\b(OPR|Edge)\/(\d+)/);

      if (tem !== null) {
        return tem.slice(1).join(' ').replace('OPR', 'Opera');
      }
    }

    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?']; // eslint-disable-next-line

    if ((tem = ua.match(/version\/(\d+)/i)) !== null) M.splice(1, 1, tem[1]);
    logger.timeEnd('Getting Browser Information');
    return M.join(' ');
  };

  var readCookie = function readCookie(name) {
    var readTheCookie = function readTheCookie(key) {
      if (typeof document === 'undefined' || !document.cookie) {
        // there is no cookie, so go no further
        return null;
      } // there is a cookie


      return document.cookie.match(RegExp(key + '=.*?;')) ? document.cookie.match(RegExp(key + '=.*?;'))[0].replace(RegExp(key + '=|;', 'g'), '') : null;
    };

    var lsSupport = false;
    var data = null; // Check for native support

    if (typeof localStorage !== 'undefined') {
      lsSupport = true;
    } // No value supplied, return value


    if (typeof value === 'undefined') {
      // Get value
      if (lsSupport) {
        // Native support
        data = localStorage.getItem(name);
      }

      if (!lsSupport || data === null) {
        // Use cookie
        data = readTheCookie(name);
      }
    }

    return data;
  };

  var emptyTarget = function emptyTarget(value) {
    return isArray$1(value) ? [] : {};
  };

  var deepmerge = function deepmerge(target, source, optionsArgument) {
    var array = isArray$1(source);
    var options = optionsArgument || {
      arrayMerge: combineMerge
    };
    var arrayMerge = options.arrayMerge || combineMerge;

    if (array) {
      return isArray$1(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument);
    } else {
      return mergeObject(target, source, optionsArgument);
    }
  };

  var combineMerge = function combineMerge(target, source, options) {
    var destination = target.slice();
    source.forEach(function (e, i) {
      if (typeof destination[i] === 'undefined') {
        var cloneRequested = clone !== false;
        var shouldClone = cloneRequested && isMergeableObject(e);
        destination[i] = shouldClone ? deepmerge(emptyTarget(e), e, options) : e;
      } else if (isMergeableObject(e)) {
        destination[i] = merge(target[i], e);
      } else if (target.indexOf(e) === -1) {
        destination.push(e);
      }
    });
    return destination;
  };

  var isMergeableObject = function isMergeableObject(val) {
    var nonNullObject = val && _typeof_1(val) === 'object';
    return nonNullObject && Object.prototype.toString.call(val) !== '[object RegExp]' && Object.prototype.toString.call(val) !== '[object Date]';
  };

  var cloneIfNecessary = function cloneIfNecessary(value, optionsArgument) {
    var clone = optionsArgument && optionsArgument.clone === true;
    return clone && isMergeableObject(value) ? deepmerge(emptyTarget(value), value, optionsArgument) : value;
  };

  var mergeObject = function mergeObject(target, source, optionsArgument) {
    var destination = {};

    if (isMergeableObject(target)) {
      keys$1(target).forEach(function (key) {
        destination[key] = cloneIfNecessary(target[key], optionsArgument);
      });
    }

    keys$1(source).forEach(function (key) {
      if (!isMergeableObject(source[key]) || !target[key]) {
        destination[key] = cloneIfNecessary(source[key], optionsArgument);
      } else {
        destination[key] = deepmerge(target[key], source[key], optionsArgument);
      }
    });
    return destination;
  };

  deepmerge.all = function (array, optionsArgument) {
    if (!isArray$1(array) || array.length < 2) {
      throw new Error('first argument should be an array with at least two elements');
    } // we are sure there are at least 2 values, so it is safe to have no initial value


    return array.reduce(function (prev, next) {
      return deepmerge(prev, next, optionsArgument);
    });
  };

  var mergeDeep = function mergeDeep(target, source) {
    return deepmerge(target, source);
  };

  exports.countryCode = readCookie('countryCode') || (readCookie('CG') ? readCookie('CG').substr(0, 2) : '');
  var appId = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwbGF0Zm9ybSI6IndlYiIsInByb2R1Y3QiOiJhZGZ1ZWwiLCJuZXR3b3JrIjoiY25uIiwiYXBwSWQiOiJjbm4tYWRmdWVsLXdlYi14bWQ2dTkifQ.N-lYZh_mvCV2gChDusNhd85B2BD7AiCIcNY2Gr5Rc6c';
  var locationServiceURL = 'https://geo.ngtv.io/locate?appId=' + appId;

  var getLocation = function getLocation() {
    return new promise$1(function (resolve, reject) {
      fetch(locationServiceURL).then(function (resp) {
        resolve(resp.json());
      })["catch"](function (err) {
        reject(new Error("Could not get user location: ".concat(err)));
      });
    });
  };

  var selectedEdition = readCookie('SelectedEdition') ? readCookie('SelectedEdition') : 'www';
  var monetizedSizes = ['160x600', '300x250', '300x600', '320x50', '728x90', '970x90', '970x250'];
  var invalidMappings = ['_ns_', '_nfs_'];
  var invalidAdUnitSegments = [];
  var invalidAdUnits = ['CNN/health', 'CNN/health/healthgrades', 'CNN/health/leaf', 'CNN/health/list', 'CNN/health/photos', 'CNN/health/specials', 'CNN/health/video', 'CNN/student-news'];

  var getLogger = function getLogger(moduleName, moduleVersion, logKey, style, override) {
    var log = noop;
    var info = noop;
    var warn = noop;
    var time = noop;
    var timeEnd = noop;
    var group = noop;
    var groupEnd = noop;
    var error = noop;
    var inGroup = false;
    var tag;
    var styleFinal = style || '';
    var logKeyFinal = logKey || moduleName.toLowerCase();
    var debug = getURLParam('debug').split(',');
    var debugTest = isObject(console) && isFunction(console.log) && (debug[0] === 'true' || debug.indexOf(logKeyFinal.toLowerCase()) >= 0);
    if (override) debugTest = true;

    if (debugTest) {
      log = function log() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.log.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.log.apply(console, tag);
        }
      };

      info = function info() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.info.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.info.apply(console, tag);
        }
      };

      warn = function warn() {
        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          args[_key3] = arguments[_key3];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.warn.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.warn.apply(console, tag);
        }
      };

      error = function error() {
        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.error.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.error.apply(console, tag);
        }
      };

      group = function group(groupName) {
        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] - START', styleFinal, groupName];
          inGroup = true;
          console.log.apply(console, tag);
        }
      };

      groupEnd = function groupEnd(groupName) {
        tag = ['%c[' + moduleName + ' ' + moduleVersion + '] - END', styleFinal, groupName];
        inGroup = false;

        try {
          console.log.apply(console, tag);
        } catch (err) {// Do Nothing
        }
      };

      time = function time(timeTag) {
        var timeKey = '[' + moduleName + ' ' + moduleVersion + '] - ' + timeTag;
        group(timeTag);
        addMark(timeKey + '-Start');
        console.time(timeKey);
      };

      timeEnd = function timeEnd(timeTag) {
        var timeKey = '[' + moduleName + ' ' + moduleVersion + '] - ' + timeTag;
        addMark(timeKey + '-End');
        addMeasure(timeKey, timeKey + '-Start', timeKey + '-End');
        groupEnd(timeTag);
        console.timeEnd(timeKey);
      };
    }

    var logger = {
      log: log,
      info: info,
      warn: warn,
      error: error,
      time: time,
      timeEnd: timeEnd,
      group: group,
      groupEnd: groupEnd
    };
    return logger;
  };

  var hostname = '';

  var setHostAndPathNames = function setHostAndPathNames() {
    var parser = typeof document !== 'undefined' ? document.createElement('a') : {
      href: '',
      hostname: '',
      pathname: ''
    };
    parser.href = typeof document !== 'undefined' ? document.location.href : '';
    hostname = parser.hostname;
  };

  var logger = getLogger(MODULE_NAME, MODULE_VERSION, 'utils', 'color: coral; padding: 2px');

  var addEvent = function addEvent(element, event, fn) {
    if (element.addEventListener) {
      element.addEventListener(event, fn, true);
    } else if (element.attachEvent) {
      element.attachEvent('on' + event, fn);
    }
  };

  var bind = function bind(fn, context) {
    for (var _len5 = arguments.length, args = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {
      args[_key5 - 2] = arguments[_key5];
    }

    if (!isFunction(fn)) {
      throw new TypeError('Bind must be called on a function');
    }

    return function bound() {
      return fn.apply(context, args.concat(Array.prototype.slice.call(arguments)));
    };
  };
  /* eslint-disable-next-line */


  var re = /(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()\[\]\.,;:\s@\"]+\.)+[^<>()\[\]\.,;:\s@\"]{2,})/i;

  var piiIsPresentInQueryString = function piiIsPresentInQueryString() {
    if (document.location.search) {
      var dirtyResults = document.location.search.search(re) + 1;
      var cleanResults;

      try {
        cleanResults = decodeURIComponent(document.location.search).search(re) + 1;
      } catch (err) {
        cleanResults = dirtyResults;
      }

      return dirtyResults === 1 || cleanResults === 1;
    }

    return false;
  };

  var piiIsPresentInHash = function piiIsPresentInHash() {
    if (document.location.hash) {
      var dirtyResults = document.location.hash.search(re) + 1;
      var cleanResults;

      try {
        cleanResults = decodeURIComponent(document.location.hash).search(re) + 1;
      } catch (err) {
        cleanResults = dirtyResults;
      }

      return dirtyResults || cleanResults;
    }

    return false;
  };

  var piiIsPresentInReferrer = function piiIsPresentInReferrer() {
    if (document.referrer) {
      var dirtyResults = document.referrer.search(re) + 1;
      var cleanResults;

      try {
        cleanResults = decodeURIComponent(document.location.referrer).search(re) + 1;
      } catch (err) {
        cleanResults = dirtyResults;
      }

      return dirtyResults || cleanResults;
    }

    return false;
  };

  var piiIsPresent = function piiIsPresent() {
    return piiIsPresentInQueryString() || piiIsPresentInHash() || piiIsPresentInReferrer();
  };

  var filterDFPRequest = function filterDFPRequest() {
    if (piiIsPresentInQueryString() || piiIsPresentInHash() || piiIsPresentInReferrer()) {
      if (typeof window !== 'undefined' && window.AdFuel) {
        logger.log('Filtering DFP Request due to PII in query string.');
        var AdFuelMethods = getOwnPropertyNames$1(window.AdFuel);

        for (var x = 0; x < AdFuelMethods.length; x++) {
          window.AdFuel[AdFuelMethods[x]] = function filteredAdFuelMethod() {};
        }

        window.googletag = null;
      }

      return true;
    }

    return false;
  };

  var piiFilter = {
    qs: piiIsPresentInQueryString,
    hash: piiIsPresentInHash,
    ref: piiIsPresentInReferrer,
    isPIIPresent: piiIsPresent,
    filter: filterDFPRequest
  };
  var consentStatus = false;
  var consentChecked = false;
  var gdprApplies = false;

  var getFullConsentState = function getFullConsentState() {
    return window.WM.UserConsent.getConsentState();
  };

  var getConsentVersion = function getConsentVersion() {
    return window.WM.UserConsent.getConsentVersion();
  };

  var getConsentString = function getConsentString() {
    var consentString = '';

    if (hasCookie('eupubconsent')) {
      logger.log('Getting Consent Object from cookie...');
      consentString = readCookie('eupubconsent');
    } else {
      if (typeof window !== 'undefined' && window.__tcfapi && typeof window.__tcfapi === 'function') {
        logger.log('Getting Consent Object from __tcfapi...');

        window.__tcfapi('getTCData', 2, function (tcData, success) {
          if (success) {
            return tcData.tcString;
          } else {
            return '';
          }
        });
      } else if (typeof window !== 'undefined' && window.__cmp && typeof window.__cmp === 'function') {
        logger.log('Getting Consent Object from __cmp...');

        window.__cmp('getVendorConsents', null, function (result) {
          consentString = result.metadata;
        });
      }
    }

    logger.log('Returning consent string...', consentString);
    return consentString;
  };

  var getConsent = function getConsent() {
    var consentStates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['data-store', 'ads-contextual', 'ads-person-prof', 'ads-person', 'vendor'];
    if (consentChecked) return consentStatus;
    var consentVersion = '1.3.6';

    try {
      consentVersion = window.WM.UserConsent.getVersion();
    } catch (err) {
      logger.warn('Running Older UserConsent - Please Update!');
    }

    logger.log('UserConsent Version: ', consentVersion);
    consentStatus = window.WM ? window.WM.UserConsent.isReady() ? semver.satisfies(consentVersion, '>=2.0.0') ? window.WM.UserConsent.inUserConsentState(consentStates) : window.WM.UserConsent.inUserConsentState(['ads-general', 'ads-vendor']) : true : true;
    logger.log('Consent Granted: ', consentStatus);
    var region = getUserConsentRegion();

    if (region === 'ccpa' && getURLParam('renderStatic') !== '') {
      logger.log('Render Static: ', getURLParam('renderStatic'));
      logger.log('Using override for Static Ad Rendering...');
      consentStatus = false;
    } else {
      logger.log('Not overriding for static rendering...');
    }

    consentChecked = true;
    return consentStatus;
  };

  var getGDPRApplies = function getGDPRApplies() {
    return window.WM.UserConsent.isInGdprRegion();
  };

  var getCCPAApplies = function getCCPAApplies() {
    return window.WM.UserConsent.isInCcpaRegion();
  };

  var getUserConsentRegion = function getUserConsentRegion() {
    return window.WM ? window.WM.UserConsent.getRegion() : '';
  };

  var monetizedSlots = {};

  var isMonetized = function isMonetized(slot) {
    var rktrSlotId = slot.rktr_slot_id;
    logger.group('Checking Monetization for: ' + rktrSlotId);
    var rktrAdId = slot.rktr_ad_id;
    var responsive = slot.responsive;
    var sizes = slot.sizes;

    if (typeof monetizedSlots[rktrSlotId] !== 'undefined') {
      logger.log('Slot already monetized.', monetizedSlots[rktrSlotId]);
      logger.groupEnd('Checking Monetization for: ' + rktrSlotId);
      return monetizedSlots[rktrSlotId];
    }

    var slotId = rktrSlotId;

    if (slotId === 'page') {
      logger.log('Skipping Page-Level Object.');
      logger.groupEnd('Checking Monetization for: ' + rktrSlotId);
      monetizedSlots[slotId] = {
        isMonetized: false,
        filteredSizes: []
      };
      return {
        isMonetized: false,
        filteredSizes: []
      };
    }

    var monetized = true;
    var viewportChecked = false;
    var browser = getViewport();
    var responsiveSizes = [];
    var filteredSizes = [];
    invalidMappings.forEach(function forEachMap(invalidMapping) {
      if (slotId.indexOf(invalidMapping) > 0) {
        logger.log('Slot includes invalid mapping: ', invalidMapping);
        monetizedSlots[slotId] = false;
        monetized = false;
      }
    });
    invalidAdUnitSegments.forEach(function forEachSegment(invalidAdUnitSegment) {
      if (rktrAdId && rktrAdId.indexOf(invalidAdUnitSegment) >= 0) {
        logger.log('Slot contains an invalid Ad Unit segment: ', invalidAdUnitSegment);
        monetized = false;
      }
    });
    invalidAdUnits.forEach(function forEachAdUnit(invalidAdUnit) {
      if (rktrAdId === invalidAdUnit) {
        logger.log('Slot uses an invalid Ad Unit: ', invalidAdUnit);
        monetized = false;
      }
    });

    if (responsive && responsive.length > 0) {
      responsive.map(function (viewport) {
        if (!viewportChecked && _parseInt$2(viewport[0][0], 10) < browser[0] && _parseInt$2(viewport[0][1], 10) < browser[1]) {
          viewportChecked = true;
          logger.log('Checking Responsive Sizes: ', viewport, browser);
          responsiveSizes = viewport[1];

          if (viewport[1][0] === 'suppress' || responsiveSizes === 'suppress') {
            logger.log('Slot is suppressed: ', viewport[1][0], responsiveSizes);
            monetized = false;
          }
        }

        return viewport;
      });
    }

    filteredSizes = monetized && responsiveSizes.length > 0 ? responsiveSizes : sizes;

    if (monetized) {
      filteredSizes = filteredSizes.filter(function sizeFilter(size) {
        var retSize = size;

        if (retSize !== 'suppress') {
          retSize = retSize.join('x');
        }

        return monetizedSizes.indexOf(retSize) !== -1;
      });
    }

    if (filteredSizes.length === 0) {
      logger.log('Slot contains no monetized sizes.', filteredSizes);
      monetizedSlots[slotId] = false;
      monetized = false;
    }

    logger.log('Slot is Monetized: ', monetized);
    logger.groupEnd('Checking Monetization for: ' + rktrSlotId);
    monetizedSlots[slotId] = {
      isMonetized: monetized,
      filteredSizes: filteredSizes
    };
    return {
      isMonetized: monetized,
      filteredSizes: filteredSizes
    };
  };

  var hasOwn = function hasOwn(object, key) {
    return object !== null && Object.prototype.hasOwnProperty.call(object, key);
  };

  var once = function once(fn) {
    return function () {
      if (fn) {
        fn.apply(this, arguments); // eslint-disable-next-line

        fn = null;
      }
    };
  };

  var keyMap = function () {
    var map = {};

    var has = function has(id) {
      return id in map;
    };

    var addKey = function addKey(id, key) {
      if (!has(id)) {
        map[id] = [];
      }

      map[id].push(key);
    };

    var getKeys = function getKeys(id) {
      return has(id) ? Array.prototype.slice.call(map[id]) : [];
    };

    var clearKeys = function clearKeys(id) {
      if (has(id)) {
        map[id].length = 0;
        return true;
      }

      return false;
    };

    return {
      has: has,
      clearKeys: clearKeys,
      getKeys: getKeys,
      addKey: addKey
    };
  }();

  var roundFloat = function roundFloat(value, toNearest, fixed) {
    return (Math.ceil(value / toNearest) * toNearest).toFixed(fixed);
  };

  var generateCacheBuster = function generateCacheBuster() {
    // return_<9-digit-random-hex>
    var cb = '';

    for (var i = 0; i < 10; i++) {
      cb += Math.floor(Math.random() * 9).toString();
    }

    return cb;
  };

  var debounce = function debounce(func, wait, immediate) {
    var timeout;
    return function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      var context = this;

      var later = function later() {
        timeout = null;
        if (!immediate) func.apply(context, args);
      };

      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) func.apply(context, args);
    };
  };

  var clone = function clone(obj) {
    // Handle the 3 simple types, and null or undefined
    if (obj === null || _typeof_1(obj) !== 'object') return obj; // Handle Date

    if (obj instanceof Date) {
      var copyDate = new Date();
      copyDate.setTime(obj.getTime());
      return copyDate;
    } // Handle Array


    if (obj instanceof Array) {
      var copyArray = [];

      for (var i = 0, len = obj.length; i < len; i++) {
        copyArray[i] = clone(obj[i]);
      }

      return copyArray;
    } // Handle Object


    if (obj instanceof Object) {
      var copyObject = {};
      keys$1(obj).forEach(function (attr) {
        copyObject[attr] = clone(obj[attr]);
      });
      return copyObject;
    }

    throw new Error("Unable to copy obj! Its type isn't supported.");
  };

  var logsSent = false;
  var onCNNE = false;

  var isIntl = function isIntl() {
    var isIntl = false;
    setHostAndPathNames();

    if (getURLParam('isIntl') === 'true') {
      if (!logsSent) {
        logsSent = true;
        logger.log('Faking international site. Using International PubIds.');
      }

      isIntl = true;
    } else if (hostname.search(/^.*(edition|edition-m|arabic)\./) >= 0) {
      if (!logsSent) {
        logsSent = true;
        logger.log('Full international site. Using International PubIds.');
      }

      isIntl = true;
    } else if (exports.countryCode === '' || exports.countryCode === null) {
      if (hostname.search(/^.*(cnnespanol|cnne-test)\./) >= 0) {
        logger.log('Setting isCNNE to `true`');
        onCNNE = true;
        var locationMeta = document && document.querySelectorAll('meta#geo-location-data');

        if (locationMeta && locationMeta.length > 0) {
          if (['US', 'CA'].indexOf(locationMeta[0].dataset.geoCountryCode) >= 0) {
            isIntl = false;
          } else {
            isIntl = true;
          }
        } else {
          if (!logsSent) {
            logsSent = true;
            logger.log('No country code.');
          }
        }
      } else {
        if (!logsSent) {
          logsSent = true;
          logger.log('No country code.');
        }

        isIntl = false;
      }
    } else if (exports.countryCode !== 'US' && exports.countryCode !== 'CA') {
      if (hostname.search(/^.*(money|cnnespanol|cnne-test|\.cnn)\./) >= 0) {
        if (hostname.search(/^.*(money\.cnn)\./) < 0) {
          logger.log('Setting isCNNE to `true`');
          onCNNE = true;
        }

        if (!logsSent) {
          logsSent = true;
          logger.log('International country code. Using International PubIds.');
        }

        isIntl = true;
      } else {
        if (!logsSent) {
          logsSent = true;
          logger.log('International country code but domestic site.');
        }

        isIntl = true;
      }
    } else {
      if (hostname.search(/^.*(cnnespanol|cnne-test)\./) >= 0) {
        if (!logsSent) {
          logger.log('On CNN Espanol... looking for geo-location-data meta tag...');
          logger.log('Setting isCNNE to `true`');
          onCNNE = true;
        }

        locationMeta = document && document.querySelectorAll('meta#geo-location-data');

        if (locationMeta && locationMeta.length > 0) {
          exports.countryCode = locationMeta[0].dataset.geoCountryCode.toUpperCase();

          if (!logsSent) {
            logger.log('Found geo-location-data meta tag with countryCode: ', exports.countryCode);
          }

          if (['US', 'CA'].indexOf(exports.countryCode) >= 0) {
            if (!logsSent) {
              logger.log('Domestic country code. Using Domestic PubIds.');
              logsSent = true;
            }

            isIntl = false;
          } else {
            if (!logsSent) {
              logger.log('International country code. Using International PubIds.');
              logsSent = true;
            }

            isIntl = true;
          }
        } else {
          if (!logsSent) {
            logsSent = true;
            logger.log('No country code. Domestic Site.');
            isIntl = false;
          }
        }
      } else {
        if (!logsSent) {
          logsSent = true;
          logger.log('Domestic site or country code.');
          isIntl = false;
        }
      }
    }

    return isIntl;
  };

  var isCNNE = function isCNNE() {
    isIntl();
    logger.log('Is User on CNN Español? ', onCNNE);
    return onCNNE;
  };

  var setIsCNNE = isCNNE;
  var setIsIntl = isIntl;

  var merge = function merge(source, mods) {
    var dest = {};
    keys$1(source).forEach(function (attrname) {
      dest[attrname] = source[attrname];
    });
    keys$1(mods).forEach(function (attrname) {
      dest[attrname] = mods[attrname];
    });
    return dest;
  };

  var getTrackPerformance = function getTrackPerformance() {
    return new promise$1(function (resolve, reject) {
      if (typeof window !== 'undefined' && !window.CNN || !window.jQuery) {
        reject(new Error('trackPerformance not needed'));
      } else if (typeof window !== 'undefined' && window.CNN.Analytics && window.CNN.Analytics.segment && typeof window.CNN.Analytics.segment.trackPerformance === 'function') {
        resolve();
      } else if (typeof window !== 'undefined' && typeof window.jQuery.fn.onSegmentReady === 'function') {
        window.jQuery(document).onSegmentReady(function _handleSegmentReady() {
          resolve();
        });
      } else {
        reject(new Error('trackPerformance not available'));
      }
    });
  };

  var adfuelEntries = [];

  var queueEntry = function queueEntry(eventName) {
    var entries = typeof window !== 'undefined' ? window.performance.getEntriesByName('[ADFUEL] ' + eventName) : [];

    for (var i = 0; i < entries.length; i++) {
      adfuelEntries.push(entries[i]);
    }
  };

  var addMark = function addMark(name) {
    typeof window !== 'undefined' && window.performance.mark('[ADFUEL] ' + name);
  };

  var addMeasure = function addMeasure(name, start, end) {
    typeof window !== 'undefined' && window.performance.measure('[ADFUEL] ' + name, '[ADFUEL] ' + start, '[ADFUEL] ' + end);
  };

  var getMarks = function getMarks() {
    return typeof window !== 'undefined' ? window.performance.getEntriesByType('mark').filter(function (mark) {
      return mark.name.indexOf('[ADFUEL]');
    }) : [];
  };

  var getMeasures = function getMeasures() {
    return typeof window !== 'undefined' ? window.performance.getEntriesByType('measure').filter(function (mark) {
      return mark.name.indexOf('[ADFUEL]');
    }) : [];
  };

  if (typeof document !== 'undefined') {
    addEvent(document, 'AdFuelCreated', filterDFPRequest);
  }

  var hasUserConsent = typeof window !== 'undefined' && window.WM && window.WM.UserConsent || false;
  var performance = {
    adfuelEntries: adfuelEntries,
    getTrackPerformance: getTrackPerformance,
    mark: addMark,
    measure: addMeasure,
    marks: getMarks,
    measures: getMeasures,
    queueEntry: queueEntry,
    slotDetails: {}
  };

  var loadError = function loadError(oError) {
    throw new URIError("The script ".concat(oError.target.src, " didn't load correctly."));
  };

  var affixScriptToHead = function affixScriptToHead(url) {
    var async = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var onloadFunction = arguments.length > 2 ? arguments[2] : undefined;
    var onerrorFunction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : loadError;
    var newScript = document.createElement('script');
    newScript.async = async;
    newScript.onerror = onerrorFunction;

    if (onloadFunction) {
      newScript.onload = onloadFunction;
    }

    var targetNode = document.getElementsByTagName('head')[0];
    targetNode.insertBefore(newScript, targetNode.firstChild);
    newScript.src = url;
  };

  var hasVideo = function hasVideo() {
    var videoElement = document.getElementsByTagName('video');

    if (videoElement.length) {
      return true;
    } else {
      return false;
    }
  };

  var AdFuelUtils = {
    addEvent: addEvent,
    affixScriptToHead: affixScriptToHead,
    bind: bind,
    cdnRoot: cdnRoot,
    clone: clone,
    countryCode: exports.countryCode,
    debounce: debounce,
    gdprApplies: gdprApplies,
    getFullConsentState: getFullConsentState,
    getConsentVersion: getConsentVersion,
    getConsentString: getConsentString,
    getConsent: getConsent,
    getGDPRApplies: getGDPRApplies,
    getCCPAApplies: getCCPAApplies,
    getUserConsentRegion: getUserConsentRegion,
    getLocation: getLocation,
    generateCacheBuster: generateCacheBuster,
    getBrowser: getBrowser,
    getLogger: getLogger,
    getUMTOCookies: getUMTOCookies,
    getURLParam: getURLParam,
    getViewport: getViewport,
    hasCookie: hasCookie,
    hasOwn: hasOwn,
    hasUserConsent: hasUserConsent,
    hasVideo: hasVideo,
    isCNNE: isCNNE,
    isFunction: isFunction,
    isIntl: isIntl,
    isMobile: isMobile,
    isMonetized: isMonetized,
    isObject: isObject,
    keyMap: keyMap,
    merge: merge,
    mergeDeep: mergeDeep,
    noop: noop,
    once: once,
    performance: performance,
    piiFilter: piiFilter,
    readCookie: readCookie,
    roundFloat: roundFloat,
    selectedEdition: selectedEdition,
    setHostAndPathNames: setHostAndPathNames,
    setIsIntl: isIntl,
    __VERSION__: MODULE_VERSION
  };
  window.AdFuelUtils = AdFuelUtils;
  exports.AdFuelUtils = AdFuelUtils;
  exports.IsMobile = IsMobile;
  exports.addEvent = addEvent;
  exports.affixScriptToHead = affixScriptToHead;
  exports.cdnRoot = cdnRoot;
  exports.generateCacheBuster = generateCacheBuster;
  exports.getBrowser = getBrowser;
  exports.getConsent = getConsent;
  exports.getConsentString = getConsentString;
  exports.getLogger = getLogger;
  exports.getURLParam = getURLParam;
  exports.getUserConsentRegion = getUserConsentRegion;
  exports.getViewport = getViewport;
  exports.hasCookie = hasCookie;
  exports.hasVideo = hasVideo;
  exports.isCNNE = isCNNE;
  exports.isIntl = isIntl;
  exports.isMonetized = isMonetized;
  exports.mergeDeep = mergeDeep;
  exports.performance = performance;
  exports.piiFilter = piiFilter;
  exports.readCookie = readCookie;
  exports.setHostAndPathNames = setHostAndPathNames;
  exports.setIsCNNE = setIsCNNE;
  exports.setIsIntl = setIsIntl;
  Object.defineProperty(exports, '__esModule', {
    value: true
  });
}); ////////////////////////////////////////////
// SITE OPTIONS
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof3(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.AdFuelOptions = factory());
})(void 0, function () {
  'use strict';

  return {
    "ADFUEL": {
      "AUTO_DISPATCH": true,
      "DEFAULT_TIMEOUT": 800,
      "DEFAULT_DESKTOP_TIMEOUT": 1200,
      "DEFAULT_MOBILE_TIMEOUT": 800,
      "IFRAME_TITLE": "advertisement",
      "NETWORK_ID": "8663477",
      "REFRESH_ON_FOCUS_ONLY": false,
      "LAZY_LOAD_FETCH_PERCENT": 500,
      "LAZY_LOAD_RENDER_PERCENT": 200,
      "LAZY_LOAD_MOBILE_SCALING": 2,
      "COLLAPSE_EMPTY_DIVS": true,
      "DEBUG": false,
      "SITE_OBJECT": "CNN"
    },
    "A9": {
      "ACCOUNT_IDS": {
        "DOM": "3159",
        "INTL": "3288"
      },
      "DEBUG": false,
      "TIMEOUTS": {
        "DESKTOP": {
          "DISPLAY": {
            "INITIAL": 1150,
            "REFRESH": 1150
          },
          "VIDEO": {
            "INITIAL": 500,
            "REFRESH": 750,
            "MIDROLL": 750
          }
        },
        "MOBILE": {
          "DISPLAY": {
            "INITIAL": 750,
            "REFRESH": 750
          },
          "VIDEO": {
            "INITIAL": 500,
            "REFRESH": 750,
            "MIDROLL": 750
          }
        }
      },
      "SLOTNAMES": {
        "PREROLL": "aps-preroll",
        "MIDROLL": "aps-midroll",
        "PREPEND_ADUNIT": true
      }
    },
    "BEEMRAY": {
      "API_KEY": "39a34d8d-dd1d-4fbf-aa96-fdc5f0329451",
      "CUSTOMER_ID": "cnn",
      "DEBUG": false
    },
    "BLOCKTHROUGH": {
      "DEBUG": false
    },
    "CEP": {
      "DEBUG": false
    },
    "CONSOLE_TOOL": {
      "DEBUG": false,
      "HOTKEY": ["Control", "Shift", "Z"]
    },
    "CREATIVE_REVIEW": {
      "DEBUG": false,
      "HOTKEY": "^ d o h $"
    },
    "CRITEO": {
      "DEBUG": false,
      "DESKTOP_TIMEOUT": 1150,
      "DESKTOP_ZONES": {
        "160x600": 1047134,
        "300x250": 1047135,
        "300x600": 1047136,
        "728x90": 1047137,
        "HP_970x90": 1128528,
        "HP_970x250": 1128527,
        "ROS_970x90": 1047140,
        "ROS_970x250": 1047139,
        "320x50": 1047138
      },
      "MOBILE_TIMEOUT": 750,
      "MOBILE_ZONES": {
        "300x250": 1090825,
        "320x50": 1090883
      },
      "MULTISIZE_FIRST": "F",
      "MULTISIZE_LARGEST": "L",
      "MULTISIZE_ALL": "A",
      "MULTISIZE_METHOD": "L",
      "TIMEOUT": 750
    },
    "FASTLANE": {
      "DEBUG": false,
      "DESKTOP_TIMEOUT": 750,
      "DOM_ACCOUNT_ID": 11078,
      "INTL_ACCOUNT_ID": 11016,
      "MOBILE_TIMEOUT": 750,
      "TIMEOUT": 750
    },
    "GUID": {
      "DEBUG": false
    },
    "IAS": {
      "ACCOUNT_IDS": {
        "DOM": 925660,
        "INTL": 925660
      },
      "DEBUG": false
    },
    "IX": {
      "DEBUG": false,
      "SCRIPT_KEY": {
        "DOM": "186948-60896576130421",
        "INTL": "186370-96070407099023"
      },
      "IDENTITY": ""
    },
    "IVR": {
      "DEBUG": false,
      "DEFAULT_DISPLAY_MILLISECONDS": 35000,
      "DEFAULT_DISPLAY_PERCENT": 50
    },
    "KRUX": {
      "DEBUG": false,
      "DOM_CONTROLTAG": "ITb_4eqO",
      "INTL_CONTROLTAG": "teff71jyu",
      "SEND_VALUES_TO_ZION": true
    },
    "MALVERTISING": {
      "DEBUG": false,
      "SITE_VENDOR": "CleanIO",
      "SCRIPT_SRC": "//d2uap9jskdzp2.cloudfront.net/script.js"
    },
    "PREBID": {
      "BIDDERS": {
        "CLIENT": {
          "DOM": ["appnexus", "rubicon", "criteo", "ix", "trustx"],
          "INTL": ["appnexus", "pangaea", "rubicon", "criteo", "ix", "sharethrough"]
        },
        "NATIVE": {
          "DOM": ["appnexus"],
          "INTL": ["appnexus"]
        },
        "S2S": {
          "DOM": [],
          "INTL": ["pangaea", "sharethrough"]
        }
      },
      "APPROVED_BIDDERS": {
        "CLIENT": {
          "DOM": ["appnexus", "rubicon", "criteo", "ix", "trustx"],
          "INTL": ["appnexus", "pangaea", "ix", "rubicon", "sharethrough", "criteo"]
        },
        "NATIVE": {
          "DOM": ["appnexus"],
          "INTL": ["appnexus", "pangaea"]
        },
        "S2S": {
          "DOM": ["ix"],
          "INTL": ["pangaea", "sharethrough", "ix"]
        }
      },
      "DEBUG": false,
      "TIMEOUTS": {
        "DISPLAY": {
          "DESKTOP": 1150,
          "MOBILE": 1150
        },
        "VIDEO": {
          "DEFAULT": 500,
          "MIDROLL": 750,
          "REFRESH": 1000
        }
      },
      "VENDOR": {
        "APPNEXUS": {
          "ACCOUNT_ID": {
            "DOM": "7745",
            "INTL": "8353"
          }
        },
        "CRITEO": {
          "ACCOUNT_ID": {
            "DOM": 4157,
            "INTL": 9264
          }
        },
        "PANGAEA": {
          "ACCOUNT_ID": {
            "DOM": 0,
            "INTL": "8613"
          }
        },
        "RUBICON": {
          "ACCOUNT_ID": {
            "DOM": "11078",
            "INTL": "11016"
          },
          "SITE_ID": {
            "DOM": {
              "DESKTOP": 26792,
              "MOBILE": 42244
            },
            "INTL": {
              "DESKTOP": 78582,
              "MOBILE": 78584
            }
          },
          "ZONE_MAPPING": {
            "DOM": {
              "DESKTOP": {
                "HP": {
                  "atf": 106536,
                  "btf": 154308
                },
                "ROS": {
                  "atf": 106830,
                  "btf": 107752
                }
              },
              "MOBILE": {
                "HP": {
                  "atf": 185914,
                  "btf": 185914
                },
                "ROS": {
                  "atf": 185914,
                  "btf": 185914
                }
              }
            },
            "INTL": {
              "DESKTOP": {
                "HP": {
                  "atf": 650178,
                  "btf": 650178
                },
                "ROS": {
                  "atf": 369850,
                  "btf": 369850
                }
              },
              "MOBILE": {
                "HP": {
                  "atf": 369856,
                  "btf": 369856
                },
                "ROS": {
                  "atf": 369856,
                  "btf": 369856
                }
              }
            }
          }
        },
        "IX": {
          "IDENTITY": "",
          "SITE_ID": {
            "DOM": {
              "DESKTOP": {
                "atf": {
                  "728x90": "423255",
                  "970x250": "423255",
                  "970x90": "423255",
                  "300x600": "423257",
                  "300x250": "423257"
                },
                "btf": {
                  "300x600": "423258",
                  "300x250": "423258",
                  "728x90": "423256",
                  "970x250": "423256",
                  "970x90": "423256"
                }
              },
              "MOBILE": {
                "atf": {
                  "320x50": "423259",
                  "300x250": "423261"
                },
                "btf": {
                  "300x250": "423260",
                  "320x50": "423262"
                }
              }
            },
            "INTL": {
              "DESKTOP": {
                "atf": {
                  "728x90": "341959",
                  "970x250": "341960",
                  "970x90": "341961",
                  "300x600": "341962",
                  "300x250": "341963"
                },
                "btf": {
                  "300x600": "341965",
                  "300x250": "341966",
                  "728x90": "341967",
                  "970x250": "341968",
                  "970x90": "341969"
                }
              },
              "MOBILE": {
                "atf": {
                  "320x50": "341964",
                  "300x250": "341970"
                },
                "btf": {
                  "300x250": "341971"
                }
              }
            }
          }
        },
        "OPENX": {
          "UNIT_MAPPING": {
            "DOM": {
              "DESKTOP": {},
              "MOBILE": {}
            },
            "INTL": {
              "DESKTOP": {
                "300x250": 540615750,
                "300x600": 540615753,
                "320x50": 540615751,
                "728x90": 540615752,
                "970x90": 540615752,
                "970x250": 540615754
              },
              "MOBILE": {
                "320x50": 540615756,
                "300x250": 540615755
              }
            }
          }
        },
        "SHARETHROUGH": {
          "UNIT_MAPPING": {
            "DOM": {
              "DESKTOP": {},
              "MOBILE": {}
            },
            "INTL": {
              "DESKTOP": {
                "300x250": "mMvTwgZ1k5vgw5dWWg4E9fs3",
                "300x600": "35zgzLEa9bGmYyQoYpG5bFqW",
                "728x90": "7H5wtn8ji86Z4Ew4s7pQZQ3s",
                "970x250": "r99VVje1tPxSLmvMdbemDVKq"
              },
              "MOBILE": {
                "300x250": "mMvTwgZ1k5vgw5dWWg4E9fs3"
              }
            }
          }
        },
        "TRUSTX": {
          "UID": {
            "DOM": {
              "DESKTOP": {
                "atf": {
                  "970x250": 15218,
                  "970x90": 15219,
                  "728x90": 15220,
                  "300x250": 15224,
                  "300x600": 15225
                },
                "btf": {
                  "970x250": 15221,
                  "970x90": 15222,
                  "728x90": 15223,
                  "300x250": 15226,
                  "300x600": 15227
                }
              },
              "MOBILE": {
                "atf": {
                  "320x50": 15228,
                  "300x250": 15229
                },
                "btf": {
                  "320x50": 15230,
                  "300x250": 15231
                }
              }
            },
            "INTL": {
              "DESKTOP": {
                "atf": {},
                "btf": {}
              },
              "MOBILE": {
                "atf": {},
                "btf": {}
              }
            }
          }
        }
      },
      "SEND_ALL_BIDS": {
        "DOM": true,
        "INTL": true
      }
    },
    "PROXIMIC": {
      "DEBUG": false
    },
    "SOURCEPOINT": {
      "DEBUG": false
    },
    "SSAI": {
      "DEBUG": false,
      "SITE_VENDORS": ["AppNexus", "Freewheel", "SpotX", "Telaria"],
      "VENDORS": {
        "AppNexus": {
          "URL": "https://ib.adnxs.com/getuid?https://umto.{{domain}}/user-sync?zwmc=$UID&domain={{domain}}",
          "COOKIE_NAME": "zwmc"
        },
        "Freewheel": {
          "URL": "https://bea4.v.fwmrm.net/ad/u?mode=echo&cr=https://umto.{{domain}}/user-sync?bea4=#{user.id}&domain={{domain}}",
          "COOKIE_NAME": "bea4"
        },
        "Rubicon": {
          "URL": "https://pixel-us-east.rubiconproject.com/exchange/sync.php?p={{brand}}",
          "COOKIE_NAME": "ifyr"
        },
        "SpotX": {
          "URL": "https://sync.search.spotxchange.com/audience_id",
          "COOKIE_NAME": "hkgc"
        },
        "Telaria": {
          "URL": "https://eq97f.publishers.tremorhub.com/pubsync?redir=https://umto.{{domain}}/user-sync?goiz=%5Btvid%5D&domain={{domain}}",
          "COOKIE_NAME": "goiz"
        }
      }
    },
    "TRANSACTION_ID": {
      "DEBUG": false
    },
    "USER_CONSENT": {
      "ENABLED": true,
      "DEBUG": false,
      "COOKIE_DOMAIN": "",
      "ONETRUST_GUID": "",
      "ONETRUST_SRC": ""
    },
    "VERSION": 1.2,
    "NAME": "cnn"
  };
}); ////////////////////////////////////////////
// AB IndexExchange Identity for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.IndexExchangeIdentity = factory());
})(void 0, function () {
  'use strict';

  var MODULE_NAME = 'Index Exchange Identity';
  var MODULE_VERSION = '1.1.1';
  var getConsent = window.AdFuelUtils.getConsent;
  var getUserConsentRegion = window.AdFuelUtils.getUserConsentRegion;
  var logger;
  var initEventSet;
  var scriptAdded = false;

  var includeIndexIdentityWrapper = function includeIndexIdentityWrapper(key) {
    var consentRegion = getUserConsentRegion();

    if (consentRegion === 'ccpa') {
      logger.log('Checking User Consent...');
      var consentStatus = getConsent();
      logger.log('User Consent Granted: ', consentStatus);

      if (consentStatus && !scriptAdded) {
        /* eslint-disable */
        !function () {
          function e(t, r, n) {
            function i(s, a) {
              if (!r[s]) {
                if (!t[s]) {
                  var u = "function" == typeof require && require;
                  if (!a && u) return u(s, !0);
                  if (o) return o(s, !0);
                  var c = new Error("Cannot find module '" + s + "'");
                  throw c.code = "MODULE_NOT_FOUND", c;
                }

                var f = r[s] = {
                  exports: {}
                };
                t[s][0].call(f.exports, function (e) {
                  return i(t[s][1][e] || e);
                }, f, f.exports, e, t, r, n);
              }

              return r[s].exports;
            }

            for (var o = "function" == typeof require && require, s = 0; s < n.length; s++) {
              i(n[s]);
            }

            return i;
          }

          return e;
        }()({
          1: [function (e, t, r) {
            function n(e) {
              function t(e, t) {
                return m[e] = E.IN_PROGRESS, new u(function (r) {
                  t.instance.retrieve().then(function () {
                    m[e] = E.COMPLETE, r();
                  })["catch"](function (t) {
                    m[e] = E.COMPLETE, r();
                  });
                });
              }

              function r() {
                for (var e = [], r = u.defer(), n = Object.keys(g); n.length;) {
                  var o = f.randomSplice(n),
                      s = g[o];
                  if (s.enabled) try {
                    e.push(t(o, s));
                  } catch (e) {}
                }

                return u.all(e).then(function () {
                  i.emit("rti_partner_request_complete", {
                    requestsCompleted: e.length
                  }), r.resolve();
                }), r;
              }

              function n() {
                for (var e in m) {
                  m.hasOwnProperty(e) && m[e] !== E.COMPLETE && i.emit("hs_identity_timeout", {
                    statsId: g[e].instance.getStatsId()
                  });
                }
              }

              function p() {
                var e = {};
                b || (b = !0, n());

                for (var t in g) {
                  if (g.hasOwnProperty(t)) {
                    var r = g[t];

                    if (r.enabled) {
                      var i = r.instance.getResults();
                      m[t] === E.COMPLETE ? (e[t] = i ? {
                        data: i
                      } : {
                        data: {}
                      }, e[t].responsePending = !1) : e[t] = {
                        data: {},
                        responsePending: !0
                      };
                    }
                  }
                }

                return e;
              }

              function v() {
                y === E.NOT_STARTED && (_ = r(), y = E.IN_PROGRESS);
              }

              var h,
                  g,
                  y,
                  m,
                  _,
                  E = {
                NOT_STARTED: 0,
                IN_PROGRESS: 1,
                COMPLETE: 2
              },
                  b = !1;

              return function () {
                i = c.services.EventsService, o = c.services.TimerService, h = a(), y = E.NOT_STARTED, m = {}, g = e.partners;

                for (var t = Object.keys(g), n = t.length - 1; n >= 0; n--) {
                  var s = f.randomSplice(t),
                      u = g[s];
                  if (u.enabled) try {
                    var _ = d[s];

                    if (f.isObject(_) ? u.instance = l(_, u.configs) : u.instance = _(u.configs), !u.instance) {
                      u.enabled = !1;
                      continue;
                    }

                    m[s] = E.NOT_STARTED;
                  } catch (e) {
                    u.enabled = !1;
                  }
                }

                h._setDirectInterface("IdentityLayer", {
                  retrieve: v,
                  getAllPartnerResults: p,
                  invokeAllPartners: r
                });
              }(), s.derive(h, {
                retrieve: v
              });
            }

            var i,
                o,
                s = e(5),
                a = e(2),
                u = e(10),
                c = e(29),
                f = e(14),
                l = e(19),
                d = {
              AdserverOrgIp: e(18),
              LiveRampIp: e(20),
              MerkleIp: e(21)
            };
            t.exports = n;
          }, {}],
          2: [function (e, t, r) {
            function n() {
              function e(e, t) {
                return i.resolve(t);
              }

              function t(e, t) {
                u = {}, u[e] = t;
              }

              function r(e) {
                c = e;
              }

              function n() {
                return u;
              }

              function o(e) {
                f = e;
              }

              function s(e, t) {
                return f(e, t);
              }

              function a(e, t) {
                return i.resolve().then(function () {
                  return c(e, t);
                });
              }

              var u, c, f;
              return function () {
                u = null, c = e, f = e;
              }(), {
                _setDirectInterface: t,
                _setExecutor: r,
                _executeNext: s,
                setNext: o,
                getDirectInterface: n,
                execute: a
              };
            }

            var i = e(10);
            e(15);
            t.exports = n;
          }, {}],
          3: [function (e, t, r) {
            e(15);

            t.exports = function () {
              function e(e, t) {
                return e = e || "http:", t = t || "https:", "https:" === document.location.protocol ? t : e;
              }

              function t() {
                return ("CSS1Compat" === m.document.compatMode ? m.document.documentElement : m.document.body).clientWidth;
              }

              function r() {
                return ("CSS1Compat" === m.document.compatMode ? m.document.documentElement : m.document.body).clientHeight;
              }

              function n() {
                return m.screen.width;
              }

              function i() {
                return m.screen.height;
              }

              function o() {
                return document.referrer;
              }

              function s() {
                return m.location.hostname;
              }

              function a() {
                return navigator.userAgent;
              }

              function u() {
                return navigator.language || navigator.browserLanguage || navigator.userLanguage || navigator.systemLanguage;
              }

              function c() {
                return m.location.pathname;
              }

              function f() {
                try {
                  return window.top === window.self;
                } catch (e) {
                  return !1;
                }
              }

              function l() {
                return f() ? location.href : document.referrer || location.href;
              }

              function d() {
                try {
                  return localStorage.setItem("test", "test"), localStorage.removeItem("test"), !0;
                } catch (e) {
                  return !1;
                }
              }

              function p(e, t, r, n) {
                try {
                  for (var i, o = window, s = 0;;) {
                    if (!(r && s < r)) {
                      if (n && s > n) break;
                      if (e && (i = e(o))) return i;
                      var a;

                      try {
                        a = o.frameElement;
                      } catch (e) {
                        a = null;
                      }

                      if (null === a) {
                        if (t && (i = t(o))) return i;
                        break;
                      }

                      o = o.parent, s++;
                    }
                  }
                } catch (e) {}

                return null;
              }

              function v(e) {
                return p(function (t) {
                  return t.hasOwnProperty(e) ? t[e] : null;
                });
              }

              function h(e, t) {
                var r = t || m,
                    n = r.document.createElement("iframe");
                return e && (n.src = e), n.width = 0, n.height = 0, n.scrolling = "no", n.marginWidth = 0, n.marginHeight = 0, n.frameBorder = 0, n.setAttribute("style", "border: 0px; vertical-align: bottom; visibility: hidden; display: none;"), r.document.body.appendChild(n), n;
              }

              function g(e) {
                var t = e + "=",
                    r = m.document.cookie.split(";");

                for (var n in r) {
                  if (r.hasOwnProperty(n)) {
                    for (var i = r[n]; " " === i.charAt(0);) {
                      i = i.substring(1, i.length);
                    }

                    if (0 === i.indexOf(t)) return i.substring(t.length, i.length);
                  }
                }

                return null;
              }

              function y() {
                var e = !1;

                try {
                  new window.ActiveXObject("ShockwaveFlash.ShockwaveFlash") && (e = !0);
                } catch (t) {
                  navigator.mimeTypes && void 0 !== navigator.mimeTypes["application/x-shockwave-flash"] && navigator.mimeTypes["application/x-shockwave-flash"].enabledPlugin && (e = !0);
                }

                return e;
              }

              var m;
              return function () {
                m = p(null, function (e) {
                  return e;
                });
              }(), {
                topWindow: m,
                getProtocol: e,
                isLocalStorageSupported: d,
                getViewportWidth: t,
                getViewportHeight: r,
                isTopFrame: f,
                getScreenWidth: n,
                getScreenHeight: i,
                getReferrer: o,
                getPageUrl: l,
                getHostname: s,
                getUserAgent: a,
                getLanguage: u,
                getPathname: c,
                getNearestEntity: v,
                traverseContextTree: p,
                createHiddenIFrame: h,
                readCookie: g,
                isFlashSupported: y
              };
            }();
          }, {}],
          4: [function (e, t, r) {
            var n = e(3),
                i = e(14),
                o = e(13);

            t.exports = function () {
              function e(e) {
                if (!a) return !1;

                try {
                  localStorage.removeItem(u + e);
                } catch (e) {
                  return !1;
                }

                return !0;
              }

              function t(t) {
                if (!a) return null;
                var r;

                try {
                  r = JSON.parse(localStorage.getItem(u + t));
                } catch (e) {
                  return null;
                }

                return null === r ? null : !r.e || r.e < o.now() ? (e(t), null) : i.isObject(r.d) ? {
                  data: r.d,
                  created: r.t,
                  expires: r.e
                } : null;
              }

              function r(e) {
                var r = t(e);
                return r && r.data;
              }

              function s(e, t, r) {
                if (!a) return !1;
                r > c && (r = c);
                var n = o.now(),
                    i = {
                  t: n,
                  d: t,
                  e: n + r
                };

                try {
                  localStorage.setItem(u + e, JSON.stringify(i));
                } catch (e) {
                  return !1;
                }

                return !0;
              }

              var a,
                  u = "IXWRAPPER",
                  c = 6048e5;
              return function () {
                a = n.isLocalStorageSupported();
              }(), {
                deleteData: e,
                getEntry: t,
                getData: r,
                setData: s
              };
            }();
          }, {}],
          5: [function (e, t, r) {
            e(15);

            t.exports = function () {
              function e(e) {
                for (var t in e) {
                  e.hasOwnProperty(t) && "_" === t[0] && "__" !== t.slice(0, 2) && delete e[t];
                }

                return e;
              }

              function t(t, r) {
                var n,
                    i = {};

                for (n in t) {
                  t.hasOwnProperty(n) && (i[n] = t[n]);
                }

                for (n in r) {
                  r.hasOwnProperty(n) && (i[n] = r[n]);
                }

                return e(i);
              }

              return {
                derive: t
              };
            }();
          }, {}],
          6: [function (e, t, r) {
            function n(e) {
              function t(e) {
                if (i.isFunction(e)) try {
                  e();
                } catch (e) {}
              }

              return function () {
                if (i.isArray(e)) for (var t = 0; t < e.length; t++) {
                  try {
                    e[t]();
                  } catch (e) {}
                }
              }(), {
                push: t
              };
            }

            var i = e(14);
            t.exports = n;
          }, {}],
          7: [function (e, t, r) {
            var n = {
              DEFAULT_UID_LENGTH: 8,
              MIN_BANNER_DIMENSION: 1,
              MIN_BID_FLOOR: 0,
              MIN_SITE_ID: 0,
              DEFAULT_UID_CHARSET: "ALPHANUM",
              SESSION_ID_LENGTH: 8,
              PUBKIT_AD_ID_LENGTH: 16,
              RENDER_SERVICE_EXPIRY_SWEEP_TIMER: 3e4,
              DEFAULT_PARTNER_PRIORITY: 1,
              LineItemTypes: {
                ID_AND_SIZE: 1,
                ID_AND_PRICE: 2,
                CUSTOM: 3
              },
              DeviceTypeMethods: {
                USER_AGENT: 1,
                REFERENCE: 2,
                SIZE_MAPPING: 3
              },
              RequestArchitectures: {
                MRA: 1,
                SRA: 2
              },
              InitialLoadStates: {
                DISABLED: 1,
                ENABLED: 2
              },
              MediationLevels: {
                NONE: 1,
                HT_SLOT: 2,
                PARTNER: 3
              }
            };
            t.exports = n;
          }, {}],
          8: [function (e, t, r) {
            function n(e) {
              function t() {
                return a.mobile() ? n.DeviceTypes.MOBILE : (a.tablet(), n.DeviceTypes.DESKTOP);
              }

              function r() {
                var t;

                try {
                  t = eval(e.configs.reference);
                } catch (e) {
                  throw s("INTERNAL_ERROR", "DeviceTypeChecker: could not eval() `reference`.");
                }

                if (!o.isFunction(t)) {
                  if (o.isString(t)) return t;
                  throw s("INVALID_TYPE", "DeviceTypeChecker: `reference` must refer to a function or a string");
                }

                try {
                  return t();
                } catch (e) {
                  throw s("INTERNAL_ERROR", "DeviceTypeChecker: could not execute `reference` function.");
                }
              }

              function u() {
                switch (c) {
                  case i.DeviceTypeMethods.USER_AGENT:
                    return t();

                  case i.DeviceTypeMethods.REFERENCE:
                    return r();

                  default:
                    return t();
                }
              }

              var c;
              return function () {
                c = i.DeviceTypeMethods[e.method] || i.DeviceTypeMethods.USER_AGENT;
              }(), {
                getDeviceType: u
              };
            }

            var i = e(7),
                o = e(14),
                s = e(15),
                a = e(9);
            n.isValidDeviceType = function (e) {
              for (var t in n.DeviceTypes) {
                if (n.DeviceTypes.hasOwnProperty(t) && "TABLET" !== t && e === n.DeviceTypes[t]) return !0;
              }

              return !1;
            }, n.DeviceTypes = {
              DESKTOP: "desktop",
              MOBILE: "mobile",
              TABLET: "tablet"
            }, t.exports = n;
          }, {}],
          9: [function (e, t, r) {
            var n, i, o;
            n = {}, o = window.navigator.userAgent.toLowerCase(), n.ios = function () {
              return n.iphone() || n.ipod() || n.ipad();
            }, n.iphone = function () {
              return !n.windows() && i("iphone");
            }, n.ipod = function () {
              return i("ipod");
            }, n.ipad = function () {
              return i("ipad");
            }, n.android = function () {
              return !n.windows() && i("android");
            }, n.androidPhone = function () {
              return n.android() && i("mobile");
            }, n.androidTablet = function () {
              return n.android() && !i("mobile");
            }, n.blackberry = function () {
              return i("blackberry") || i("bb10") || i("rim");
            }, n.blackberryPhone = function () {
              return n.blackberry() && !i("tablet");
            }, n.blackberryTablet = function () {
              return n.blackberry() && i("tablet");
            }, n.windows = function () {
              return i("windows");
            }, n.windowsPhone = function () {
              return n.windows() && i("phone");
            }, n.windowsTablet = function () {
              return n.windows() && i("touch") && !n.windowsPhone();
            }, n.fxos = function () {
              return (i("(mobile;") || i("(tablet;")) && i("; rv:");
            }, n.fxosPhone = function () {
              return n.fxos() && i("mobile");
            }, n.fxosTablet = function () {
              return n.fxos() && i("tablet");
            }, n.meego = function () {
              return i("meego");
            }, n.mobile = function () {
              return n.androidPhone() || n.iphone() || n.ipod() || n.windowsPhone() || n.blackberryPhone() || n.fxosPhone() || n.meego();
            }, n.tablet = function () {
              return n.ipad() || n.androidTablet() || n.blackberryTablet() || n.windowsTablet() || n.fxosTablet();
            }, n.desktop = function () {
              return !n.tablet() && !n.mobile();
            }, i = function i(e) {
              return -1 !== o.indexOf(e);
            }, t.exports = n;
          }, {}],
          10: [function (e, t, r) {
            function n() {}

            function i(e) {
              if ("object" != _typeof4(this)) throw new TypeError("Promises must be constructed via new");
              if ("function" != typeof e) throw new TypeError("not a function");
              this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], f(e, this);
            }

            function o(e, t) {
              for (; 3 === e._state;) {
                e = e._value;
              }

              if (0 === e._state) return void e._deferreds.push(t);
              e._handled = !0;
              var r = 1 === e._state ? t.onFulfilled : t.onRejected;
              if (null === r) return void (1 === e._state ? s : a)(t.promise, e._value);
              var n;

              try {
                n = r(e._value);
              } catch (e) {
                return void a(t.promise, e);
              }

              s(t.promise, n);
            }

            function s(e, t) {
              try {
                if (t === e) throw new TypeError("A promise cannot be resolved with itself.");

                if (t && ("object" == _typeof4(t) || "function" == typeof t)) {
                  var r = t.then;
                  if (t instanceof i) return e._state = 3, e._value = t, void u(e);
                  if ("function" == typeof r) return void f(bind(r, t), e);
                }

                e._state = 1, e._value = t, u(e);
              } catch (t) {
                a(e, t);
              }
            }

            function a(e, t) {
              e._state = 2, e._value = t, u(e);
            }

            function u(e) {
              for (var t = 0, r = e._deferreds.length; t < r; t++) {
                o(e, e._deferreds[t]);
              }

              e._deferreds = null;
            }

            function c(e, t, r) {
              this.onFulfilled = "function" == typeof e ? e : null, this.onRejected = "function" == typeof t ? t : null, this.promise = r;
            }

            function f(e, t) {
              var r = !1;

              try {
                e(function (e) {
                  r || (r = !0, s(t, e));
                }, function (e) {
                  r || (r = !0, a(t, e));
                });
              } catch (e) {
                if (r) return;
                r = !0, a(t, e);
              }
            }

            i.prototype["catch"] = function (e) {
              return this.then(null, e);
            }, i.prototype.then = function (e, t) {
              var r = new this.constructor(n);
              return o(this, new c(e, t, r)), r;
            }, i.all = function (e) {
              var t = Array.prototype.slice.call(e);
              return new i(function (e, r) {
                function n(o, s) {
                  try {
                    if (s && ("object" == _typeof4(s) || "function" == typeof s)) {
                      var a = s.then;
                      if ("function" == typeof a) return void a.call(s, function (e) {
                        n(o, e);
                      }, r);
                    }

                    t[o] = s, 0 == --i && e(t);
                  } catch (e) {
                    r(e);
                  }
                }

                if (0 === t.length) return e([]);

                for (var i = t.length, o = 0; o < t.length; o++) {
                  n(o, t[o]);
                }
              });
            }, i.resolve = function (e) {
              return e && "object" == _typeof4(e) && e.constructor === i ? e : new i(function (t) {
                t(e);
              });
            }, i.reject = function (e) {
              return new i(function (t, r) {
                r(e);
              });
            }, i.defer = function () {
              var e = {};
              return e.promise = new i(function (t, r) {
                e.resolve = t, e.reject = r;
              }), e;
            }, t.exports = i;
          }, {}],
          11: [function (e, t, r) {
            t.exports = function (e) {
              e = e.toLowerCase();
              var t = /(edge)\/([\w.]+)/.exec(e) || /(opr)[\/]([\w.]+)/.exec(e) || /(chrome)[ \/]([\w.]+)/.exec(e) || /(iemobile)[\/]([\w.]+)/.exec(e) || /(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("trident") >= 0 && /(rv)(?::| )([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || [],
                  r = {},
                  n = {
                browser: t[5] || t[3] || t[1] || "",
                version: t[2] || t[4] || "0",
                versionNumber: t[4] || t[2] || "0"
              };

              if (n.browser && (r[n.browser] = !0, r.version = n.version, r.versionNumber = parseInt(n.versionNumber, 10)), r.rv || r.iemobile) {
                n.browser = "msie", r.msie = !0;
              }

              if (r.edge) {
                delete r.edge;
                n.browser = "msedge", r.msedge = !0;
              }

              if (r.opr) {
                n.browser = "opera", r.opera = !0;
              }

              if (r.safari && r.android) {
                n.browser = "android", r.android = !0;
              }

              if (r.safari && r.kindle) {
                n.browser = "kindle", r.kindle = !0;
              }

              if (r.safari && r.silk) {
                n.browser = "silk", r.silk = !0;
              }

              return r.name = n.browser, r;
            }(window.navigator.userAgent);
          }, {}],
          12: [function (e, t, r) {
            var n = e(29),
                i = e(13),
                o = e(14),
                s = e(15),
                a = e(11);

            t.exports = function () {
              function e() {
                return l;
              }

              function t(e) {
                var t = "";

                for (var r in e) {
                  if (e.hasOwnProperty(r)) if (o.isObject(e[r])) for (var n in e[r]) {
                    e[r].hasOwnProperty(n) && (t += r + "%5B" + n + "%5D=" + encodeURIComponent(e[r][n]) + "&");
                  } else if (o.isArray(e[r])) for (var i = 0; i < e[r].length; i++) {
                    t += r + "%5B%5D=" + encodeURIComponent(e[r][i]) + "&";
                  } else t += r + "=" + encodeURIComponent(e[r]) + "&";
                }

                return t.slice(0, -1);
              }

              function r(e, r, n) {
                return "/" !== e[e.length - 1] && r && (e += "/"), r = r || [], o.isObject(n) && (n = t(n)), n = n ? "?" + n : "", e + r.join("/") + n;
              }

              function u(e) {
                var s,
                    u = null,
                    c = e.scope || window;
                if (e.useImgTag) s = c.document.createElement("img");else {
                  s = c.document.createElement("script"), s.type = "text/javascript";
                  var f = !0;
                  e.hasOwnProperty("async") && (f = e.async), s.async = f;
                }
                var l = e.url;

                if (e.data) {
                  var d;
                  d = o.isString(e.data) ? e.data : t(e.data), l = r(e.url, null, d);
                }

                var p,
                    v = !1,
                    h = function h() {
                  try {
                    if (v) return;
                    v = !0, e.onTimeout && e.onTimeout(), e.useImgTag || e.continueAfterTimeout || s.parentNode.removeChild(s);
                  } catch (e) {}
                };

                e.globalTimeout && n.services.TimerService.addTimerCallback(e.sessionId, h), e.timeout && (p = setTimeout(h, e.timeout));

                var g = function g() {
                  try {
                    if (v) {
                      if (!e.continueAfterTimeout) return;
                    } else clearTimeout(p);

                    e.onSuccess && e.onSuccess(null, i.now(), v), v = !0, e.useImgTag || s.parentNode.removeChild(s);
                  } catch (e) {}
                };

                null === s.onload ? s.onload = g : s.onreadystatechange = function () {
                  "loaded" !== s.readyState && "complete" !== s.readyState || (s.onreadystatechange = null, g());
                };

                var y = function y() {
                  try {
                    if (v) {
                      if (!e.continueAfterTimeout) return;
                    } else clearTimeout(p), v = !0;

                    e.onFailure && e.onFailure(), e.useImgTag || s.parentNode.removeChild(s);
                  } catch (e) {}
                };

                if (s.onerror = y, u = i.now(), s.src = l, !e.useImgTag) {
                  var m = c.document.getElementsByTagName("script")[0];
                  m ? m.parentNode.insertBefore(s, m) : a.msie || a.msedge || a.mozilla ? c.onload = function () {
                    c.document.body.appendChild(s);
                  } : c.document.body.appendChild(s);
                }

                return u;
              }

              function c(a) {
                if (!e()) {
                  if (a.jsonp && "GET" === a.method) return u(a);
                  throw s("INTERNAL_ERROR", "XHR is not supported in this browser.");
                }

                var c = null,
                    f = a.scope || window,
                    l = new f.XMLHttpRequest(),
                    d = a.url,
                    p = null;
                if (a.data) if ("GET" === a.method) {
                  var v;
                  v = o.isString(a.data) ? a.data : t(a.data), d = r(a.url, null, v);
                } else "POST" === a.method && (p = o.isString(a.data) ? a.data : JSON.stringify(a.data));
                var h = !0;
                a.hasOwnProperty("async") && (h = a.async), l.open(a.method, d, h);
                var g = "application/x-www-form-urlencoded; charset=UTF-8";

                if (void 0 !== a.contentType && (g = a.contentType), g && l.setRequestHeader("Content-Type", g), a.headers) {
                  a.headers.hasOwnProperty("X-Request-With") || l.setRequestHeader("X-Request-With", "XMLHttpRequest");

                  for (var y in a.headers) {
                    a.headers.hasOwnProperty(y) && l.setRequestHeader(y, a.headers[y]);
                  }
                }

                a.withCredentials && (l.withCredentials = !0);

                var m,
                    _ = !1,
                    E = function E() {
                  try {
                    if (_) return;
                    _ = !0, a.onTimeout && a.onTimeout();
                  } catch (e) {}
                };

                return a.globalTimeout && n.services.TimerService.addTimerCallback(a.sessionId, E), a.timeout && (a.continueAfterTimeout ? m = setTimeout(E, a.timeout) : (l.timeout = a.timeout, l.ontimeout = E)), (a.onSuccess || a.onFailure) && (l.onreadystatechange = function () {
                  if (4 === l.readyState) {
                    if (_) {
                      if (!a.continueAfterTimeout) return;
                    } else clearTimeout(m), l.ontimeout = null;

                    if (200 === l.status) {
                      if (a.onSuccess) try {
                        a.onSuccess(l.responseText, i.now(), _);
                      } catch (e) {}
                    } else if (a.onFailure) try {
                      a.onFailure(l.status);
                    } catch (e) {}

                    _ = !0;
                  }
                }), c = i.now(), l.send(p), c;
              }

              function f(e) {
                return e.useImgTag = !0, u(e);
              }

              var l;
              return function () {
                l = window.XMLHttpRequest && "string" == typeof new XMLHttpRequest().responseType;
              }(), {
                ajax: c,
                jsonp: u,
                img: f,
                buildUrl: r,
                objToQueryString: t,
                isXhrSupported: e
              };
            }();
          }, {}],
          13: [function (e, t, r) {
            var n = e(7);
            e(15);

            t.exports = function () {
              function e(e, t) {
                e.open("text/html", "replace"), e.write(t), e.close();
              }

              function t(e, t) {
                e = e || n.DEFAULT_UID_LENGTH, t = t || n.DEFAULT_UID_CHARSET;

                for (var r = "", i = 0; i < e; i++) {
                  r += u[t].charAt(Math.floor(Math.random() * u[t].length));
                }

                return r;
              }

              function r() {
                return t(8, "HEX") + "-" + t(4, "HEX") + "-4" + t(3, "HEX") + "-" + "89ab".charAt(Math.floor(4 * Math.random())) + t(3, "HEX") + "-" + t(8, "HEX");
              }

              function i() {
                return new Date().getTime();
              }

              function o() {
                return a.getTimezoneOffset();
              }

              function s() {}

              var a,
                  u = {
                ALPHANUM: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
                ALPHA: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",
                ALPHA_UPPER: "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                ALPHA_LOWER: "abcdefghijklmnopqrstuvwxyz",
                HEX: "0123456789abcdef",
                NUM: "0123456789"
              };
              return function () {
                a = new Date();
              }(), {
                UidCharacterSets: u,
                generateUniqueId: t,
                generateUuid: r,
                now: i,
                getTimezoneOffset: o,
                documentWrite: e,
                noOp: s
              };
            }();
          }, {}],
          14: [function (e, t, r) {
            var n = e(15);

            t.exports = function () {
              function e(e) {
                return void 0 === e ? "undefined" : {}.toString.call(e).match(A)[1].toLowerCase();
              }

              function t(t) {
                return "string" === e(t);
              }

              function r(t) {
                return "number" === e(t) && !isNaN(t);
              }

              function i(t) {
                return "number" === e(t) || "string" === e(t) && !isNaN(Number(t));
              }

              function o(e) {
                return r(e) && e % 1 == 0;
              }

              function s(t) {
                return "function" === e(t);
              }

              function a(t) {
                return "boolean" === e(t);
              }

              function u(t) {
                return "object" === e(t);
              }

              function c(t) {
                return "regexp" === e(t);
              }

              function f(e, t) {
                var r = e.indexOf(t);
                r > -1 && e.splice(r, 1);
              }

              function l(r, i, o) {
                if ("array" !== e(r)) return !1;

                if (void 0 !== i) {
                  if (!t(i)) throw n("INVALID_TYPE", "`type` must be a string");

                  if ("class" === i) {
                    if (!t(o)) throw n("INVALID_TYPE", "`className` must be a string");

                    for (var s = 0; s < r.length; s++) {
                      if ("object" != _typeof4(r[s]) || r[s].__type__ !== o) return !1;
                    }
                  } else for (var a = 0; a < r.length; a++) {
                    if (e(r[a]) !== i) return !1;
                  }
                }

                return !0;
              }

              function d(e) {
                return e.length ? e.splice(Math.floor(Math.random() * e.length), 1)[0] : null;
              }

              function p(e) {
                var t, r, n;

                for (n = e.length - 1; n > 0; n--) {
                  t = Math.floor(Math.random() * (n + 1)), r = e[n], e[n] = e[t], e[t] = r;
                }

                return e;
              }

              function v(e) {
                return JSON.parse(JSON.stringify(e));
              }

              function h() {
                for (var e = Array.prototype.slice.call(arguments), t = {}, r = 0; r < e.length; r++) {
                  for (var n in e[r]) {
                    e[r].hasOwnProperty(n) && (t[n] = e[r][n]);
                  }
                }

                return t;
              }

              function g() {
                for (var e = Array.prototype.slice.call(arguments), t = [], r = 0; r < e.length; r++) {
                  for (var n = 0; n < e[r].length; n++) {
                    t.push(e[r][n]);
                  }
                }

                return t;
              }

              function y(e) {
                if (t(e)) {
                  if ("" !== e) return !1;
                } else if (u(e)) {
                  for (var r in e) {
                    if (e.hasOwnProperty(r)) return !1;
                  }
                } else {
                  if (!l(e)) throw n("INVALID_TYPE", "`entity` must be either a string, object, or an array");
                  if (e.length) return !1;
                }

                return !0;
              }

              function m(e, t, r) {
                void 0 === r && (r = O);

                for (var n = 0; n < e.length; n++) {
                  for (var i = !1, o = 0; o < t.length && !(i = r(e[n], t[o])); o++) {
                    ;
                  }

                  if (!i) return !1;
                }

                return !0;
              }

              function _(e, t, r, n) {
                return t = t || [], n = n || null, function () {
                  try {
                    e.apply(n, t);
                  } catch (e) {}
                };
              }

              function E(e, t) {
                var r = "" + e;
                if (t = +t, t != t && (t = 0), t < 0) throw new RangeError("repeat count must be non-negative");
                if (t == 1 / 0) throw new RangeError("repeat count must be less than infinity");
                if (t = Math.floor(t), 0 == r.length || 0 == t) return "";
                if (r.length * t >= 1 << 28) throw new RangeError("repeat count must not overflow maximum string size");

                for (var n = "", i = 0; i < t; i++) {
                  n += r;
                }

                return n;
              }

              function b(e, t, r) {
                return t >>= 0, r = String(r || " "), e.length > t ? String(e) : (t -= e.length, t > r.length && (r += E(r, t / r.length)), r.slice(0, t) + String(e));
              }

              function w(e, t, r) {
                return t >>= 0, r = String(r || " "), e.length > t ? String(e) : (t -= e.length, t > r.length && (r += E(r, t / r.length)), String(e) + r.slice(0, t));
              }

              function T(e, t) {
                t = t || null;

                try {
                  return eval.call(t, e);
                } catch (e) {}

                return null;
              }

              function S(e, t, r) {
                r = r || null;

                try {
                  return eval.call(r, e + "(" + t.join() + ")");
                } catch (e) {}

                return null;
              }

              function I() {
                for (var e = Array.prototype.slice.call(arguments), t = e[0], r = 1; r < e.length; r++) {
                  Array.prototype.push.apply(t, e[r]);
                }

                return t;
              }

              function P() {
                for (var e = Array.prototype.slice.call(arguments), t = e[0], r = 1; r < e.length; r++) {
                  var n = e[r];

                  for (var i in n) {
                    n.hasOwnProperty(i) && (t[i] = n[i]);
                  }
                }

                return t;
              }

              var A = /\s([a-zA-Z]+)/,
                  O = function O(e, t) {
                return e === t;
              };

              return {
                randomSplice: d,
                shuffle: p,
                deepCopy: v,
                mergeObjects: h,
                mergeArrays: g,
                isArray: l,
                isEmpty: y,
                isInteger: o,
                isString: t,
                isNumeric: i,
                isRegex: c,
                isNumber: r,
                isBoolean: a,
                isFunction: s,
                isObject: u,
                isArraySubset: m,
                getType: e,
                tryCatchWrapper: _,
                arrayDelete: f,
                repeatString: E,
                padStart: b,
                padEnd: w,
                evalVariable: T,
                evalFunction: S,
                appendToArray: I,
                appendToObject: P
              };
            }();
          }, {}],
          15: [function (e, t, r) {
            function n(e, t) {
              return new Error(e + ": " + t);
            }

            n.ErrorTokens = {
              MISSING_ARGUMENT: 1,
              INVALID_TYPE: 2,
              INVALID_VALUE: 3,
              MISSING_PROPERTY: 4,
              NUMBER_OUT_OF_RANGE: 5,
              EMPTY_ENTITY: 6,
              INTERNAL_ERROR: 7,
              DUPLICATE_ENTITY: 8,
              INVALID_ARGUMENT: 9,
              INVALID_CONFIG: 10
            }, t.exports = n;
          }, {}],
          16: [function (e, t, r) {
            function n(e) {
              function t() {
                return r;
              }

              var r;
              return function () {
                o.DeviceTypeChecker = i(e.DeviceTypeChecker), r = {
                  Services: {},
                  Layers: {}
                };

                for (var t = 0; t < a.length; t++) {
                  var n = a[t].name,
                      c = a[t].constructor(e.Services[n]);
                  c && (o.services[n] = c, c.getDirectInterface && c.getDirectInterface() && (r.Services = s.mergeObjects(r.Services, c.getDirectInterface())));
                }

                for (var f, l = e.Layers.length - 1; l >= 0; l--) {
                  var d = e.Layers[l].layerId,
                      p = u[d](e.Layers[l].configs);
                  p.getDirectInterface() && (r.Layers = s.mergeObjects(r.Layers, p.getDirectInterface())), f && p.setNext(f.execute), f = p;
                }
              }(), {
                getDirectInterface: t
              };
            }

            var i = e(8),
                o = e(29),
                s = e(14),
                a = (e(15), [{
              name: "EventsService",
              constructor: e(22)
            }, {
              name: "GptService",
              constructor: e(25)
            }, {
              name: "PublisherSonarService",
              constructor: e(26)
            }, {
              name: "HeaderStatsService",
              constructor: e(23)
            }, {
              name: "TimerService",
              constructor: e(27)
            }, {
              name: "ComplianceService",
              constructor: e(24)
            }]),
                u = {
              IdentityLayer: e(1)
            };
            t.exports = n;
          }, {}],
          17: [function (e, t, r) {
            function n() {
              function e(e) {
                for (var t = "", r = 0; r < e.length - 3; r++) {
                  t += String.fromCharCode(e.charCodeAt(r) - 4);
                }

                return t;
              }

              function t(t, r) {
                var o = e(r.partner),
                    u = r.sessionId,
                    p = r.status;

                if (u && "success" === p) {
                  var v = s.now();

                  if (l[u] === g.DONE) {
                    var h = i.getData(n.STORAGE_KEY_NAME);
                    if (null === h || !h.hasOwnProperty("prt") || !a.isArray(h.prt)) return;
                    h = h.prt;

                    for (var y = 0; y < h.length; y++) {
                      if (h[y].sId === u && h[y].sst) {
                        h[y].rt.hasOwnProperty(o) || (h[y].rt[o] = []), h[y].rt[o].unshift(v - h[y].sst), i.setData(n.STORAGE_KEY_NAME, {
                          prt: h
                        }, d);
                        break;
                      }
                    }
                  } else {
                    if (!c[u]) return;
                    f.hasOwnProperty(u) || (f[u] = {}), f[u].hasOwnProperty(o) || (f[u][o] = []), f[u][o].push(v - c[u]);
                  }
                }
              }

              function r(e) {
                var t = e.length;
                if (0 === t) return 0;

                for (var r = 0, n = 0; n < t; n++) {
                  r += e[n];
                }

                return r / t;
              }

              function u(e) {
                var t = i.getData(n.STORAGE_KEY_NAME);
                if (null === t || !t.hasOwnProperty("prt") || !a.isArray(t.prt) || 0 === t.prt.length) return e;
                t = t.prt;

                for (var o = [], s = 0; s < t.length; s++) {
                  if (t[s].hasOwnProperty("rt")) for (var u in t[s].rt) {
                    if (t[s].rt.hasOwnProperty(u)) {
                      var c = r(t[s].rt[u]);
                      0 !== c && o.push(c);
                    }
                  }
                }

                var f = r(o);
                if (0 === f) return e;

                for (var l = o.length, d = 0, g = 0; g < l; g++) {
                  d += Math.pow(o[g] - f, 2);
                }

                d = Math.sqrt(d / l);

                var y = Math.floor(f + 2 * d + p),
                    m = Math.floor(e * v),
                    _ = Math.floor(e * h);

                return y < m ? y = m : y > _ && (y = _), y;
              }

              var c,
                  f,
                  l,
                  d = 6048e5,
                  p = 100,
                  v = .8,
                  h = 3,
                  g = {
                IPR: 0,
                DONE: 1
              },
                  y = {
                hs_session_start: function hs_session_start(e) {
                  var t = e.sessionId;
                  c.hasOwnProperty(t) && l[t] === g.IPR || (c[t] = s.now(), l[t] = g.IPR);
                },
                hs_session_end: function hs_session_end(e) {
                  var t = e.sessionId;

                  if (c[t] && l[t] === g.IPR) {
                    l[t] = g.DONE;
                    var r = i.getData(n.STORAGE_KEY_NAME);
                    null !== r && r.hasOwnProperty("prt") && a.isArray(r.prt) ? (r = r.prt, r.length >= 5 && r.pop()) : r = [], r.unshift({
                      sId: t,
                      sst: c[t],
                      rt: f[t] || {}
                    }), i.setData(n.STORAGE_KEY_NAME, {
                      prt: r
                    }, d), delete f[t], delete c[t];
                  }
                },
                partner_request_complete: function partner_request_complete(e) {
                  t("partner_request_complete", e);
                }
              };
              return function () {
                for (var e in y) {
                  y.hasOwnProperty(e) && o.services.EventsService.on(e, y[e]);
                }

                l = {}, f = {}, c = {};
              }(), {
                getTimeout: u
              };
            }

            var i = e(4),
                o = e(29),
                s = e(13),
                a = e(14);
            n.STORAGE_KEY_NAME = "lib_mem", t.exports = n;
          }, {}],
          18: [function (e, t, r) {
            function n() {
              var e = {
                ttd_pid: a,
                fmt: u,
                p: o.configs.publisherId
              };
              o.Utilities.ajax({
                url: o.Utilities.getProtocol() + s,
                method: "GET",
                data: e,
                onSuccess: function onSuccess(e) {
                  try {
                    var t = JSON.parse(e);
                    if (!t.TDID) return void o.registerError("response does not contain TDID");
                    var r = [];

                    for (var n in t) {
                      t.hasOwnProperty(n) && r.push({
                        id: t[n],
                        ext: {
                          rtiPartner: n
                        }
                      });
                    }

                    o.registerMatch({
                      source: c.source,
                      uids: r
                    });
                  } catch (e) {
                    o.registerError("response is not valid JSON");
                  }
                },
                onFailure: function onFailure(e) {
                  o.registerError("API returned error response " + e);
                }
              });
            }

            function i(e) {
              o = e, o.onRetrieve(n);
            }

            var o,
                s = "//match.adsrvr.org/track/rid",
                a = "casale",
                u = "json",
                c = {
              partnerId: "AdserverOrgIp",
              statsId: "ADSORG",
              version: "1.3.0",
              source: "adserver.org",
              cacheExpiry: {
                match: 6048e5,
                pass: 864e5,
                error: 864e5
              },
              targetingKeys: {
                exchangeBidding: "ixpid_1"
              }
            };
            t.exports = {
              type: "identity",
              api: "1",
              main: i,
              profile: c
            };
          }, {}],
          19: [function (e, t, r) {
            function n(e, t) {
              function r(e) {
                return !!(e && e.uids && p.isString(e.source) && p.isArray(e.uids)) && e.uids.every(function (e) {
                  return Boolean(!p.isEmpty(e) && e.id);
                });
              }

              function n(e, t) {
                var r = {
                  match: "hs_identity_response",
                  pass: "hs_identity_pass",
                  error: "hs_identity_error"
                }[e];
                o.emit(r, {
                  statsId: L
                }), o.emit("ip_module_result_" + x, e, t), "match" === e && (C = t);
              }

              function v(e, t) {
                if (!q) {
                  q = !0;
                  var r = {
                    response: e,
                    version: D.version
                  };
                  "pass" !== e && (r.data = t), Object.keys(U).length && (r.consent = U);
                  var i = D.cacheExpiry[e];
                  u.setData(F, r, i), n(e, t), j && j();
                }
              }

              function h(e) {
                if (!i.isPrivacyEnabled()) return null;

                if ("gdpr" === e) {
                  var t = i.gdpr.getConsent();
                  return t && t.consentString && (U.gdpr = !0), t;
                }

                return null;
              }

              function g(e) {
                var t = u.getData(e);
                return t && "match" === t.response && t.data ? t.data : null;
              }

              function y(e) {
                var t = {
                  url: e.url,
                  method: e.method,
                  async: !0,
                  withCredentials: !0,
                  jsonp: !1,
                  continueAfterTimeout: !1,
                  timeout: e.timeout || 0
                };
                return e.onSuccess && (t.onSuccess = e.onSuccess), e.onTimeout && (t.onTimeout = e.onTimeout), e.onFailure && (t.onFailure = e.onFailure), void 0 !== e.data && (t.data = e.data), void 0 !== e.contentType && (t.contentType = e.contentType), c.ajax(t);
              }

              function m() {
                return D.sonar && D.sonar.enabled ? s.getSonarPayload(D.sonar.entrypoints) : {};
              }

              function _(e) {
                k = e;
              }

              function E(e) {
                return Boolean(D.sonar && D.sonar.enabled && s.getLastUpdated(m()) > e.created);
              }

              function b(e) {
                return !(!D.consent || !i.isPrivacyEnabled()) && (!e.data.consent || !p.isArraySubset(Object.keys(D.consent), Object.keys(e.data.consent))) && i.wait().then(function () {
                  return Object.keys(D.consent).some(function (t) {
                    if (e.data.consent && e.data.consent[t]) return !1;
                    var r = i[t].getConsent();
                    return r && r.consentString;
                  });
                });
              }

              function w(e) {
                return e.data.version !== D.version;
              }

              function T(e) {
                return !r(e.data.data);
              }

              function S() {
                return D.consent && i.isPrivacyEnabled() ? i.wait() : null;
              }

              function I() {
                var e = u.getEntry(F);
                return f.resolve().then(function () {
                  if (!e) return null;
                  var t = H[e.data.response];
                  return t ? f.all(t.map(function (t) {
                    return t.call(null, e);
                  })) : null;
                }).then(function (t) {
                  return !t || t.indexOf(!0) > -1 ? null : (o.emit("hs_identity_cached", {
                    statsId: L
                  }), n(e.data.response, e.data.data), e.data);
                });
              }

              function P() {
                return f.resolve().then(function () {
                  return f.all(G.map(function (e) {
                    return e.call();
                  }));
                }).then(function () {
                  return new f(function (e) {
                    o.emit("hs_identity_request", {
                      statsId: L
                    }), q = !1, j = e, o.emit("ip_module_retrieve_" + x);
                  });
                });
              }

              function A() {
                return L;
              }

              function O() {
                return C;
              }

              function N() {
                if (k) return k;

                if (C && p.isArray(C.uids) && C.uids.length && C.uids[0].id) {
                  var e = {};
                  return e[D.targetingKeys.exchangeBidding] = C.uids[0].id, e;
                }

                return null;
              }

              function R() {
                return I().then(function (e) {
                  return e ? null : P();
                });
              }

              var D,
                  x,
                  L,
                  M,
                  C,
                  k,
                  U,
                  j,
                  F,
                  q,
                  H = {
                match: [E, T],
                pass: [E, b, w],
                error: [w]
              },
                  G = [S];
              return function () {
                i = l.services.ComplianceService, o = l.services.EventsService, s = l.services.PublisherSonarService, D = e.profile, x = D.partnerId, L = D.statsId, C = null, k = null, j = null, F = x, U = {}, M = {
                  Utilities: {
                    buildUrl: c.buildUrl,
                    getPageUrl: a.getPageUrl,
                    getProtocol: a.getProtocol,
                    getReferrer: a.getReferrer,
                    getTime: d.now,
                    getType: p.getType,
                    isArray: p.isArray,
                    isEmpty: p.isEmpty,
                    isFunction: p.isFunction,
                    isInteger: p.isInteger,
                    isNumeric: p.isNumeric,
                    isString: p.isString,
                    isObject: p.isObject,
                    isTopFrame: a.isTopFrame,
                    isXhrSupported: c.isXhrSupported,
                    ajax: y,
                    getConsent: h,
                    getIdentityResultFrom: g,
                    getPublisherSonarData: m
                  },
                  onRetrieve: o.on.bind(null, "ip_module_retrieve_" + x),
                  onResult: o.on.bind(null, "ip_module_result_" + x),
                  registerMatch: v.bind(null, "match"),
                  registerPass: v.bind(null, "pass"),
                  registerError: v.bind(null, "error"),
                  registerEbTargeting: _,
                  configs: t
                }, e.main(M);
              }(), {
                getStatsId: A,
                getResults: O,
                getTargets: N,
                retrieve: R
              };
            }

            var i,
                o,
                s,
                a = e(3),
                u = e(4),
                c = e(12),
                f = e(10),
                l = e(29),
                d = e(13),
                p = e(14);
            t.exports = n;
          }, {}],
          20: [function (e, t, r) {
            function n() {
              var e = {
                pid: a,
                rt: "envelope"
              },
                  t = o.Utilities.getConsent("gdpr");
              t && t.consentString && (e[d.consent.gdpr] = t.consentString, e[f] = l);
              var r = [],
                  n = d.sonar.entrypoints[0].key,
                  i = o.Utilities.getPublisherSonarData();
              i && i.hasOwnProperty(n) && (e[n] = i[n].data, e[u] = c, r.push(i[n].meta)), o.Utilities.ajax({
                url: o.Utilities.getProtocol() + s,
                method: "GET",
                data: e,
                onSuccess: function onSuccess(e) {
                  try {
                    var t,
                        n = JSON.parse(e);
                    if (!o.Utilities.isObject(n)) return void o.registerError("invalid response");
                    if (o.Utilities.isEmpty(n)) return void o.registerPass();
                    if (!n.hasOwnProperty("envelope")) return void o.registerError("invalid envelope object");
                    if (o.Utilities.isEmpty(n.envelope)) return void o.registerPass();
                    t = {
                      source: d.source,
                      uids: [{
                        id: n.envelope,
                        ext: {
                          rtiPartner: "idl"
                        }
                      }]
                    }, r.length && (t.ext = {
                      sonar: r
                    }), o.registerMatch(t);
                  } catch (e) {
                    o.registerError("response is not valid JSON");
                  }
                },
                onFailure: function onFailure(e) {
                  204 === e ? o.registerPass() : o.registerError("API returned error response " + e);
                }
              });
            }

            function i(e) {
              o = e, o.onRetrieve(n);
            }

            var o,
                s = "//api.rlcdn.com/api/identity",
                a = 2,
                u = "it",
                c = 4,
                f = "ct",
                l = 1,
                d = {
              partnerId: "LiveRampIp",
              statsId: "LVRAMP",
              version: "1.3.0",
              source: "liveramp.com",
              cacheExpiry: {
                match: 864e5,
                pass: 864e5,
                error: 864e5
              },
              consent: {
                gdpr: "cv"
              },
              targetingKeys: {
                exchangeBidding: "ixpid_3"
              },
              sonar: {
                enabled: !0,
                entrypoints: [{
                  key: "iv",
                  filter: {
                    attr: 1,
                    algo: 1
                  }
                }]
              }
            };
            t.exports = {
              type: "identity",
              api: "1",
              main: i,
              profile: d
            };
          }, {}],
          21: [function (e, t, r) {
            function n() {
              var e = {},
                  t = [],
                  r = o.Utilities.getPublisherSonarData();

              for (var n in r) {
                r.hasOwnProperty(n) && (e[n] = r[n].data, t.push(r[n].meta));
              }

              e.ptk = u, e.pubid = o.configs.pubid, o.Utilities.ajax({
                url: o.Utilities.getProtocol() + a,
                method: "GET",
                data: e,
                onSuccess: function onSuccess(e) {
                  try {
                    var r,
                        n = JSON.parse(e);
                    if (!o.Utilities.isObject(n)) return void o.registerError("invalid response");
                    var i = [];

                    if (n.ppid) {
                      if (!n.ppid.id) return void o.registerError("invalid ppid object");
                      i.push({
                        id: n.ppid.id,
                        ext: {
                          enc: 0
                        }
                      });
                    }

                    if (n.pam_id && !s.msie) {
                      if (!n.pam_id.id || !n.pam_id.keyID) return void o.registerError("invalid pam_id object");
                      i.push({
                        id: n.pam_id.id,
                        ext: {
                          keyID: n.pam_id.keyID,
                          enc: 1
                        }
                      });
                    }

                    i.length ? (r = {
                      source: c.source,
                      uids: i
                    }, t.length > 0 && (r.ext = {
                      sonar: t
                    }), o.registerMatch(r)) : o.registerPass();
                  } catch (e) {
                    o.registerError("response is not valid JSON");
                  }
                },
                onFailure: function onFailure(e) {
                  o.registerError("API returned error response " + e);
                }
              });
            }

            function i(e) {
              o = e, o.onRetrieve(n);
            }

            var o,
                s = e(11),
                a = "//mid.rkdms.com/idsv2",
                u = "17c1789b-e660-493b-aa74-3c8fb990dc5f",
                c = {
              partnerId: "MerkleIp",
              statsId: "MRKL",
              version: "1.4.2",
              source: "merkleinc.com",
              cacheExpiry: {
                match: 6048e5,
                pass: 864e5,
                error: 864e5
              },
              targetingKeys: {
                exchangeBidding: "ixpid_4"
              },
              sonar: {
                enabled: !0,
                entrypoints: [{
                  key: "qs1",
                  filter: {
                    attr: 1,
                    algo: 2
                  }
                }]
              }
            };
            t.exports = {
              type: "identity",
              api: "1",
              main: i,
              profile: c
            };
          }, {}],
          22: [function (e, t, r) {
            function n() {
              function e(e, t, r) {
                s.hasOwnProperty(e) || (s[e] = []);
                var n = i.generateUniqueId();
                return s[e].push({
                  id: n,
                  fn: r,
                  once: t
                }), n;
              }

              function t(t, r) {
                return e(t, !1, r);
              }

              function r(t, r) {
                return e(t, !0, r);
              }

              function n(e) {
                for (var t in s) {
                  if (s.hasOwnProperty(t)) for (var r = s[t].length - 1; r >= 0; r--) {
                    if (s[t][r].id === e) return void s[t].splice(r, 1);
                  }
                }
              }

              function o() {
                var e = Array.prototype.slice.call(arguments),
                    t = e.shift();
                if (t && s.hasOwnProperty(t)) for (var r = s[t].length - 1; r >= 0; r--) {
                  try {
                    s[t][r].fn.apply(null, e);
                  } catch (e) {}

                  s[t][r].once && s[t].splice(r, 1);
                }
              }

              var s;
              return function () {
                s = {};
              }(), {
                on: t,
                once: r,
                off: n,
                emit: o
              };
            }

            var i = e(13);
            e(15);
            t.exports = n;
          }, {}],
          23: [function (e, t, r) {
            function n(e) {
              function t(e) {
                var t = {
                  auction_cycle: "ac",
                  global_timeout: "gt",
                  bid_requests: "brq",
                  bid_responses: "brs",
                  bid_errors: "be",
                  bid_passes: "bp",
                  bid_timeouts: "bt",
                  dfp_kv_pushed: "kv",
                  top_bid: "tb",
                  prefetch: "p",
                  res_latency: "rl",
                  partner_timeout: "pt"
                };
                return t.hasOwnProperty(e) ? t[e] : e;
              }

              function r() {
                if (c.isEmpty(P)) return [];
                var e = {
                  s: "identity",
                  t: O,
                  xslots: {}
                };

                for (var r in P) {
                  if (P.hasOwnProperty(r)) {
                    e.xslots.hasOwnProperty(r) || (e.xslots[r] = {});

                    for (var n = 0; n < P[r].length; n++) {
                      var i = P[r][n];
                      "bid_requests" !== i.n && "res_latency" !== i.n || (i.v = String(i.v)), e.xslots[r].hasOwnProperty(i.x) || (e.xslots[r][i.x] = {});
                      var o = t(i.n);
                      e.xslots[r][i.x][o] = i.v;
                    }
                  }
                }

                return P = {}, [e];
              }

              function f(e, t) {
                c.isEmpty(P) && (O = u.now());
                var r = t.statsId;
                P[r] = P[r] || [];
                var n = {
                  b: r,
                  x: N ? "after" : "before"
                };
                "hs_identity_request" === e ? (n.n = "bid_requests", n.v = 1, A[r] = u.now()) : "hs_identity_cached" === e ? (n.n = "bid_requests", n.v = 0) : "hs_identity_response" === e ? (n.n = "bid_responses", n.v = 1) : "hs_identity_error" === e ? (n.n = "bid_errors", n.v = 1) : "hs_identity_pass" === e ? (n.n = "bid_passes", n.v = 1) : "hs_identity_timeout" === e ? (n.n = "bid_timeouts", n.v = 1) : "hs_identity_bid_latency" === e && (n.n = "res_latency", n.v = u.now() - A[r]), P[r].push(n);
              }

              function l(e) {
                if (S.hasOwnProperty(e) && S[e] !== R.IPR && S[e] !== R.SENT) {
                  var t = {
                    p: I[e],
                    d: a.DeviceTypeChecker.getDeviceType(),
                    c: v,
                    s: e,
                    w: g,
                    t: u.now(),
                    pg: {
                      t: y,
                      e: b[e]
                    }
                  };
                  h.auctionCycle && (t.ac = E[e]), t.sl = r(), t.akamaiDebugInfo = T[e], delete T[e], delete b[e], delete w[e];
                  var n = s.buildUrl(d, null, {
                    s: p,
                    u: o.getPageUrl(),
                    v: 3
                  });
                  s.ajax({
                    method: "POST",
                    url: n,
                    data: t
                  }), S[e] = R.SENT;
                }
              }

              if (!s.isXhrSupported()) return null;

              var d,
                  p,
                  v,
                  h,
                  g,
                  y,
                  _,
                  E,
                  b,
                  w,
                  T,
                  S,
                  I,
                  P,
                  A,
                  O,
                  N,
                  R = {
                IPR: 0,
                DONE: 1,
                SENT: 2
              },
                  D = {
                hs_session_start: function hs_session_start(e) {
                  var t = e.sessionId;
                  S.hasOwnProperty(t) || (S[t] = R.IPR, _[t] = u.now(), b[t] = [], w[t] = {}, I[t] = n.SessionTypes.DISPLAY);
                },
                hs_session_end: function hs_session_end(e) {
                  var t = e.sessionId;
                  S.hasOwnProperty(t) && S[t] !== R.DONE && (E[t] = String(u.now() - _[t]), delete _[t], setTimeout(function () {
                    S[t] = R.DONE, l(t);
                  }, 0));
                },
                hs_akamai_debug: function hs_akamai_debug(e) {
                  var t = e.sessionId;
                  T[t] = {}, T[t].hostname = e.hostname, e.hasOwnProperty("requestHost") && (T[t].requestHost = e.requestHost), e.hasOwnProperty("akamaiPresent") && (T[t].akamaiPresent = e.akamaiPresent);
                },
                hs_identity_request: function hs_identity_request(e) {
                  f("hs_identity_request", e);
                },
                hs_identity_cached: function hs_identity_cached(e) {
                  f("hs_identity_cached", e);
                },
                hs_identity_response: function hs_identity_response(e) {
                  f("hs_identity_response", e), i.emit("hs_identity_bid_latency", e);
                },
                hs_identity_error: function hs_identity_error(e) {
                  f("hs_identity_error", e), i.emit("hs_identity_bid_latency", e);
                },
                hs_identity_pass: function hs_identity_pass(e) {
                  f("hs_identity_pass", e), i.emit("hs_identity_bid_latency", e);
                },
                hs_identity_bid_latency: function hs_identity_bid_latency(e) {
                  c.isNumber(A[e.statsId]) && f("hs_identity_bid_latency", e);
                },
                hs_identity_timeout: function hs_identity_timeout(e) {
                  f("hs_identity_timeout", e), N = !0;
                },
                hs_define_identity_timeout: function hs_define_identity_timeout(e) {}
              };

              return function () {
                i = a.services.EventsService, y = u.now(), d = "https://as-sec.casalemedia.com/headerstats", p = e.siteId, v = e.configId, h = e.options, g = p + u.now(), g += u.generateUniqueId(32 - g.length), a.instanceId = g, S = {}, b = {}, w = {}, T = {}, _ = {}, E = {}, I = {}, P = {}, A = {}, N = !1;

                for (var t in D) {
                  D.hasOwnProperty(t) && a.services.EventsService.on(t, D[t]);
                }
              }(), {};
            }

            var i,
                o = e(3),
                s = (e(4), e(17), e(12)),
                a = e(29),
                u = e(13),
                c = e(14);
            e(15);
            n.SessionTypes = {
              DISPLAY: "display",
              VIDEO: "video"
            }, t.exports = n;
          }, {}],
          24: [function (e, t, r) {
            function n() {
              function e() {
                return {
                  applies: !0,
                  consentString: ""
                };
              }

              function t() {
                return {
                  version: 1,
                  uspString: ""
                };
              }

              function r() {
                return !1;
              }

              function n(e) {
                return e;
              }

              function o() {
                return i.resolve();
              }

              return {
                gdpr: {
                  getConsent: e,
                  setApplies: function setApplies() {}
                },
                usp: {
                  getConsent: t
                },
                isPrivacyEnabled: r,
                delay: n,
                wait: o
              };
            }

            var i = e(10);
            t.exports = n;
          }, {}],
          25: [function (e, t, r) {
            e(13);

            t.exports = function () {
              return {};
            };
          }, {}],
          26: [function (e, t, r) {
            t.exports = function () {
              return {
                getSonarPayload: function getSonarPayload() {
                  return {};
                },
                getLastUpdated: function getLastUpdated() {
                  return 0;
                },
                setSonarEmail: function setSonarEmail() {
                  return {};
                }
              };
            };
          }, {}],
          27: [function (e, t, r) {
            function n() {
              function e(e) {
                return function () {
                  u[e].state = c.TERMINATED;

                  for (var t = 0; t < u[e].cbs.length; t++) {
                    try {
                      u[e].cbs[t]();
                    } catch (e) {}
                  }

                  delete u[e].cbs, delete u[e].timer;
                };
              }

              function t(t, r, n) {
                var s = o.generateUniqueId(i.SESSION_ID_LENGTH);
                return r = !!r, n = n ? [n] : [], u[s] = {
                  state: c.NEW,
                  cbs: n,
                  timeout: t
                }, r && (u[s].state = c.RUNNABLE, u[s].timer = setTimeout(e(s), t)), s;
              }

              function r(t) {
                u.hasOwnProperty(t) && u[t].state === c.NEW && (u[t].state = c.RUNNABLE, u[t].timer = setTimeout(e(t), u[t].timeout));
              }

              function n(e, t) {
                u.hasOwnProperty(e) && u[e].state !== c.TERMINATED && u[e].cbs.unshift(t);
              }

              function s(e) {
                return u.hasOwnProperty(e) ? u[e].state : null;
              }

              function a(e) {
                u.hasOwnProperty(e) && u[e].state !== c.TERMINATED && (u[e].state = c.TERMINATED, clearTimeout(u[e].timer), delete u[e].cbs, delete u[e].timer);
              }

              var u,
                  c = {
                NEW: 0,
                RUNNABLE: 1,
                TERMINATED: 2
              };
              return function () {
                u = {};
              }(), {
                TimerStates: c,
                createTimer: t,
                startTimer: r,
                addTimerCallback: n,
                getTimerState: s,
                clearTimer: a
              };
            }

            var i = e(7),
                o = e(13);
            e(15);
            t.exports = n;
          }, {}],
          28: [function (e, t, r) {
            var n,
                i,
                o = (e(3), e(6)),
                s = e(16),
                a = e(29),
                u = e(14);
            window[a.NAMESPACE] = window[a.NAMESPACE] || {}, window[a.NAMESPACE].cmd = window[a.NAMESPACE].cmd || [];
            var c = window[a.NAMESPACE].cmd;
            window[a.NAMESPACE] = function () {
              function e(e, t, r) {
                var n = "";

                try {
                  if (!u.isBoolean(t)) return i.emit("error", "`once` must be a boolean"), n;
                  if (!u.isFunction(r)) return i.emit("error", "`callback` must be a function"), n;
                  if (!u.isString(e)) return i.emit("error", "`eventName` must be a string"), n;
                  if (!p.hasOwnProperty(e)) return i.emit("error", "Unrecognized event " + e), n;
                  if ("rti_partner_request_complete" === e && !0 === d.emitted) return r(e, d.args), n;

                  var o = function o() {
                    var t = Array.prototype.slice.call(arguments);
                    r(e, JSON.stringify(t));
                  };

                  n = t ? i.once(e, o) : i.on(e, o);
                } catch (e) {
                  i.emit("error", e);
                }

                return n;
              }

              function t(e) {
                try {
                  if (!u.isString(e)) return void i.emit("error", "`subscriptionId` must be a string");
                  i.off(e);
                } catch (e) {
                  i.emit("error", e);
                }
              }

              function r() {
                return f.Layers.IdentityLayer.getAllPartnerResults();
              }

              function o(e) {
                var t = {
                  status: !1,
                  message: "Identity feature not enabled"
                };
                return t = a.services.PublisherSonarService.setSonarEmail(e), t.status && f.Layers.IdentityLayer.invokeAllPartners(), t;
              }

              var c,
                  f,
                  l,
                  d = {
                emitted: !1,
                args: {}
              },
                  p = {
                error: 1,
                warning: 2,
                rti_partner_request_complete: 3
              };
              if (function () {
                try {
                  c = {
                    DeviceTypeChecker: {
                      method: "USER_AGENT",
                      configs: {}
                    },
                    Services: {
                      EventsService: {},
                      TimerService: {},
                      HeaderStatsService: {
                        siteId: "263047",
                        configId: "78534564703284",
                        options: {
                          auctionCycle: !1
                        }
                      }
                    },
                    Layers: [{
                      layerId: "IdentityLayer",
                      configs: {
                        partners: {
                          AdserverOrgIp: {
                            enabled: !0,
                            configs: {
                              publisherId: 186948
                            }
                          },
                          LiveRampIp: {
                            enabled: !0,
                            configs: {}
                          },
                          MerkleIp: {
                            enabled: !0,
                            configs: {
                              pubid: "TURNER"
                            }
                          }
                        }
                      }
                    }]
                  }, f = s(c).getDirectInterface(), n = a.services.ComplianceService, i = a.services.EventsService;
                  var t = Math.random().toString(36).slice(-5);
                  i.emit("hs_session_start", {
                    sessionId: t
                  }), e("rti_partner_request_complete", !0, function (e, r) {
                    d = {
                      emitted: !0,
                      args: r
                    }, i.emit("hs_session_end", {
                      sessionId: t
                    });
                  }), n.wait().then(function () {
                    f.Layers.IdentityLayer.retrieve();
                  })["catch"](function (e) {});
                } catch (e) {
                  l = {
                    subscribeEvent: function subscribeEvent() {
                      return "";
                    },
                    unsubscribeEvent: function unsubscribeEvent() {}
                  };
                }
              }(), l) return l;
              var v = {};
              if (window[a.NAMESPACE]) for (var h in window[a.NAMESPACE]) {
                window[a.NAMESPACE].hasOwnProperty(h) && (v[h] = window[a.NAMESPACE][h]);
              }
              return v.subscribeEvent = e, v.unsubscribeEvent = t, v.getIdentityInfo = r, v.setSonarEmail = o, v;
            }(), window[a.NAMESPACE].cmd = o(c);
          }, {}],
          29: [function (e, t, r) {
            var n = {
              NAMESPACE: "headertag",
              PRODUCT: "IdentityLibrary",
              services: {},
              DeviceTypeChecker: {},
              initQueue: [],
              globalTimeout: null,
              instanceId: null,
              version: "2.33.0"
            };
            t.exports = n;
          }, {}]
        }, {}, [28]);
        /* eslint-enable */

        scriptAdded = true;
      }
    }
  };

  var registerModuleWithAdFuel = function registerModuleWithAdFuel(config) {
    if (!window.AdFuelUtils.isIntl()) {
      logger.log('Registering module with AdFuel');
      window.AdFuel.registerModule(MODULE_NAME, {}, MODULE_VERSION, config);
      includeIndexIdentityWrapper(config.IDENTITY || '');
    }
  };

  var init = function init(opts) {
    var initPromise = new Promise(function (resolve) {
      // Get the config values for the module
      // NOTE: Replace MODULE_KEY with a value for the module.  ex: IAS or PREBID
      var moduleConfig = opts.IX; // Define the logger and set the debug key used for the module.
      // NOTE: Replace 'MODULE-KEY' with a value for the module.  ex: 'ias' or 'prebid'

      logger = window.AdFuelUtils.getLogger(MODULE_NAME, MODULE_VERSION, 'ix', 'color: #d2b000; padding: 2px', moduleConfig.DEBUG);
      logger.log('Initializing Module...'); // Do any initialization logic here

      if (window.AdFuel) {
        // AdFuel is already loaded... register module
        registerModuleWithAdFuel(moduleConfig);
      } else {
        // Wait for AdFuel then register module
        window.AdFuelUtils.addEvent(document, 'AdFuelCreated', function () {
          registerModuleWithAdFuel(moduleConfig);
        });
      }

      resolve();
    });
    initPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return initPromise;
  }; // STANDARD INITIALIZATION WRAPPER...
  // DO NOT MODIFY UNLESS YOU ARE ABSOLUTELY SURE YOU KNOW WHAT YOU ARE DOING


  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                window.AdFuelUtils.addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        window.AdFuelUtils.addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    // You only need to include the callbacks you use here.
    registerModuleWithAdFuel: registerModuleWithAdFuel,
    init: init,
    __NAME__: MODULE_NAME,
    __VERSION__: MODULE_VERSION
  };
  return index;
}); ////////////////////////////////////////////
// AC Prebid for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.Prebid = factory());
})(void 0, function () {
  'use strict';
  /* eslint-disable */

  /* prebid.js v3.13.0-pre
  Updated : 2020-09-03 */

  !function (u) {
    var s = window.pbjsChunk;

    window.pbjsChunk = function (e, t, n) {
      for (var r, i, o, a = 0, c = []; a < e.length; a++) {
        i = e[a], d[i] && c.push(d[i][0]), d[i] = 0;
      }

      for (r in t) {
        Object.prototype.hasOwnProperty.call(t, r) && (u[r] = t[r]);
      }

      for (s && s(e, t, n); c.length;) {
        c.shift()();
      }

      if (n) for (a = 0; a < n.length; a++) {
        o = f(f.s = n[a]);
      }
      return o;
    };

    var n = {},
        d = {
      272: 0
    };

    function f(e) {
      if (n[e]) return n[e].exports;
      var t = n[e] = {
        i: e,
        l: !1,
        exports: {}
      };
      return u[e].call(t.exports, t, t.exports, f), t.l = !0, t.exports;
    }

    f.m = u, f.c = n, f.d = function (e, t, n) {
      f.o(e, t) || Object.defineProperty(e, t, {
        configurable: !1,
        enumerable: !0,
        get: n
      });
    }, f.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e["default"];
      } : function () {
        return e;
      };
      return f.d(t, "a", t), t;
    }, f.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, f.p = "", f.oe = function (e) {
      throw console.error(e), e;
    }, f(f.s = 681);
  }({
    0: function _(e, t, n) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), n.d(t, "internal", function () {
        return _;
      }), n.d(t, "bind", function () {
        return U;
      }), t.replaceTokenInString = function (i, e, o) {
        return ee(e, function (e, t) {
          e = void 0 === e ? "" : e;
          var n = o + t.toUpperCase() + o,
              r = new RegExp(n, "g");
          i = i.replace(r, e);
        }), i;
      }, t.getUniqueIdentifierStr = k, t.generateUUID = function e(t) {
        return t ? (t ^ N() >> t / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, e);
      }, t.getBidIdParameter = function (e, t) {
        if (t && t[e]) return t[e];
        return "";
      }, t.tryAppendQueryString = function (e, t, n) {
        if (n) return e += t + "=" + encodeURIComponent(n) + "&";
        return e;
      }, t.parseQueryStringParameters = function (e) {
        var t = "";

        for (var n in e) {
          e.hasOwnProperty(n) && (t += n + "=" + encodeURIComponent(e[n]) + "&");
        }

        return t;
      }, t.transformAdServerTargetingObj = function (t) {
        return t && 0 < Object.getOwnPropertyNames(t).length ? de(t).map(function (e) {
          return "".concat(e, "=").concat(encodeURIComponent(fe(t, e)));
        }).join("&") : "";
      }, t.getAdUnitSizes = function (e) {
        if (!e) return;
        var t = [];
        {
          var n;
          e.mediaTypes && e.mediaTypes.banner && Array.isArray(e.mediaTypes.banner.sizes) ? (n = e.mediaTypes.banner.sizes, Array.isArray(n[0]) ? t = n : t.push(n)) : Array.isArray(e.sizes) && (Array.isArray(e.sizes[0]) ? t = e.sizes : t.push(e.sizes));
        }
        return t;
      }, t.parseSizesInput = function (e) {
        var t = [];

        if ("string" == typeof e) {
          var n = e.split(","),
              r = /^(\d)+x(\d)+$/i;
          if (n) for (var i in n) {
            ne(n, i) && n[i].match(r) && t.push(n[i]);
          }
        } else if ("object" === b(e)) {
          var o = e.length;
          if (0 < o) if (2 === o && "number" == typeof e[0] && "number" == typeof e[1]) t.push(x(e));else for (var a = 0; a < o; a++) {
            t.push(x(e[a]));
          }
        }

        return t;
      }, t.parseGPTSingleSizeArray = x, t.parseGPTSingleSizeArrayToRtbSize = function (e) {
        if (P(e)) return {
          w: e[0],
          h: e[1]
        };
      }, t.getWindowTop = M, t.getWindowSelf = q, t.getWindowLocation = G, t.logMessage = W, t.logInfo = L, t.logWarn = F, t.logError = z, t.hasConsoleLogger = function () {
        return I;
      }, t.debugTurnedOn = H, t.createInvisibleIframe = function () {
        var e = document.createElement("iframe");
        return e.id = k(), e.height = 0, e.width = 0, e.border = "0px", e.hspace = "0", e.vspace = "0", e.marginWidth = "0", e.marginHeight = "0", e.style.border = "0", e.scrolling = "no", e.frameBorder = "0", e.src = "about:blank", e.style.display = "none", e;
      }, t.getParameterByName = function (e) {
        var t = new RegExp("[\\?&]" + e + "=([^&#]*)").exec(window.location.search);
        return null !== t ? decodeURIComponent(t[1].replace(/\+/g, " ")) : "";
      }, t.hasValidBidRequest = function (e, n, t) {
        var r = !1;

        function i(e, t) {
          t === n[o] && (r = !0);
        }

        for (var o = 0; o < n.length; o++) {
          if (r = !1, ee(e, i), !r) return z("Params are missing for bid request. One of these required paramaters are missing: " + n, t), !1;
        }

        return !0;
      }, t.addEventHandler = function (e, t, n) {
        e.addEventListener ? e.addEventListener(t, n, !0) : e.attachEvent && e.attachEvent("on" + t, n);
      }, t.isA = K, t.isFn = J, t.isStr = Y, t.isArray = Q, t.isNumber = $, t.isPlainObject = X, t.isBoolean = function (e) {
        return K(e, E);
      }, t.isEmpty = Z, t.isEmptyStr = function (e) {
        return Y(e) && (!e || 0 === e.length);
      }, t._each = ee, t.contains = function (e, t) {
        if (Z(e)) return !1;
        if (J(e.indexOf)) return -1 !== e.indexOf(t);
        var n = e.length;

        for (; n--;) {
          if (e[n] === t) return !0;
        }

        return !1;
      }, n.d(t, "indexOf", function () {
        return te;
      }), t._map = function (n, r) {
        if (Z(n)) return [];
        if (J(n.map)) return n.map(r);
        var i = [];
        return ee(n, function (e, t) {
          i.push(r(e, t, n));
        }), i;
      }, t.hasOwn = ne, t.insertElement = re, t.triggerPixel = ie, t.callBurl = function (e) {
        var t = e.source,
            n = e.burl;
        t === y.S2S.SRC && n && _.triggerPixel(n);
      }, t.insertHtmlIntoIframe = function (e) {
        if (!e) return;
        var t = document.createElement("iframe");
        t.id = k(), t.width = 0, t.height = 0, t.hspace = "0", t.vspace = "0", t.marginWidth = "0", t.marginHeight = "0", t.style.display = "none", t.style.height = "0px", t.style.width = "0px", t.scrolling = "no", t.frameBorder = "0", t.allowtransparency = "true", _.insertElement(t, document, "body"), t.contentWindow.document.open(), t.contentWindow.document.write(e), t.contentWindow.document.close();
      }, t.insertUserSyncIframe = oe, t.createTrackPixelHtml = function (e) {
        if (!e) return "";
        var t = encodeURI(e),
            n = '<div style="position:absolute;left:0px;top:0px;visibility:hidden;">';
        return n += '<img src="' + t + '"></div>';
      }, t.createTrackPixelIframeHtml = ae, t.getIframeDocument = function (e) {
        if (!e) return;
        var t;

        try {
          t = e.contentWindow ? e.contentWindow.document : e.contentDocument.document ? e.contentDocument.document : e.contentDocument;
        } catch (e) {
          _.logError("Cannot get iframe document", e);
        }

        return t;
      }, t.getValueString = ce, t.uniques = ue, t.flatten = se, t.getBidRequest = function (n, e) {
        return n ? (e.some(function (e) {
          var t = c()(e.bids, function (t) {
            return ["bidId", "adId", "bid_id"].some(function (e) {
              return t[e] === n;
            });
          });
          return t && (r = t), t;
        }), r) : void 0;
        var r;
      }, t.getKeys = de, t.getValue = fe, t.getKeyByValue = function (e, t) {
        for (var n in e) {
          if (e.hasOwnProperty(n) && e[n] === t) return n;
        }
      }, t.getBidderCodes = function () {
        return (0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : pbjs.adUnits).map(function (e) {
          return e.bids.map(function (e) {
            return e.bidder;
          }).reduce(se, []);
        }).reduce(se).filter(ue);
      }, t.isGptPubadsDefined = function () {
        if (window.googletag && J(window.googletag.pubads) && J(window.googletag.pubads().getSlots)) return !0;
      }, n.d(t, "getHighestCpm", function () {
        return le;
      }), n.d(t, "getOldestHighestCpmBid", function () {
        return pe;
      }), n.d(t, "getLatestHighestCpmBid", function () {
        return ge;
      }), t.shuffle = function (e) {
        var t = e.length;

        for (; 0 < t;) {
          var n = Math.floor(Math.random() * t),
              r = e[--t];
          e[t] = e[n], e[n] = r;
        }

        return e;
      }, t.adUnitsFilter = function (e, t) {
        return s()(e, t && t.adUnitCode);
      }, t.isSrcdocSupported = function (e) {
        return e.defaultView && e.defaultView.frameElement && "srcdoc" in e.defaultView.frameElement && !/firefox/i.test(navigator.userAgent);
      }, t.deepClone = ye, t.inIframe = function () {
        try {
          return _.getWindowSelf() !== _.getWindowTop();
        } catch (e) {
          return !0;
        }
      }, t.isSafariBrowser = function () {
        return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
      }, t.replaceAuctionPrice = function (e, t) {
        if (!e) return;
        return e.replace(/\$\{AUCTION_PRICE\}/g, t);
      }, t.timestamp = function () {
        return new Date().getTime();
      }, t.hasDeviceAccess = ve, t.checkCookieSupport = he, t.cookiesAreEnabled = function () {
        if (ve()) return !!_.checkCookieSupport() || (window.document.cookie = "prebid.cookieTest", -1 !== window.document.cookie.indexOf("prebid.cookieTest"));
        return !1;
      }, t.getCookie = function (e) {
        if (ve()) {
          var t = window.document.cookie.match("(^|;)\\s*" + e + "\\s*=\\s*([^;]*)\\s*(;|$)");
          return t ? decodeURIComponent(t[2]) : null;
        }

        return null;
      }, t.setCookie = function (e, t, n, r, i) {
        {
          var o, a;
          ve() && (o = i && "" !== i ? " ;domain=".concat(encodeURIComponent(i)) : "", a = n && "" !== n ? " ;expires=".concat(n) : "", document.cookie = "".concat(e, "=").concat(encodeURIComponent(t)).concat(a, "; path=/").concat(o).concat(r ? "; SameSite=".concat(r) : ""));
        }
      }, t.findSimilarCookies = function (e) {
        var t = [];
        if (ve()) for (var n = document.cookie.split(";"); n.length;) {
          var r = n.pop(),
              i = r.indexOf("=");
          i = i < 0 ? r.length : i, 0 <= decodeURIComponent(r.slice(0, i).replace(/^\s+/, "")).indexOf(e) && t.push(decodeURIComponent(r.slice(i + 1)));
        }
        return t;
      }, t.localStorageIsEnabled = function () {
        if (ve()) try {
          return localStorage.setItem("prebid.cookieTest", "1"), "1" === localStorage.getItem("prebid.cookieTest");
        } catch (e) {}
        return !1;
      }, t.delayExecution = function (e, t) {
        if (t < 1) throw new Error("numRequiredCalls must be a positive number. Got ".concat(t));
        var n = 0;
        return function () {
          ++n === t && e.apply(this, arguments);
        };
      }, t.groupBy = function (e, n) {
        return e.reduce(function (e, t) {
          return (e[t[n]] = e[t[n]] || []).push(t), e;
        }, {});
      }, t.createContentToExecuteExtScriptInFriendlyFrame = function (e) {
        return e ? '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html><head><base target="_top" /><script>inDapIF=true;<\/script></head><body>\x3c!--PRE_SCRIPT_TAG_MACRO--\x3e<script src="'.concat(e, '"><\/script>\x3c!--POST_SCRIPT_TAG_MACRO--\x3e</body></html>') : "";
      }, t.getDefinedParams = function (n, e) {
        return e.filter(function (e) {
          return n[e];
        }).reduce(function (e, t) {
          return g(e, function (e, t, n) {
            t in e ? Object.defineProperty(e, t, {
              value: n,
              enumerable: !0,
              configurable: !0,
              writable: !0
            }) : e[t] = n;
            return e;
          }({}, t, n[t]));
        }, {});
      }, t.isValidMediaTypes = function (e) {
        var t = ["banner", "native", "video"];
        if (!Object.keys(e).every(function (e) {
          return s()(t, e);
        })) return !1;
        if (e.video && e.video.context) return s()(["instream", "outstream", "adpod"], e.video.context);
        return !0;
      }, t.getBidderRequest = function (e, t, n) {
        return c()(e, function (e) {
          return 0 < e.bids.filter(function (e) {
            return e.bidder === t && e.adUnitCode === n;
          }).length;
        }) || {
          start: null,
          auctionId: null
        };
      }, t.getUserConfiguredParams = function (e, t, n) {
        return e.filter(function (e) {
          return e.code === t;
        }).map(function (e) {
          return e.bids;
        }).reduce(se, []).filter(function (e) {
          return e.bidder === n;
        }).map(function (e) {
          return e.params || {};
        });
      }, t.getOrigin = function () {
        return window.location.origin ? window.location.origin : window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : "");
      }, t.getDNT = function () {
        return "1" === navigator.doNotTrack || "1" === window.doNotTrack || "1" === navigator.msDoNotTrack || "yes" === navigator.doNotTrack;
      }, t.isAdUnitCodeMatchingSlot = function (t) {
        return function (e) {
          return me(t, e);
        };
      }, t.isSlotMatchingAdUnitCode = function (t) {
        return function (e) {
          return me(e, t);
        };
      }, t.unsupportedBidderMessage = function (e, t) {
        var n = Object.keys(e.mediaTypes || {
          banner: "banner"
        }).join(", ");
        return "\n    ".concat(e.code, " is a ").concat(n, " ad unit\n    containing bidders that don't support ").concat(n, ": ").concat(t, ".\n    This bidder won't fetch demand.\n  ");
      }, t.deletePropertyFromObject = function (e, t) {
        var n = g({}, e);
        return delete n[t], n;
      }, t.isInteger = Se, t.convertCamelToUnderscore = function (e) {
        return e.replace(/(?:^|\.?)([A-Z])/g, function (e, t) {
          return "_" + t.toLowerCase();
        }).replace(/^_/, "");
      }, t.cleanObj = function (n) {
        return Object.keys(n).reduce(function (e, t) {
          return void 0 !== n[t] && (e[t] = n[t]), e;
        }, {});
      }, t.pick = function (a, c) {
        return "object" === b(a) ? c.reduce(function (e, t, n) {
          if ("function" == typeof t) return e;
          var r = t,
              i = t.match(/^(.+?)\sas\s(.+?)$/i);
          i && (t = i[1], r = i[2]);
          var o = a[t];
          return "function" == typeof c[n + 1] && (o = c[n + 1](o, e)), void 0 !== o && (e[r] = o), e;
        }, {}) : {};
      }, t.transformBidderParamKeywords = function (e) {
        var r = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "keywords",
            i = [];
        return ee(e, function (e, t) {
          if (Q(e)) {
            var n = [];
            ee(e, function (e) {
              !(e = ce(r + "." + t, e)) && "" !== e || n.push(e);
            }), e = n;
          } else {
            if (!Y(e = ce(r + "." + t, e))) return;
            e = [e];
          }

          i.push({
            key: t,
            value: e
          });
        }), i;
      }, t.convertTypes = function (r, i) {
        return Object.keys(r).forEach(function (e) {
          var t, n;
          i[e] && (J(r[e]) ? i[e] = r[e](i[e]) : i[e] = (t = r[e], n = i[e], "string" === t ? n && n.toString() : "number" === t ? Number(n) : n), isNaN(i[e]) && delete i.key);
        }), i;
      }, t.setDataInLocalStorage = function (e, t) {
        Ae() && window.localStorage.setItem(e, t);
      }, t.getDataFromLocalStorage = function (e) {
        if (Ae()) return window.localStorage.getItem(e);
        return null;
      }, t.removeDataFromLocalStorage = function (e) {
        Ae() && window.localStorage.removeItem(e);
      }, t.hasLocalStorage = Ae, t.isArrayOfNums = function (e, t) {
        return Q(e) && (!t || e.length === t) && e.every(Se);
      }, t.fill = function (e, t) {
        for (var n = [], r = 0; r < t; r++) {
          var i = X(e) ? ye(e) : e;
          n.push(i);
        }

        return n;
      }, t.chunk = function (e, t) {
        for (var n = [], r = 0; r < Math.ceil(e.length / t); r++) {
          var i = r * t,
              o = i + t;
          n.push(e.slice(i, o));
        }

        return n;
      }, t.getMinValueFromArray = function (e) {
        return Math.min.apply(Math, l(e));
      }, t.getMaxValueFromArray = function (e) {
        return Math.max.apply(Math, l(e));
      }, t.compareOn = function (n) {
        return function (e, t) {
          return e[n] < t[n] ? 1 : e[n] > t[n] ? -1 : 0;
        };
      };
      var r = n(3),
          i = n(115),
          o = n.n(i),
          a = n(12),
          c = n.n(a),
          u = n(11),
          s = n.n(u),
          d = n(116);
      n.d(t, "deepAccess", function () {
        return d.a;
      });
      var f = n(117);

      function l(e) {
        return function (e) {
          if (Array.isArray(e)) return p(e);
        }(e) || function (e) {
          if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
        }(e) || function (e, t) {
          if (!e) return;
          if ("string" == typeof e) return p(e, t);
          var n = Object.prototype.toString.call(e).slice(8, -1);
          "Object" === n && e.constructor && (n = e.constructor.name);
          if ("Map" === n || "Set" === n) return Array.from(e);
          if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return p(e, t);
        }(e) || function () {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function p(e, t) {
        (null == t || t > e.length) && (t = e.length);

        for (var n = 0, r = new Array(t); n < t; n++) {
          r[n] = e[n];
        }

        return r;
      }

      function g() {
        return (g = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];

            for (var r in n) {
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      function b(e) {
        return (b = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
          return _typeof4(e);
        } : function (e) {
          return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof4(e);
        })(e);
      }

      n.d(t, "deepSetValue", function () {
        return f.a;
      });
      var y = n(5),
          v = "Array",
          h = "String",
          m = "Function",
          S = "Number",
          A = "Object",
          E = "Boolean",
          T = Object.prototype.toString,
          O = Boolean(window.console),
          I = Boolean(O && window.console.log),
          C = Boolean(O && window.console.info),
          w = Boolean(O && window.console.warn),
          j = Boolean(O && window.console.error),
          _ = {
        checkCookieSupport: he,
        createTrackPixelIframeHtml: ae,
        getWindowSelf: q,
        getWindowTop: M,
        getWindowLocation: G,
        insertUserSyncIframe: oe,
        insertElement: re,
        isFn: J,
        triggerPixel: ie,
        logError: z,
        logWarn: F,
        logMessage: W,
        logInfo: L
      },
          B = {},
          U = function (e, t) {
        return t;
      }.bind(null, 1, B)() === B ? Function.prototype.bind : function (e) {
        var t = this,
            n = Array.prototype.slice.call(arguments, 1);
        return function () {
          return t.apply(e, n.concat(Array.prototype.slice.call(arguments)));
        };
      };
      var R,
          D = (R = 0, function () {
        return ++R;
      });

      function k() {
        return D() + Math.random().toString(16).substr(2);
      }

      function N() {
        return window && window.crypto && window.crypto.getRandomValues ? crypto.getRandomValues(new Uint8Array(1))[0] % 16 : 16 * Math.random();
      }

      function x(e) {
        if (P(e)) return e[0] + "x" + e[1];
      }

      function P(e) {
        return Q(e) && 2 === e.length && !isNaN(e[0]) && !isNaN(e[1]);
      }

      function M() {
        return window.top;
      }

      function q() {
        return window.self;
      }

      function G() {
        return window.location;
      }

      function W() {
        H() && I && console.log.apply(console, V(arguments, "MESSAGE:"));
      }

      function L() {
        H() && C && console.info.apply(console, V(arguments, "INFO:"));
      }

      function F() {
        H() && w && console.warn.apply(console, V(arguments, "WARNING:"));
      }

      function z() {
        H() && j && console.error.apply(console, V(arguments, "ERROR:"));
      }

      function V(e, t) {
        return e = [].slice.call(e), t && e.unshift(t), e.unshift("display: inline-block; color: #fff; background: #3b88c3; padding: 1px 4px; border-radius: 3px;"), e.unshift("%cPrebid"), e;
      }

      function H() {
        return !!r.b.getConfig("debug");
      }

      function K(e, t) {
        return T.call(e) === "[object " + t + "]";
      }

      function J(e) {
        return K(e, m);
      }

      function Y(e) {
        return K(e, h);
      }

      function Q(e) {
        return K(e, v);
      }

      function $(e) {
        return K(e, S);
      }

      function X(e) {
        return K(e, A);
      }

      function Z(e) {
        if (!e) return !0;
        if (Q(e) || Y(e)) return !(0 < e.length);

        for (var t in e) {
          if (hasOwnProperty.call(e, t)) return !1;
        }

        return !0;
      }

      function ee(e, t) {
        if (!Z(e)) {
          if (J(e.forEach)) return e.forEach(t, this);
          var n = 0,
              r = e.length;
          if (0 < r) for (; n < r; n++) {
            t(e[n], n, e);
          } else for (n in e) {
            hasOwnProperty.call(e, n) && t.call(this, e[n], n);
          }
        }
      }

      var te = function () {
        if (Array.prototype.indexOf) return Array.prototype.indexOf;
      }();

      function ne(e, t) {
        return e.hasOwnProperty ? e.hasOwnProperty(t) : void 0 !== e[t] && e.constructor.prototype[t] !== e[t];
      }

      function re(e, t, n, r) {
        var i;
        t = t || document, i = n ? t.getElementsByTagName(n) : t.getElementsByTagName("head");

        try {
          if ((i = i.length ? i : t.getElementsByTagName("body")).length) {
            i = i[0];
            var o = r ? null : i.firstChild;
            return i.insertBefore(e, o);
          }
        } catch (e) {}
      }

      function ie(e, t) {
        var n = new Image();
        t && _.isFn(t) && (n.addEventListener("load", t), n.addEventListener("error", t)), n.src = e;
      }

      function oe(e, t) {
        var n = _.createTrackPixelIframeHtml(e, !1, "allow-scripts allow-same-origin"),
            r = document.createElement("div");

        r.innerHTML = n;
        var i = r.firstChild;
        t && _.isFn(t) && (i.addEventListener("load", t), i.addEventListener("error", t)), _.insertElement(i, document, "html", !0);
      }

      function ae(e) {
        var t = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : "";
        return e ? ((!(1 < arguments.length && void 0 !== arguments[1]) || arguments[1]) && (e = encodeURI(e)), t = t && 'sandbox="'.concat(t, '"'), "<iframe ".concat(t, ' id="').concat(k(), '"\n      frameborder="0"\n      allowtransparency="true"\n      marginheight="0" marginwidth="0"\n      width="0" hspace="0" vspace="0" height="0"\n      style="height:0px;width:0px;display:none;"\n      scrolling="no"\n      src="').concat(e, '">\n    </iframe>')) : "";
      }

      function ce(e, t, n) {
        return null == t ? n : Y(t) ? t : $(t) ? t.toString() : void _.logWarn("Unsuported type for param: " + e + " required type: String");
      }

      function ue(e, t, n) {
        return n.indexOf(e) === t;
      }

      function se(e, t) {
        return e.concat(t);
      }

      function de(e) {
        return Object.keys(e);
      }

      function fe(e, t) {
        return e[t];
      }

      var le = be("timeToRespond", function (e, t) {
        return t < e;
      }),
          pe = be("responseTimestamp", function (e, t) {
        return t < e;
      }),
          ge = be("responseTimestamp", function (e, t) {
        return e < t;
      });

      function be(n, r) {
        return function (e, t) {
          return e.cpm === t.cpm ? r(e[n], t[n]) ? t : e : e.cpm < t.cpm ? t : e;
        };
      }

      function ye(e) {
        return o()(e);
      }

      function ve() {
        return !1 !== r.b.getConfig("deviceAccess");
      }

      function he() {
        if (window.navigator.cookieEnabled || document.cookie.length) return !0;
      }

      var me = function me(e, t) {
        return e.getAdUnitPath() === t || e.getSlotElementId() === t;
      };

      function Se(e) {
        return Number.isInteger ? Number.isInteger(e) : "number" == typeof e && isFinite(e) && Math.floor(e) === e;
      }

      function Ae() {
        if (ve()) try {
          return !!window.localStorage;
        } catch (e) {
          z("Local storage api disabled");
        }
        return !1;
      }
    },
    1: function _(e, t, n) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), t.registerBidder = function (t) {
        var n = Array.isArray(t.supportedMediaTypes) ? {
          supportedMediaTypes: t.supportedMediaTypes
        } : void 0;

        function r(e) {
          var t = C(e);
          a["default"].registerBidAdapter(t, e.code, n);
        }

        r(t), Array.isArray(t.aliases) && t.aliases.forEach(function (e) {
          a["default"].aliasRegistry[e] = t.code, r(T({}, t, {
            code: e
          }));
        });
      }, t.newBidder = C, t.preloadBidderMappingFile = w, t.getIabSubCategory = function (t, e) {
        var n = a["default"].getBidAdapter(t);

        if (n.getSpec().getMappingFileInfo) {
          var r = n.getSpec().getMappingFileInfo(),
              i = r.localStorageKey ? r.localStorageKey : n.getBidderCode(),
              o = Object(m.getDataFromLocalStorage)(i);

          if (o) {
            try {
              o = JSON.parse(o);
            } catch (e) {
              Object(m.logError)("Failed to parse ".concat(t, " mapping data stored in local storage"));
            }

            return o.mapping[e] ? o.mapping[e] : null;
          }
        }
      }, t.isValid = j;
      var r = n(77),
          a = n(7),
          o = n(3),
          y = n(24),
          c = n(33),
          u = n(23),
          s = n(34),
          i = n(5),
          v = n.n(i),
          d = n(8),
          h = n.n(d),
          f = n(11),
          l = n.n(f),
          p = n(4),
          m = n(0),
          g = n(2),
          b = n(13);

      function S(e, t) {
        return function (e) {
          if (Array.isArray(e)) return e;
        }(e) || function (e, t) {
          if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e))) return;
          var n = [],
              r = !0,
              i = !1,
              o = void 0;

          try {
            for (var a, c = e[Symbol.iterator](); !(r = (a = c.next()).done) && (n.push(a.value), !t || n.length !== t); r = !0) {
              ;
            }
          } catch (e) {
            i = !0, o = e;
          } finally {
            try {
              r || null == c["return"] || c["return"]();
            } finally {
              if (i) throw o;
            }
          }

          return n;
        }(e, t) || function (e, t) {
          if (!e) return;
          if ("string" == typeof e) return A(e, t);
          var n = Object.prototype.toString.call(e).slice(8, -1);
          "Object" === n && e.constructor && (n = e.constructor.name);
          if ("Map" === n || "Set" === n) return Array.from(e);
          if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return A(e, t);
        }(e, t) || function () {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function A(e, t) {
        (null == t || t > e.length) && (t = e.length);

        for (var n = 0, r = new Array(t); n < t; n++) {
          r[n] = e[n];
        }

        return r;
      }

      function E(e) {
        return (E = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
          return _typeof4(e);
        } : function (e) {
          return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof4(e);
        })(e);
      }

      function T() {
        return (T = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];

            for (var r in n) {
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      var O = ["requestId", "cpm", "ttl", "creativeId", "netRevenue", "currency"],
          I = 1;

      function C(p) {
        return T(new r.a(p.code), {
          getSpec: function getSpec() {
            return Object.freeze(p);
          },
          registerSyncs: g,
          callBids: function callBids(o, a, e, n, c, r) {
            var u, s, t, d, i, f;

            function l() {
              e(), h.a.emit(v.a.EVENTS.BIDDER_DONE, o), g(s, o.gdprConsent, o.uspConsent);
            }

            Array.isArray(o.bids) && (u = {}, s = [], 0 !== (t = o.bids.filter(b)).length ? (d = {}, t.forEach(function (e) {
              (d[e.bidId] = e).adUnitCode || (e.adUnitCode = e.placementCode);
            }), (i = p.buildRequests(t, o)) && 0 !== i.length ? (Array.isArray(i) || (i = [i]), f = Object(m.delayExecution)(r(l), i.length), i.forEach(function (i) {
              switch (i.method) {
                case "GET":
                  n("".concat(i.url).concat(function (e) {
                    if (e) return "?".concat("object" === E(e) ? Object(m.parseQueryStringParameters)(e) : e);
                    return "";
                  }(i.data)), {
                    success: r(e),
                    error: t
                  }, void 0, T({
                    method: "GET",
                    withCredentials: !0
                  }, i.options));
                  break;

                case "POST":
                  n(i.url, {
                    success: r(e),
                    error: t
                  }, "string" == typeof i.data ? i.data : JSON.stringify(i.data), T({
                    method: "POST",
                    contentType: "text/plain",
                    withCredentials: !0
                  }, i.options));
                  break;

                default:
                  Object(m.logWarn)("Skipping invalid request from ".concat(p.code, ". Request type ").concat(i.type, " must be GET or POST")), f();
              }

              function e(e, t) {
                c(p.code);

                try {
                  e = JSON.parse(e);
                } catch (e) {}

                var n;
                e = {
                  body: e,
                  headers: {
                    get: t.getResponseHeader.bind(t)
                  }
                }, s.push(e);

                try {
                  n = p.interpretResponse(e, i);
                } catch (e) {
                  return Object(m.logError)("Bidder ".concat(p.code, " failed to interpret the server's response. Continuing without bids"), null, e), void f();
                }

                function r(e) {
                  var t,
                      n,
                      r,
                      i = d[e.requestId];
                  i ? (e.originalCpm = e.cpm, e.originalCurrency = e.currency, t = T(Object(y.a)(v.a.STATUS.GOOD, i), e), n = i.adUnitCode, r = t, u[n] = !0, j(n, r, [o]) && a(n, r)) : Object(m.logWarn)("Bidder ".concat(p.code, " made bid for unknown request ID: ").concat(e.requestId, ". Ignoring."));
                }

                n && (Object(m.isArray)(n) ? n.forEach(r) : r(n)), f(n);
              }

              function t(e) {
                c(p.code), Object(m.logError)("Server call for ".concat(p.code, " failed: ").concat(e, ". Continuing without bids.")), f();
              }
            })) : l()) : l());
          }
        });

        function g(e, t, n) {
          var r, i;
          p.getUserSyncs && !a["default"].aliasRegistry[p.code] && (r = o.b.getConfig("userSync.filterSettings"), (i = p.getUserSyncs({
            iframeEnabled: !(!r || !r.iframe && !r.all),
            pixelEnabled: !(!r || !r.image && !r.all)
          }, e, t, n)) && (Array.isArray(i) || (i = [i]), i.forEach(function (e) {
            c.a.registerSync(e.type, p.code, e.url);
          })));
        }

        function b(e) {
          return !!p.isBidRequestValid(e) || (Object(m.logWarn)("Invalid bid sent to bidder ".concat(p.code, ": ").concat(JSON.stringify(e))), !1);
        }
      }

      function w(e, t) {
        if (!o.b.getConfig("adpod.brandCategoryExclusion")) return e.call(this, t);
        t.filter(function (e) {
          return Object(m.deepAccess)(e, "mediaTypes.video.context") === g.a;
        }).map(function (e) {
          return e.bids.map(function (e) {
            return e.bidder;
          });
        }).reduce(m.flatten, []).filter(m.uniques).forEach(function (n) {
          var e,
              t,
              r,
              i,
              o = a["default"].getBidAdapter(n);
          o.getSpec().getMappingFileInfo && (t = (e = o.getSpec().getMappingFileInfo()).refreshInDays ? e.refreshInDays : I, r = e.localStorageKey ? e.localStorageKey : o.getSpec().code, (!(i = Object(m.getDataFromLocalStorage)(r)) || Object(m.timestamp)() < i.lastUpdated + 24 * t * 60 * 60 * 1e3) && Object(p.a)(e.url, {
            success: function success(e) {
              try {
                e = JSON.parse(e);
                var t = {
                  lastUpdated: Object(m.timestamp)(),
                  mapping: e.mapping
                };
                Object(m.setDataInLocalStorage)(r, JSON.stringify(t));
              } catch (e) {
                Object(m.logError)("Failed to parse ".concat(n, " bidder translation mapping file"));
              }
            },
            error: function error() {
              Object(m.logError)("Failed to load ".concat(n, " bidder translation file"));
            }
          }));
        }), e.call(this, t);
      }

      function j(e, t, n) {
        function r(e) {
          return "Invalid bid from ".concat(t.bidderCode, ". Ignoring bid: ").concat(e);
        }

        return e ? t ? (i = Object.keys(t), O.every(function (e) {
          return l()(i, e) && !l()([void 0, null], t[e]);
        }) ? "native" !== t.mediaType || Object(u.f)(t, n) ? "video" !== t.mediaType || Object(s.d)(t, n) ? !("banner" === t.mediaType && !function (e, t, n) {
          if ((t.width || 0 === parseInt(t.width, 10)) && (t.height || 0 === parseInt(t.height, 10))) return t.width = parseInt(t.width, 10), t.height = parseInt(t.height, 10), 1;
          var r = Object(m.getBidderRequest)(n, t.bidderCode, e),
              i = r && r.bids && r.bids[0] && r.bids[0].sizes,
              o = Object(m.parseSizesInput)(i);

          if (1 === o.length) {
            var a = S(o[0].split("x"), 2),
                c = a[0],
                u = a[1];
            return t.width = parseInt(c, 10), t.height = parseInt(u, 10), 1;
          }
        }(e, t, n)) || (Object(m.logError)(r("Banner bids require a width and height")), !1) : (Object(m.logError)(r("Video bid does not have required vastUrl or renderer property")), !1) : (Object(m.logError)(r("Native bid missing some required properties.")), !1) : (Object(m.logError)(r("Bidder ".concat(t.bidderCode, " is missing required params. Check http://prebid.org/dev-docs/bidder-adapter-1.html for list of params."))), !1)) : (Object(m.logWarn)("Some adapter tried to add an undefined bid for ".concat(e, ".")), !1) : (Object(m.logWarn)("No adUnitCode was supplied to addBidResponse."), !1);
        var i;
      }

      Object(b.a)("checkAdUnitSetup").before(w);
    },
    10: function _(e, t, n) {
      t.a = i, t.c = function (e) {
        return !(!e || !e.url);
      }, t.b = function (e, t) {
        e.render(t);
      };
      var f = n(28),
          l = n(0),
          r = n(12),
          p = n.n(r),
          g = "outstream";

      function i(e) {
        var t,
            n,
            r,
            i = this,
            o = e.url,
            a = e.config,
            c = e.id,
            u = e.callback,
            s = e.loaded,
            d = e.adUnitCode;
        this.url = o, this.config = a, this.handlers = {}, this.id = c, this.loaded = s, this.cmd = [], this.push = function (e) {
          "function" == typeof e ? i.loaded ? e.call() : i.cmd.push(e) : l.logError("Commands given to Renderer.push must be wrapped in a function");
        }, this.callback = u || function () {
          i.loaded = !0, i.process();
        }, t = d, n = pbjs.adUnits, (r = p()(n, function (e) {
          return e.code === t;
        })) && r.renderer && r.renderer.url && r.renderer.render ? l.logWarn("External Js not loaded by Renderer since renderer url and callback is already defined on adUnit ".concat(d)) : Object(f.a)(o, g, this.callback);
      }

      i.install = function (e) {
        return new i({
          url: e.url,
          config: e.config,
          id: e.id,
          callback: e.callback,
          loaded: e.loaded,
          adUnitCode: e.adUnitCode
        });
      }, i.prototype.getConfig = function () {
        return this.config;
      }, i.prototype.setRender = function (e) {
        this.render = e;
      }, i.prototype.setEventHandlers = function (e) {
        this.handlers = e;
      }, i.prototype.handleVideoEvent = function (e) {
        var t = e.id,
            n = e.eventName;
        "function" == typeof this.handlers[n] && this.handlers[n](), l.logMessage("Prebid Renderer event for id ".concat(t, " type ").concat(n));
      }, i.prototype.process = function () {
        for (; 0 < this.cmd.length;) {
          try {
            this.cmd.shift().call();
          } catch (e) {
            l.logError("Error processing Renderer command: ", e);
          }
        }
      };
    },
    100: function _(e, t, n) {
      var r = n(40),
          i = n(67),
          o = n(31),
          a = n(49);
      e.exports = n(50)(Array, "Array", function (e, t) {
        this._t = a(e), this._i = 0, this._k = t;
      }, function () {
        var e = this._t,
            t = this._k,
            n = this._i++;
        return !e || n >= e.length ? (this._t = void 0, i(1)) : i(0, "keys" == t ? n : "values" == t ? e[n] : [n, e[n]]);
      }, "values"), o.Arguments = o.Array, r("keys"), r("values"), r("entries");
    },
    101: function _(e, t, n) {
      var r = n(102),
          i = n(75);
      e.exports = n(104)("Set", function (t) {
        return function (e) {
          return t(this, 0 < arguments.length ? e : void 0);
        };
      }, {
        add: function add(e) {
          return r.def(i(this, "Set"), e = 0 === e ? 0 : e, e);
        }
      }, r);
    },
    102: function _(e, t, n) {
      function a(e, t) {
        var n,
            r = g(t);
        if ("F" !== r) return e._i[r];

        for (n = e._f; n; n = n.n) {
          if (n.k == t) return n;
        }
      }

      var c = n(20).f,
          u = n(65),
          s = n(68),
          d = n(27),
          f = n(69),
          l = n(41),
          r = n(50),
          i = n(67),
          o = n(103),
          p = n(22),
          g = n(74).fastKey,
          b = n(75),
          y = p ? "_s" : "size";
      e.exports = {
        getConstructor: function getConstructor(e, o, n, r) {
          var i = e(function (e, t) {
            f(e, i, o, "_i"), e._t = o, e._i = u(null), e._f = void 0, e._l = void 0, e[y] = 0, null != t && l(t, n, e[r], e);
          });
          return s(i.prototype, {
            clear: function clear() {
              for (var e = b(this, o), t = e._i, n = e._f; n; n = n.n) {
                n.r = !0, n.p && (n.p = n.p.n = void 0), delete t[n.i];
              }

              e._f = e._l = void 0, e[y] = 0;
            },
            "delete": function _delete(e) {
              var t,
                  n,
                  r = b(this, o),
                  i = a(r, e);
              return i && (t = i.n, n = i.p, delete r._i[i.i], i.r = !0, n && (n.n = t), t && (t.p = n), r._f == i && (r._f = t), r._l == i && (r._l = n), r[y]--), !!i;
            },
            forEach: function forEach(e, t) {
              b(this, o);

              for (var n, r = d(e, 1 < arguments.length ? t : void 0, 3); n = n ? n.n : this._f;) {
                for (r(n.v, n.k, this); n && n.r;) {
                  n = n.p;
                }
              }
            },
            has: function has(e) {
              return !!a(b(this, o), e);
            }
          }), p && c(i.prototype, "size", {
            get: function get() {
              return b(this, o)[y];
            }
          }), i;
        },
        def: function def(e, t, n) {
          var r,
              i,
              o = a(e, t);
          return o ? o.v = n : (e._l = o = {
            i: i = g(t, !0),
            k: t,
            v: n,
            p: r = e._l,
            n: void 0,
            r: !1
          }, e._f || (e._f = o), r && (r.n = o), e[y]++, "F" !== i && (e._i[i] = o)), e;
        },
        getEntry: a,
        setStrong: function setStrong(e, n, t) {
          r(e, n, function (e, t) {
            this._t = b(e, n), this._k = t, this._l = void 0;
          }, function () {
            for (var e = this, t = e._k, n = e._l; n && n.r;) {
              n = n.p;
            }

            return e._t && (e._l = n = n ? n.n : e._t._f) ? i(0, "keys" == t ? n.k : "values" == t ? n.v : [n.k, n.v]) : (e._t = void 0, i(1));
          }, t ? "entries" : "values", !t, !0), o(n);
        }
      };
    },
    103: function _(e, t, n) {
      var r = n(19),
          i = n(16),
          o = n(20),
          a = n(22),
          c = n(14)("species");

      e.exports = function (e) {
        var t = "function" == typeof i[e] ? i[e] : r[e];
        a && t && !t[c] && o.f(t, c, {
          configurable: !0,
          get: function get() {
            return this;
          }
        });
      };
    },
    104: function _(e, t, n) {
      var f = n(19),
          l = n(15),
          p = n(74),
          g = n(36),
          b = n(21),
          y = n(68),
          v = n(41),
          h = n(69),
          m = n(17),
          S = n(52),
          A = n(20).f,
          E = n(45)(0),
          T = n(22);

      e.exports = function (n, e, t, r, i, o) {
        var a = f[n],
            c = a,
            u = i ? "set" : "add",
            s = c && c.prototype,
            d = {};
        return T && "function" == typeof c && (o || s.forEach && !g(function () {
          new c().entries().next();
        })) ? (c = e(function (e, t) {
          h(e, c, n, "_c"), e._c = new a(), null != t && v(t, i, e[u], e);
        }), E("add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON".split(","), function (r) {
          var i = "add" == r || "set" == r;
          r in s && (!o || "clear" != r) && b(c.prototype, r, function (e, t) {
            if (h(this, c, r), !i && o && !m(e)) return "get" == r && void 0;

            var n = this._c[r](0 === e ? 0 : e, t);

            return i ? this : n;
          });
        }), o || A(c.prototype, "size", {
          get: function get() {
            return this._c.size;
          }
        })) : (c = r.getConstructor(e, n, i, u), y(c.prototype, t), p.NEED = !0), S(c, n), d[n] = c, l(l.G + l.W + l.F, d), o || r.setStrong(c, n, i), c;
      };
    },
    105: function _(e, t, n) {
      var r = n(15);
      r(r.P + r.R, "Set", {
        toJSON: n(106)("Set")
      });
    },
    106: function _(e, t, n) {
      var r = n(73),
          i = n(107);

      e.exports = function (e) {
        return function () {
          if (r(this) != e) throw TypeError(e + "#toJSON isn't generic");
          return i(this);
        };
      };
    },
    107: function _(e, t, n) {
      var r = n(41);

      e.exports = function (e, t) {
        var n = [];
        return r(e, !1, n.push, n, t), n;
      };
    },
    108: function _(e, t, n) {
      n(109)("Set");
    },
    109: function _(e, t, n) {
      var r = n(15);

      e.exports = function (e) {
        r(r.S, e, {
          of: function of() {
            for (var e = arguments.length, t = new Array(e); e--;) {
              t[e] = arguments[e];
            }

            return new this(t);
          }
        });
      };
    },
    11: function _(e, t, n) {
      n(88), e.exports = n(16).Array.includes;
    },
    110: function _(e, t, n) {
      n(111)("Set");
    },
    111: function _(e, t, n) {
      var r = n(15),
          u = n(57),
          s = n(27),
          d = n(41);

      e.exports = function (e) {
        r(r.S, e, {
          from: function from(e, t, n) {
            var r,
                i,
                o,
                a,
                c = t;
            return u(this), (r = void 0 !== c) && u(c), null == e ? new this() : (i = [], r ? (o = 0, a = s(c, n, 2), d(e, !1, function (e) {
              i.push(a(e, o++));
            })) : d(e, !1, i.push, i), new this(i));
          }
        });
      };
    },
    112: function _(e, t, n) {
      var g = n(27),
          r = n(15),
          b = n(46),
          y = n(70),
          v = n(71),
          h = n(39),
          m = n(113),
          S = n(72);
      r(r.S + r.F * !n(114)(function (e) {}), "Array", {
        from: function from(e, t, n) {
          var r,
              i,
              o,
              a,
              c = b(e),
              u = "function" == typeof this ? this : Array,
              s = arguments.length,
              d = 1 < s ? t : void 0,
              f = void 0 !== d,
              l = 0,
              p = S(c);
          if (f && (d = g(d, 2 < s ? n : void 0, 2)), null == p || u == Array && v(p)) for (i = new u(r = h(c.length)); l < r; l++) {
            m(i, l, f ? d(c[l], l) : c[l]);
          } else for (a = p.call(c), i = new u(); !(o = a.next()).done; l++) {
            m(i, l, f ? y(a, d, [o.value, l], !0) : o.value);
          }
          return i.length = l, i;
        }
      });
    },
    113: function _(e, t, n) {
      var r = n(20),
          i = n(44);

      e.exports = function (e, t, n) {
        t in e ? r.f(e, t, i(0, n)) : e[t] = n;
      };
    },
    114: function _(e, t, n) {
      var o = n(14)("iterator"),
          a = !1;

      try {
        var r = [7][o]();
        r["return"] = function () {
          a = !0;
        }, Array.from(r, function () {
          throw 2;
        });
      } catch (e) {}

      e.exports = function (e, t) {
        if (!t && !a) return !1;
        var n = !1;

        try {
          var r = [7],
              i = r[o]();
          i.next = function () {
            return {
              done: n = !0
            };
          }, r[o] = function () {
            return i;
          }, e(r);
        } catch (e) {}

        return n;
      };
    },
    115: function _(e, t) {
      e.exports = function e(t) {
        var n = Array.isArray(t) ? [] : {};

        for (var r in t) {
          var i = t[r];
          n[r] = i && "object" == _typeof4(i) ? e(i) : i;
        }

        return n;
      };
    },
    116: function _(e, t, n) {
      t.a = function (e, t, n, r, i) {
        for (t = t.split ? t.split(".") : t, r = 0; r < t.length; r++) {
          e = e ? e[t[r]] : i;
        }

        return e === i ? n : e;
      };
    },
    117: function _(e, t, n) {
      t.a = function (e, t, n) {
        t.split && (t = t.split("."));

        for (var r, i = 0, o = t.length, a = e; i < o; ++i) {
          r = a[t[i]], a = a[t[i]] = i === o - 1 ? n : null != r ? r : !~t[i + 1].indexOf(".") && -1 < +t[i + 1] ? [] : {};
        }
      };
    },
    118: function _(e, t) {
      h.SYNC = 1, h.ASYNC = 2, h.QUEUE = 4;
      var g = "fun-hooks";
      var n = Object.freeze({
        useProxy: !0,
        ready: 0
      }),
          b = new WeakMap(),
          r = "2,1,0" === [1].reduce(function (e, t, n) {
        return [e, t, n];
      }, 2).toString() ? Array.prototype.reduce : function (e, t) {
        var n,
            r = Object(this),
            i = r.length >>> 0,
            o = 0;
        if (t) n = t;else {
          for (; o < i && !(o in r);) {
            o++;
          }

          n = r[o++];
        }

        for (; o < i;) {
          o in r && (n = e(n, r[o], o, r)), o++;
        }

        return n;
      };

      function y(e, t) {
        return Array.prototype.slice.call(e, t);
      }

      var v = Object.assign || function (e) {
        return r.call(y(arguments, 1), function (t, n) {
          return n && Object.keys(n).forEach(function (e) {
            t[e] = n[e];
          }), t;
        }, e);
      };

      function h(u) {
        var s,
            e = {},
            d = [];

        function t(e, t) {
          return "function" == typeof e ? f.call(null, "sync", e, t) : "string" == typeof e && "function" == typeof t ? f.apply(null, arguments) : "object" == _typeof4(e) ? function (o, e, a) {
            var t = !0;
            void 0 === e && (e = Object.getOwnPropertyNames(o), t = !1);
            var c = {},
                n = ["constructor"];

            for (; (e = e.filter(function (e) {
              return !("function" != typeof o[e] || -1 !== n.indexOf(e) || e.match(/^_/));
            })).forEach(function (e) {
              var t,
                  n = e.split(":"),
                  r = n[0],
                  i = n[1] || "sync";
              c[r] || (t = o[r], c[r] = o[r] = f(i, t, a ? [a, r] : void 0));
            }), o = Object.getPrototypeOf(o), t && o;) {
              ;
            }

            return c;
          }.apply(null, arguments) : void 0;
        }

        function l(o) {
          var a = Array.isArray(o) ? o : o.split(".");
          return r.call(a, function (t, n, e) {
            var r = t[n],
                i = !1;
            return r || (e === a.length - 1 ? (s || d.push(function () {
              i || console.warn(g + ": referenced '" + o + "' but it was never created");
            }), t[n] = p(function (e) {
              t[n] = e, i = !0;
            })) : t[n] = {});
          }, e);
        }

        function p(r) {
          var o = [],
              a = [],
              c = function c() {},
              e = {
            before: function before(e, t) {
              return n.call(this, o, "before", e, t);
            },
            after: function after(e, t) {
              return n.call(this, a, "after", e, t);
            },
            getHooks: function getHooks(n) {
              var e = o.concat(a);
              return "object" == _typeof4(n) && (e = e.filter(function (t) {
                return Object.keys(n).every(function (e) {
                  return t[e] === n[e];
                });
              })), v(e, {
                remove: function remove() {
                  return e.forEach(function (e) {
                    e.remove();
                  }), this;
                }
              });
            },
            removeAll: function removeAll() {
              return this.getHooks().remove();
            }
          },
              t = {
            install: function install(e, t, n) {
              this.type = e, (c = n)(o, a), r && r(t);
            }
          };

          return b.set(e.after, t), e;

          function n(t, e, n, r) {
            var i = {
              hook: n,
              type: e,
              priority: r || 10,
              remove: function remove() {
                var e = t.indexOf(i);
                -1 !== e && (t.splice(e, 1), c(o, a));
              }
            };
            return t.push(i), t.sort(function (e, t) {
              return t.priority - e.priority;
            }), c(o, a), this;
          }
        }

        function f(f, e, t) {
          var n = e.after && b.get(e.after);

          if (n) {
            if (n.type !== f) throw g + ": recreated hookable with different type";
            return e;
          }

          var r,
              i,
              o = t ? l(t) : p(),
              a = {
            get: function get(e, t) {
              return o[t] || Reflect.get.apply(Reflect, arguments);
            }
          };
          return s || d.push(c), u.useProxy && "function" == typeof Proxy && Proxy.revocable ? i = new Proxy(e, a) : v(i = function i() {
            return a.apply ? a.apply(e, this, y(arguments)) : e.apply(this, arguments);
          }, o), b.get(i.after).install(f, i, function (e, t) {
            var s,
                d = [];
            r = e.length || t.length ? (e.forEach(n), s = d.push(void 0) - 1, t.forEach(n), function (n, r, e) {
              var i,
                  o = 0,
                  a = "async" === f && "function" == typeof e[e.length - 1] && e.pop();

              function c(e) {
                "sync" === f ? i = e : a && a.apply(null, arguments);
              }

              function u(e) {
                if (d[o]) {
                  var t = y(arguments);
                  return u.bail = c, t.unshift(u), d[o++].apply(r, t);
                }

                "sync" === f ? i = e : a && a.apply(null, arguments);
              }

              return d[s] = function () {
                var e = y(arguments, 1);
                "async" === f && a && (delete u.bail, e.push(u));
                var t = n.apply(r, e);
                "sync" === f && u(t);
              }, u.apply(null, e), i;
            }) : void 0;

            function n(e) {
              d.push(e.hook);
            }

            c();
          }), i;

          function c() {
            !s && ("sync" !== f || u.ready & h.SYNC) && ("async" !== f || u.ready & h.ASYNC) ? "sync" !== f && u.ready & h.QUEUE ? a.apply = function () {
              var e = arguments;
              d.push(function () {
                i.apply(e[1], e[2]);
              });
            } : a.apply = function () {
              throw g + ": hooked function not ready";
            } : a.apply = r;
          }
        }

        return (u = v({}, n, u)).ready ? t.ready = function () {
          s = !0, function (e) {
            for (var t; t = e.shift();) {
              t();
            }
          }(d);
        } : s = !0, t.get = l, t;
      }

      e.exports = h;
    },
    12: function _(e, t, n) {
      n(82), e.exports = n(16).Array.find;
    },
    13: function _(e, t, n) {
      n.d(t, "b", function () {
        return a;
      }), n.d(t, "a", function () {
        return c;
      }), t.d = function (e, t) {
        var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 15;
        0 === e.getHooks({
          hook: t
        }).length && e.before(t, n);
      }, t.c = function (e, n) {
        a("async", function (e) {
          e.forEach(function (e) {
            return n.apply(void 0, function (e) {
              if (Array.isArray(e)) return o(e);
            }(t = e) || function (e) {
              if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
            }(t) || function (e, t) {
              if (e) {
                if ("string" == typeof e) return o(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? o(e, t) : void 0;
              }
            }(t) || function () {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }());
            var t;
          });
        }, e)([]);
      }, t.e = function (e) {
        for (var t = arguments.length, n = new Array(1 < t ? t - 1 : 0), r = 1; r < t; r++) {
          n[r - 1] = arguments[r];
        }

        c(e).before(function (e, t) {
          t.push(n), e(t);
        });
      };
      var r = n(118),
          i = n.n(r);

      function o(e, t) {
        (null == t || t > e.length) && (t = e.length);

        for (var n = 0, r = new Array(t); n < t; n++) {
          r[n] = e[n];
        }

        return r;
      }

      var a = i()({
        ready: i.a.SYNC | i.a.ASYNC | i.a.QUEUE
      }),
          c = a.get;
    },
    14: function _(e, t, n) {
      var r = n(60)("wks"),
          i = n(48),
          o = n(19).Symbol,
          a = "function" == typeof o;
      (e.exports = function (e) {
        return r[e] || (r[e] = a && o[e] || (a ? o : i)("Symbol." + e));
      }).store = r;
    },
    15: function _(e, t, n) {
      var b = n(19),
          y = n(16),
          v = n(27),
          h = n(21),
          m = n(30),
          S = "prototype",
          A = function A(e, t, n) {
        var r,
            i,
            o,
            a = e & A.F,
            c = e & A.G,
            u = e & A.S,
            s = e & A.P,
            d = e & A.B,
            f = e & A.W,
            l = c ? y : y[t] || (y[t] = {}),
            p = l[S],
            g = c ? b : u ? b[t] : (b[t] || {})[S];

        for (r in c && (n = t), n) {
          (i = !a && g && void 0 !== g[r]) && m(l, r) || (o = i ? g[r] : n[r], l[r] = c && "function" != typeof g[r] ? n[r] : d && i ? v(o, b) : f && g[r] == o ? function (r) {
            function e(e, t, n) {
              if (this instanceof r) {
                switch (arguments.length) {
                  case 0:
                    return new r();

                  case 1:
                    return new r(e);

                  case 2:
                    return new r(e, t);
                }

                return new r(e, t, n);
              }

              return r.apply(this, arguments);
            }

            return e[S] = r[S], e;
          }(o) : s && "function" == typeof o ? v(Function.call, o) : o, s && ((l.virtual || (l.virtual = {}))[r] = o, e & A.R && p && !p[r] && h(p, r, o)));
        }
      };

      A.F = 1, A.G = 2, A.S = 4, A.P = 8, A.B = 16, A.W = 32, A.U = 64, A.R = 128, e.exports = A;
    },
    16: function _(e, t) {
      var n = e.exports = {
        version: "2.6.11"
      };
      "number" == typeof __e && (__e = n);
    },
    17: function _(e, t) {
      e.exports = function (e) {
        return "object" == _typeof4(e) ? null !== e : "function" == typeof e;
      };
    },
    170: function _(e, t, n) {
      var r = n(15),
          i = n(45)(6),
          o = "findIndex",
          a = !0;
      o in [] && Array(1)[o](function () {
        a = !1;
      }), r(r.P + r.F * a, "Array", {
        findIndex: function findIndex(e, t) {
          return i(this, e, 1 < arguments.length ? t : void 0);
        }
      }), n(40)(o);
    },
    173: function _(e, t, n) {
      t.a = function () {
        window.addEventListener("message", c, !1);
      };

      var r = n(8),
          b = n.n(r),
          y = n(23),
          i = n(5),
          v = (n.n(i), n(0)),
          h = n(25),
          o = n(12),
          m = n.n(o),
          S = n(10),
          a = n(11),
          A = n.n(a),
          E = i.EVENTS.BID_WON;

      function c(e) {
        var t,
            n,
            r,
            i,
            o,
            a,
            c,
            u,
            s,
            d,
            f = e.message ? "message" : "data",
            l = {};

        try {
          l = JSON.parse(e[f]);
        } catch (e) {
          return;
        }

        if (l && l.adId) {
          var p = m()(h.a.getBidsReceived(), function (e) {
            return e.adId === l.adId;
          });

          if (p && "Prebid Request" === l.message && (t = p, n = l.adServerDomain, r = e.source, i = t.adId, o = t.ad, a = t.adUrl, c = t.width, u = t.height, s = t.renderer, d = t.cpm, Object(S.c)(s) ? Object(S.b)(s, t) : i && (function (e) {
            var o = e.adId,
                a = e.adUnitCode,
                r = e.width,
                i = e.height;

            function c(e) {
              var t,
                  n,
                  r = (t = o, n = a, window.googletag ? function (n) {
                return m()(window.googletag.pubads().getSlots(), function (t) {
                  return m()(t.getTargetingKeys(), function (e) {
                    return A()(t.getTargeting(e), n);
                  });
                }).getSlotElementId();
              }(t) : window.apntag ? function (e) {
                var t = window.apntag.getTag(e);
                return t && t.targetId;
              }(n) : n),
                  i = document.getElementById(r);
              return i && i.querySelector(e);
            }

            ["div", "iframe"].forEach(function (e) {
              var t,
                  n = c(e + ':not([style*="display: none"])');
              n ? ((t = n.style).width = r + "px", t.height = i + "px") : Object(v.logWarn)("Unable to locate matching page element for adUnitCode ".concat(a, ".  Can't resize it to ad's dimensions.  Please review setup."));
            });
          }(t), r.postMessage(JSON.stringify({
            message: "Prebid Response",
            ad: Object(v.replaceAuctionPrice)(o, d),
            adUrl: Object(v.replaceAuctionPrice)(a, d),
            adId: i,
            width: c,
            height: u
          }), n)), h.a.addWinningBid(p), b.a.emit(E, p)), p && "Prebid Native" === l.message) {
            if ("assetRequest" === l.action) {
              var g = Object(y.c)(l, p);
              return void e.source.postMessage(JSON.stringify(g), e.origin);
            }

            if ("click" === Object(y.b)(l, p)) return;
            h.a.addWinningBid(p), b.a.emit(E, p);
          }
        }
      }
    },
    174: function _(e, t, n) {
      t.a = function (e) {
        var t;

        try {
          e = e || window.sessionStorage, t = JSON.parse(e.getItem(u));
        } catch (e) {}

        t && p(t, !0);
      };

      var r,
          i,
          o = n(3),
          a = n(0),
          c = n(42),
          u = "pbjs:debugging";

      function s(e) {
        Object(a.logMessage)("DEBUG: " + e);
      }

      function d(e) {
        Object(a.logWarn)("DEBUG: " + e);
      }

      function f(e) {
        r = function (e, t, n) {
          if (b(this.bidders, n.bidderCode)) return void d("bidder '".concat(n.bidderCode, "' excluded from auction by bidder overrides"));
          Array.isArray(this.bids) && this.bids.forEach(function (e) {
            g(e, n.bidderCode, t) || y(e, n, "bidder");
          });
          e(t, n);
        }.bind(e), c.c.before(r, 5), i = function (e, t) {
          var r = this,
              n = t.filter(function (e) {
            return !b(r.bidders, e.bidderCode) || (d("bidRequest '".concat(e.bidderCode, "' excluded from auction by bidder overrides")), !1);
          });
          Array.isArray(r.bidRequests) && n.forEach(function (n) {
            r.bidRequests.forEach(function (t) {
              n.bids.forEach(function (e) {
                g(t, n.bidderCode, e.adUnitCode) || y(t, e, "bidRequest");
              });
            });
          });
          e(n);
        }.bind(e), c.e.before(i, 5);
      }

      function l() {
        c.c.getHooks({
          hook: r
        }).remove(), c.e.getHooks({
          hook: i
        }).remove();
      }

      function p(e, t) {
        var n = 1 < arguments.length && void 0 !== t && t;
        o.b.setConfig({
          debug: !0
        }), l(), f(e), s("bidder overrides enabled".concat(n ? " from session" : ""));
      }

      function g(e, t, n) {
        return e.bidder && e.bidder !== t || !(!e.adUnitCode || e.adUnitCode === n);
      }

      function b(e, t) {
        return Array.isArray(e) && -1 === e.indexOf(t);
      }

      function y(n, e, r) {
        return Object.keys(n).filter(function (e) {
          return -1 === ["adUnitCode", "bidder"].indexOf(e);
        }).reduce(function (e, t) {
          return s("bidder overrides changed '".concat(e.adUnitCode, "/").concat(e.bidderCode, "' ").concat(r, ".").concat(t, " from '").concat(e[t], ".js' to '").concat(n[t], "'")), e[t] = n[t], e;
        }, e);
      }

      function v(e) {
        if (e.enabled) {
          try {
            window.sessionStorage.setItem(u, JSON.stringify(e));
          } catch (e) {}

          p(e);
        } else {
          l(), s("bidder overrides disabled");

          try {
            window.sessionStorage.removeItem(u);
          } catch (e) {}
        }
      }

      o.b.getConfig("debugging", function (e) {
        return v(e.debugging);
      });
    },
    18: function _(e, t, n) {
      t.a = function () {
        return window.pbjs;
      }, window.pbjs = window.pbjs || {}, window.pbjs.cmd = window.pbjs.cmd || [], window.pbjs.que = window.pbjs.que || [], window._pbjsGlobals = window._pbjsGlobals || [], window._pbjsGlobals.push("pbjs");
    },
    19: function _(e, t) {
      var n = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
      "number" == typeof __g && (__g = n);
    },
    2: function _(e, t, n) {
      n.d(t, "c", function () {
        return r;
      }), n.d(t, "d", function () {
        return i;
      }), n.d(t, "b", function () {
        return o;
      }), n.d(t, "a", function () {
        return a;
      });
      var r = "native",
          i = "video",
          o = "banner",
          a = "adpod";
    },
    20: function _(e, t, n) {
      var r = n(29),
          i = n(83),
          o = n(84),
          a = Object.defineProperty;
      t.f = n(22) ? Object.defineProperty : function (e, t, n) {
        if (r(e), t = o(t, !0), r(n), i) try {
          return a(e, t, n);
        } catch (e) {}
        if ("get" in n || "set" in n) throw TypeError("Accessors not supported!");
        return "value" in n && (e[t] = n.value), e;
      };
    },
    21: function _(e, t, n) {
      var r = n(20),
          i = n(44);
      e.exports = n(22) ? function (e, t, n) {
        return r.f(e, t, i(1, n));
      } : function (e, t, n) {
        return e[t] = n, e;
      };
    },
    22: function _(e, t, n) {
      e.exports = !n(36)(function () {
        return 7 != Object.defineProperty({}, "a", {
          get: function get() {
            return 7;
          }
        }).a;
      });
    },
    23: function _(e, t, n) {
      n.d(t, "e", function () {
        return o;
      }), n.d(t, "a", function () {
        return s;
      }), t.g = function (e) {
        if (e && e.type && function (e) {
          return e && c()(Object.keys(d), e) || (Object(a.logError)("".concat(e, " nativeParam is not supported")), !1);
        }(e.type)) return d[e.type];
        return e;
      }, t.f = function (t, e) {
        var n = Object(a.getBidRequest)(t.requestId, e);
        if (!n) return !1;
        if (!Object(a.deepAccess)(t, "native.clickUrl")) return !1;
        if (Object(a.deepAccess)(t, "native.image") && (!Object(a.deepAccess)(t, "native.image.height") || !Object(a.deepAccess)(t, "native.image.width"))) return !1;
        if (Object(a.deepAccess)(t, "native.icon") && (!Object(a.deepAccess)(t, "native.icon.height") || !Object(a.deepAccess)(t, "native.icon.width"))) return !1;
        var r = n.nativeParams;
        if (!r) return !0;
        var i = Object.keys(r).filter(function (e) {
          return r[e].required;
        }),
            o = Object.keys(t["native"]).filter(function (e) {
          return t["native"][e];
        });
        return i.every(function (e) {
          return c()(o, e);
        });
      }, t.b = function (e, t) {
        var n;
        "click" === e.action ? n = t["native"] && t["native"].clickTrackers : (n = t["native"] && t["native"].impressionTrackers, t["native"] && t["native"].javascriptTrackers && Object(a.insertHtmlIntoIframe)(t["native"].javascriptTrackers));
        return (n || []).forEach(a.triggerPixel), e.action;
      }, t.d = function (r, i) {
        var o = {};
        return Object.keys(r["native"]).forEach(function (e) {
          var t = u.NATIVE_KEYS[e],
              n = f(r["native"][e]);
          Object(a.deepAccess)(i, "mediaTypes.native.".concat(e, ".sendId")) && (n = "".concat(t, ":").concat(r.adId)), t && n && (o[t] = n);
        }), o;
      }, t.c = function (e, r) {
        var i = {
          message: "assetResponse",
          adId: e.adId,
          assets: []
        };
        return e.assets.forEach(function (e) {
          var t = Object(a.getKeyByValue)(u.NATIVE_KEYS, e),
              n = f(r["native"][t]);
          i.assets.push({
            key: t,
            value: n
          });
        }), i;
      };
      var a = n(0),
          r = n(11),
          c = n.n(r);

      function i(e) {
        return (i = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
          return _typeof4(e);
        } : function (e) {
          return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof4(e);
        })(e);
      }

      var u = n(5),
          o = [],
          s = Object.keys(u.NATIVE_KEYS).map(function (e) {
        return u.NATIVE_KEYS[e];
      }),
          d = {
        image: {
          image: {
            required: !0
          },
          title: {
            required: !0
          },
          sponsoredBy: {
            required: !0
          },
          clickUrl: {
            required: !0
          },
          body: {
            required: !1
          },
          icon: {
            required: !1
          }
        }
      };

      function f(e) {
        return "object" === i(e) && e.url ? e.url : e;
      }
    },
    24: function _(e, t, n) {
      t.a = function (e, t) {
        return new r(e, t);
      };

      var i = n(0);

      function r(e, t) {
        var n = t && t.src || "client",
            r = e || 0;
        this.bidderCode = t && t.bidder || "", this.width = 0, this.height = 0, this.statusMessage = function () {
          switch (r) {
            case 0:
              return "Pending";

            case 1:
              return "Bid available";

            case 2:
              return "Bid returned empty or error response";

            case 3:
              return "Bid timed out";
          }
        }(), this.adId = i.getUniqueIdentifierStr(), this.requestId = t && t.bidId, this.mediaType = "banner", this.source = n, this.getStatusCode = function () {
          return r;
        }, this.getSize = function () {
          return this.width + "x" + this.height;
        };
      }
    },
    25: function _(e, t, n) {
      n.d(t, "a", function () {
        return u;
      });
      var r = n(0),
          s = n(42),
          i = n(12),
          o = n.n(i),
          a = n(5);
      var d,
          c,
          u = (d = [], (c = {}).addWinningBid = function (t) {
        var e = o()(d, function (e) {
          return e.getAuctionId() === t.auctionId;
        });
        e ? (t.status = a.BID_STATUS.RENDERED, e.addWinningBid(t)) : Object(r.logWarn)("Auction not found when adding winning bid");
      }, c.getAllWinningBids = function () {
        return d.map(function (e) {
          return e.getWinningBids();
        }).reduce(r.flatten, []);
      }, c.getBidsRequested = function () {
        return d.map(function (e) {
          return e.getBidRequests();
        }).reduce(r.flatten, []);
      }, c.getNoBids = function () {
        return d.map(function (e) {
          return e.getNoBids();
        }).reduce(r.flatten, []);
      }, c.getBidsReceived = function () {
        return d.map(function (e) {
          if (e.getAuctionStatus() === s.a) return e.getBidsReceived();
        }).reduce(r.flatten, []).filter(function (e) {
          return e;
        });
      }, c.getAdUnits = function () {
        return d.map(function (e) {
          return e.getAdUnits();
        }).reduce(r.flatten, []);
      }, c.getAdUnitCodes = function () {
        return d.map(function (e) {
          return e.getAdUnitCodes();
        }).reduce(r.flatten, []).filter(r.uniques);
      }, c.createAuction = function (e) {
        var t,
            n = e.adUnits,
            r = e.adUnitCodes,
            i = e.callback,
            o = e.cbTimeout,
            a = e.labels,
            c = e.auctionId,
            u = Object(s.k)({
          adUnits: n,
          adUnitCodes: r,
          callback: i,
          cbTimeout: o,
          labels: a,
          auctionId: c
        });
        return t = u, d.push(t), u;
      }, c.findBidByAdId = function (t) {
        return o()(d.map(function (e) {
          return e.getBidsReceived();
        }).reduce(r.flatten, []), function (e) {
          return e.adId === t;
        });
      }, c.getStandardBidderAdServerTargeting = function () {
        return Object(s.j)()[a.JSON_MAPPING.ADSERVER_TARGETING];
      }, c.setStatusForBids = function (e, t) {
        var n,
            r = c.findBidByAdId(e);
        r && (r.status = t), !r || t !== a.BID_STATUS.BID_TARGETING_SET || (n = o()(d, function (e) {
          return e.getAuctionId() === r.auctionId;
        })) && n.setBidTargeting(r);
      }, c.getLastAuctionId = function () {
        return d.length && d[d.length - 1].getAuctionId();
      }, c);
    },
    269: function _(e, t, n) {
      n(270), e.exports = n(16).String.includes;
    },
    27: function _(e, t, n) {
      var o = n(57);

      e.exports = function (r, i, e) {
        if (o(r), void 0 === i) return r;

        switch (e) {
          case 1:
            return function (e) {
              return r.call(i, e);
            };

          case 2:
            return function (e, t) {
              return r.call(i, e, t);
            };

          case 3:
            return function (e, t, n) {
              return r.call(i, e, t, n);
            };
        }

        return function () {
          return r.apply(i, arguments);
        };
      };
    },
    270: function _(e, t, n) {
      var r = n(15),
          i = n(271),
          o = "includes";
      r(r.P + r.F * n(273)(o), "String", {
        includes: function includes(e, t) {
          return !!~i(this, e, o).indexOf(e, 1 < arguments.length ? t : void 0);
        }
      });
    },
    271: function _(e, t, n) {
      var r = n(272),
          i = n(38);

      e.exports = function (e, t, n) {
        if (r(t)) throw TypeError("String#" + n + " doesn't accept regex!");
        return String(i(e));
      };
    },
    272: function _(e, t, n) {
      var r = n(17),
          i = n(37),
          o = n(14)("match");

      e.exports = function (e) {
        var t;
        return r(e) && (void 0 !== (t = e[o]) ? !!t : "RegExp" == i(e));
      };
    },
    273: function _(e, t, n) {
      var r = n(14)("match");

      e.exports = function (t) {
        var n = /./;

        try {
          "/./"[t](n);
        } catch (e) {
          try {
            return n[r] = !1, !"/./"[t](n);
          } catch (e) {}
        }

        return !0;
      };
    },
    28: function _(e, t, n) {
      t.a = function (r, e, t) {
        if (!e || !r) return void o.logError("cannot load external script without url and moduleCode");
        if (!i()(c, e)) return void o.logError("".concat(e, " not whitelisted for loading external JavaScript"));
        if (a[r]) return t && "function" == typeof t && (a[r].loaded ? t() : a[r].callbacks.push(t)), a[r].tag;
        a[r] = {
          loaded: !1,
          tag: null,
          callbacks: []
        }, t && "function" == typeof t && a[r].callbacks.push(t);
        return o.logWarn("module ".concat(e, " is loading external JavaScript")), function (e, t) {
          var n = document.createElement("script");
          n.type = "text/javascript", n.async = !0, (a[r].tag = n).readyState ? n.onreadystatechange = function () {
            "loaded" !== n.readyState && "complete" !== n.readyState || (n.onreadystatechange = null, t());
          } : n.onload = function () {
            t();
          };
          return n.src = e, o.insertElement(n), n;
        }(r, function () {
          a[r].loaded = !0;

          try {
            for (var e = 0; e < a[r].callbacks.length; e++) {
              a[r].callbacks[e]();
            }
          } catch (e) {
            o.logError("Error executing callback", "adloader.js:loadExternalScript", e);
          }
        });
      };

      var r = n(11),
          i = n.n(r),
          o = n(0),
          a = {},
          c = ["criteo", "outstream", "adagio", "browsi"];
    },
    29: function _(e, t, n) {
      var r = n(17);

      e.exports = function (e) {
        if (!r(e)) throw TypeError(e + " is not an object!");
        return e;
      };
    },
    3: function _(e, t, n) {
      n.d(t, "a", function () {
        return v;
      }), n.d(t, "b", function () {
        return C;
      });
      var r = n(43),
          i = n(12),
          a = n.n(i),
          o = n(11),
          c = n.n(o),
          u = n(63),
          s = n.n(u),
          d = n(9);

      function f() {
        return (f = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];

            for (var r in n) {
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      var l = n(76),
          p = n(0),
          g = n(5),
          b = "TRUE" === (Object(d.d)(window.location.search)[g.DEBUG_MODE] || "").toUpperCase(),
          y = window.location.origin,
          v = "random",
          h = {};
      h[v] = !0, h.fixed = !0;
      var m = v,
          S = {
        LOW: "low",
        MEDIUM: "medium",
        HIGH: "high",
        AUTO: "auto",
        DENSE: "dense",
        CUSTOM: "custom"
      };
      var A,
          E,
          T,
          O,
          I,
          C = (O = [], I = null, w(), {
        getConfig: function getConfig() {
          if (arguments.length <= 1 && "function" != typeof (arguments.length <= 0 ? void 0 : arguments[0])) {
            var e = arguments.length <= 0 ? void 0 : arguments[0];
            return e ? p.deepAccess(j(), e) : j();
          }

          return function (e, t) {
            var n = t;

            if ("string" != typeof e && (n = e, e = "*"), "function" == typeof n) {
              var r = {
                topic: e,
                callback: n
              };
              return O.push(r), function () {
                O.splice(O.indexOf(r), 1);
              };
            }

            p.logError("listener must be a function");
          }.apply(void 0, arguments);
        },
        setConfig: function setConfig(n) {
          var e, r;
          p.isPlainObject(n) ? (e = Object.keys(n), r = {}, e.forEach(function (e) {
            var t = n[e];
            p.isPlainObject(A[e]) && p.isPlainObject(t) && (t = f({}, A[e], t)), r[e] = E[e] = t;
          }), _(r)) : p.logError("setConfig options must be an object");
        },
        setDefaults: function setDefaults(e) {
          p.isPlainObject(A) ? (f(A, e), f(E, e)) : p.logError("defaults must be an object");
        },
        resetConfig: w,
        runWithBidder: B,
        callbackWithBidder: function callbackWithBidder(o) {
          return function (i) {
            return function () {
              if ("function" == typeof i) {
                for (var e, t = arguments.length, n = new Array(t), r = 0; r < t; r++) {
                  n[r] = arguments[r];
                }

                return B(o, (e = p.bind).call.apply(e, [i, this].concat(n)));
              }

              p.logWarn("config.callbackWithBidder callback is not a function");
            };
          };
        },
        setBidderConfig: function setBidderConfig(r) {
          try {
            !function (e) {
              if (!p.isPlainObject(e)) throw "setBidderConfig bidder options must be an object";
              if (!Array.isArray(e.bidders) || !e.bidders.length) throw "setBidderConfig bidder options must contain a bidders list with at least 1 bidder";
              if (!p.isPlainObject(e.config)) throw "setBidderConfig bidder options must contain a config object";
            }(r), r.bidders.forEach(function (n) {
              T[n] || (T[n] = {}), Object.keys(r.config).forEach(function (e) {
                var t = r.config[e];
                p.isPlainObject(t) ? T[n][e] = f({}, T[n][e] || {}, t) : T[n][e] = t;
              });
            });
          } catch (e) {
            p.logError(e);
          }
        },
        getBidderConfig: function getBidderConfig() {
          return T;
        }
      });

      function w() {
        A = {};
        var n = {
          _debug: b,

          get debug() {
            return this._debug;
          },

          set debug(e) {
            this._debug = e;
          },

          _bidderTimeout: 3e3,

          get bidderTimeout() {
            return this._bidderTimeout;
          },

          set bidderTimeout(e) {
            this._bidderTimeout = e;
          },

          _publisherDomain: y,

          get publisherDomain() {
            return this._publisherDomain;
          },

          set publisherDomain(e) {
            this._publisherDomain = e;
          },

          _priceGranularity: S.MEDIUM,

          set priceGranularity(e) {
            o(e) && ("string" == typeof e ? this._priceGranularity = i(e) ? e : S.MEDIUM : p.isPlainObject(e) && (this._customPriceBucket = e, this._priceGranularity = S.CUSTOM, p.logMessage("Using custom price granularity")));
          },

          get priceGranularity() {
            return this._priceGranularity;
          },

          _customPriceBucket: {},

          get customPriceBucket() {
            return this._customPriceBucket;
          },

          _mediaTypePriceGranularity: {},

          get mediaTypePriceGranularity() {
            return this._mediaTypePriceGranularity;
          },

          set mediaTypePriceGranularity(n) {
            var r = this;
            this._mediaTypePriceGranularity = Object.keys(n).reduce(function (e, t) {
              return o(n[t]) ? "string" == typeof n ? e[t] = i(n[t]) ? n[t] : r._priceGranularity : p.isPlainObject(n) && (e[t] = n[t], p.logMessage("Using custom price granularity for ".concat(t))) : p.logWarn("Invalid price granularity for media type: ".concat(t)), e;
            }, {});
          },

          _sendAllBids: !0,

          get enableSendAllBids() {
            return this._sendAllBids;
          },

          set enableSendAllBids(e) {
            this._sendAllBids = e;
          },

          _useBidCache: !1,

          get useBidCache() {
            return this._useBidCache;
          },

          set useBidCache(e) {
            this._useBidCache = e;
          },

          _deviceAccess: !0,

          get deviceAccess() {
            return this._deviceAccess;
          },

          set deviceAccess(e) {
            this._deviceAccess = e;
          },

          _bidderSequence: m,

          get bidderSequence() {
            return this._bidderSequence;
          },

          set bidderSequence(e) {
            h[e] ? this._bidderSequence = e : p.logWarn("Invalid order: ".concat(e, ". Bidder Sequence was not set."));
          },

          _timeoutBuffer: 400,

          get timeoutBuffer() {
            return this._timeoutBuffer;
          },

          set timeoutBuffer(e) {
            this._timeoutBuffer = e;
          },

          _disableAjaxTimeout: !1,

          get disableAjaxTimeout() {
            return this._disableAjaxTimeout;
          },

          set disableAjaxTimeout(e) {
            this._disableAjaxTimeout = e;
          }

        };

        function i(t) {
          return a()(Object.keys(S), function (e) {
            return t === S[e];
          });
        }

        function o(e) {
          if (e) {
            if ("string" == typeof e) i(e) || p.logWarn("Prebid Warning: setPriceGranularity was called with invalid setting, using `medium` as default.");else if (p.isPlainObject(e) && !Object(r.b)(e)) return void p.logError("Invalid custom price value passed to `setPriceGranularity()`");
            return 1;
          }

          p.logError("Prebid Error: no value passed to `setPriceGranularity()`");
        }

        E && _(Object.keys(E).reduce(function (e, t) {
          return E[t] !== n[t] && (e[t] = n[t] || {}), e;
        }, {})), E = n, T = {};
      }

      function j() {
        if (I && T && p.isPlainObject(T[I])) {
          var n = T[I],
              e = new s.a(Object.keys(E).concat(Object.keys(n)));
          return l(e).reduce(function (e, t) {
            return void 0 === n[t] ? e[t] = E[t] : void 0 !== E[t] && p.isPlainObject(n[t]) ? e[t] = f({}, E[t], n[t]) : e[t] = n[t], e;
          }, {});
        }

        return f({}, E);
      }

      function _(i) {
        var t = Object.keys(i);
        O.filter(function (e) {
          return c()(t, e.topic);
        }).forEach(function (e) {
          var t, n, r;
          e.callback((t = {}, n = e.topic, r = i[e.topic], n in t ? Object.defineProperty(t, n, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
          }) : t[n] = r, t));
        }), O.filter(function (e) {
          return "*" === e.topic;
        }).forEach(function (e) {
          return e.callback(i);
        });
      }

      function B(e, t) {
        I = e;

        try {
          return t();
        } finally {
          I = null;
        }
      }
    },
    30: function _(e, t) {
      var n = {}.hasOwnProperty;

      e.exports = function (e, t) {
        return n.call(e, t);
      };
    },
    31: function _(e, t) {
      e.exports = {};
    },
    32: function _(e, t, n) {
      t.a = r, n.d(t, "b", function () {
        return i;
      });
      var c = n(0);

      function u() {
        return (u = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];

            for (var r in n) {
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      function r(i) {
        function o() {
          var e = function () {
            var t,
                n = [];

            do {
              try {
                t = t ? t.parent : i;

                try {
                  var e = t == i.top,
                      r = {
                    referrer: t.document.referrer || null,
                    location: t.location.href || null,
                    isTop: e
                  };
                  e && (r = u(r, {
                    canonicalUrl: a(t.document)
                  })), n.push(r);
                } catch (e) {
                  n.push({
                    referrer: null,
                    location: null,
                    isTop: t == i.top
                  }), Object(c.logWarn)("Trying to access cross domain iframe. Continuing without referrer and location");
                }
              } catch (e) {
                return n.push({
                  referrer: null,
                  location: null,
                  isTop: !1
                }), n;
              }
            } while (t != i.top);

            return n;
          }(),
              t = function () {
            try {
              if (!i.location.ancestorOrigins) return;
              return i.location.ancestorOrigins;
            } catch (e) {}
          }();

          if (t) for (var n = 0, r = t.length; n < r; n++) {
            e[n].ancestor = t[n];
          }
          return e;
        }

        function a(e) {
          try {
            var t = e.querySelector("link[rel='canonical']");
            if (null !== t) return t.href;
          } catch (e) {}

          return null;
        }

        return function () {
          try {
            var e,
                t = o(),
                n = t.length - 1,
                r = null !== t[n].location || 0 < n && null !== t[n - 1].referrer,
                i = function (e) {
              for (var t = [], n = null, r = null, i = null, o = null, a = null, c = e.length - 1; 0 <= c; c--) {
                try {
                  n = e[c].location;
                } catch (e) {}

                if (n) t.push(n), a = a || n;else if (0 !== c) {
                  r = e[c - 1];

                  try {
                    i = r.referrer, o = r.ancestor;
                  } catch (e) {}

                  i ? (t.push(i), a = a || i) : o ? (t.push(o), a = a || o) : t.push(null);
                } else t.push(null);
              }

              return {
                stack: t,
                detectedRefererUrl: a
              };
            }(t);

            return t[t.length - 1].canonicalUrl && (e = t[t.length - 1].canonicalUrl), {
              referer: i.detectedRefererUrl,
              reachedTop: r,
              numIframes: n,
              stack: i.stack,
              canonicalUrl: e
            };
          } catch (e) {}
        };
      }

      var i = r(window);
    },
    33: function _(e, t, n) {
      n.d(t, "a", function () {
        return h;
      });
      var a = n(0),
          r = n(3),
          i = n(11),
          o = n.n(i);

      function c(e, t) {
        return function (e) {
          if (Array.isArray(e)) return e;
        }(e) || function (e, t) {
          if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e))) return;
          var n = [],
              r = !0,
              i = !1,
              o = void 0;

          try {
            for (var a, c = e[Symbol.iterator](); !(r = (a = c.next()).done) && (n.push(a.value), !t || n.length !== t); r = !0) {
              ;
            }
          } catch (e) {
            i = !0, o = e;
          } finally {
            try {
              r || null == c["return"] || c["return"]();
            } finally {
              if (i) throw o;
            }
          }

          return n;
        }(e, t) || function (e, t) {
          if (!e) return;
          if ("string" == typeof e) return u(e, t);
          var n = Object.prototype.toString.call(e).slice(8, -1);
          "Object" === n && e.constructor && (n = e.constructor.name);
          if ("Map" === n || "Set" === n) return Array.from(e);
          if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return u(e, t);
        }(e, t) || function () {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function u(e, t) {
        (null == t || t > e.length) && (t = e.length);

        for (var n = 0, r = new Array(t); n < t; n++) {
          r[n] = e[n];
        }

        return r;
      }

      function s() {
        return (s = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];

            for (var r in n) {
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      r.b.setDefaults({
        userSync: a.deepClone({
          syncEnabled: !0,
          filterSettings: {
            image: {
              bidders: "*",
              filter: "include"
            }
          },
          syncsPerBidder: 5,
          syncDelay: 3e3,
          auctionDelay: 0
        })
      });
      var d,
          f,
          l,
          p,
          g,
          b,
          y,
          v = !a.isSafariBrowser() && a.cookiesAreEnabled(),
          h = (d = {
        config: r.b.getConfig("userSync"),
        browserSupportsCookies: v
      }, f = {}, l = m(), p = new Set(), b = {
        image: !0,
        iframe: !(g = {})
      }, y = d.config, r.b.getConfig("userSync", function (e) {
        var t;
        e.userSync && (t = e.userSync.filterSettings, a.isPlainObject(t) && (t.image || t.all || (e.userSync.filterSettings.image = {
          bidders: "*",
          filter: "include"
        }))), y = s(y, e.userSync);
      }), f.registerSync = function (e, t, n) {
        return p.has(t) ? a.logMessage('already fired syncs for "'.concat(t, '", ignoring registerSync call')) : y.syncEnabled && a.isArray(l[e]) ? t ? 0 !== y.syncsPerBidder && Number(g[t]) >= y.syncsPerBidder ? a.logWarn('Number of user syncs exceeded for "'.concat(t, '"')) : f.canBidderRegisterSync(e, t) ? (l[e].push([t, n]), (r = g)[i = t] ? r[i] += 1 : r[i] = 1, void (g = r)) : a.logWarn('Bidder "'.concat(t, '" not permitted to register their "').concat(e, '" userSync pixels.')) : a.logWarn("Bidder is required for registering sync") : a.logWarn('User sync type "'.concat(e, '" not supported'));
        var r, i;
      }, f.syncUsers = function () {
        var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0;
        if (e) return setTimeout(S, Number(e));
        S();
      }, f.triggerUserSyncs = function () {
        y.enableOverride && f.syncUsers();
      }, f.canBidderRegisterSync = function (e, t) {
        return !y.filterSettings || !E(e, t);
      }, f);

      function m() {
        return {
          image: [],
          iframe: []
        };
      }

      function S() {
        if (y.syncEnabled && d.browserSupportsCookies) {
          try {
            !function () {
              if (!b.image) return;
              A(l.image, function (e) {
                var t = c(e, 2),
                    n = t[0],
                    r = t[1];
                a.logMessage("Invoking image pixel user sync for bidder: ".concat(n)), a.triggerPixel(r);
              });
            }(), function () {
              if (!b.iframe) return;
              A(l.iframe, function (e) {
                var t = c(e, 2),
                    n = t[0],
                    r = t[1];
                a.logMessage("Invoking iframe user sync for bidder: ".concat(n)), a.insertUserSyncIframe(r);
              });
            }();
          } catch (e) {
            return a.logError("Error firing user syncs", e);
          }

          l = m();
        }
      }

      function A(e, t) {
        a.shuffle(e).forEach(function (e) {
          t(e), p.add(e[0]);
        });
      }

      function E(e, t) {
        var n = y.filterSettings;

        if (function (e, t) {
          if (e.all && e[t]) return void a.logWarn('Detected presence of the "filterSettings.all" and "filterSettings.'.concat(t, '" in userSync config.  You cannot mix "all" with "iframe/image" configs; they are mutually exclusive.'));
          var n = e.all ? e.all : e[t],
              r = e.all ? "all" : t;
          if (!n) return;
          var i = n.filter,
              o = n.bidders;
          if (i && "include" !== i && "exclude" !== i) return void a.logWarn('UserSync "filterSettings.'.concat(r, ".filter\" setting '").concat(i, "' is not a valid option; use either 'include' or 'exclude'."));
          return "*" === o || Array.isArray(o) && 0 < o.length && o.every(function (e) {
            return a.isStr(e) && "*" !== e;
          }) || (a.logWarn('Detected an invalid setup in userSync "filterSettings.'.concat(r, ".bidders\"; use either '*' (to represent all bidders) or an array of bidders.")), !1);
        }(n, e)) {
          b[e] = !0;
          var r = n.all ? n.all : n[e],
              i = "*" === r.bidders ? [t] : r.bidders;
          return {
            include: function include(e, t) {
              return !o()(e, t);
            },
            exclude: function exclude(e, t) {
              return o()(e, t);
            }
          }[r.filter || "include"](i, t);
        }
      }
    },
    34: function _(e, t, n) {
      n.d(t, "b", function () {
        return c;
      }), n.d(t, "a", function () {
        return u;
      }), t.d = function (e, t) {
        var n = Object(o.getBidRequest)(e.requestId, t),
            r = n && Object(o.deepAccess)(n, "mediaTypes.video"),
            i = r && Object(o.deepAccess)(r, "context");
        return s(e, n, r, i);
      }, n.d(t, "c", function () {
        return s;
      });
      n(7);
      var o = n(0),
          i = n(3),
          r = n(11),
          a = (n.n(r), n(13)),
          c = "outstream",
          u = "instream";
      var s = Object(a.b)("sync", function (e, t, n, r) {
        return !t || n && r !== c ? i.b.getConfig("cache.url") || !e.vastXml || e.vastUrl ? !(!e.vastUrl && !e.vastXml) : (Object(o.logError)('\n        This bid contains only vastXml and will not work when a prebid cache url is not specified.\n        Try enabling prebid cache with pbjs.setConfig({ cache: {url: "..."} });\n      '), !1) : r !== c || !(!e.renderer && !t.renderer);
      }, "checkVideoBidSetup");
    },
    35: function _(e, t, n) {
      n.d(t, "a", function () {
        return p;
      });
      var v = n(0),
          h = n(3),
          m = n(23),
          r = n(25),
          i = n(78),
          o = n(2),
          a = n(11),
          S = n.n(a);

      function A() {
        return (A = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];

            for (var r in n) {
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      function E(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : e[t] = n, e;
      }

      function T(e) {
        return function (e) {
          if (Array.isArray(e)) return c(e);
        }(e) || function (e) {
          if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
        }(e) || function (e, t) {
          if (!e) return;
          if ("string" == typeof e) return c(e, t);
          var n = Object.prototype.toString.call(e).slice(8, -1);
          "Object" === n && e.constructor && (n = e.constructor.name);
          if ("Map" === n || "Set" === n) return Array.from(e);
          if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return c(e, t);
        }(e) || function () {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function c(e, t) {
        (null == t || t > e.length) && (t = e.length);

        for (var n = 0, r = new Array(t); n < t; n++) {
          r[n] = e[n];
        }

        return r;
      }

      var u = n(0),
          O = n(5),
          I = [],
          C = Object.keys(O.TARGETING_KEYS).map(function (e) {
        return O.TARGETING_KEYS[e];
      }),
          s = function s(e) {
        return e.responseTimestamp + 1e3 * e.ttl + 1e3 > Object(v.timestamp)();
      },
          d = function d(e) {
        return e && (e.status && !S()([O.BID_STATUS.RENDERED], e.status) || !e.status);
      };

      function w(e, r, t) {
        var i = 2 < arguments.length && void 0 !== t ? t : 0,
            o = [],
            a = h.b.getConfig("sendBidsControl.dealPrioritization"),
            c = Object(v.groupBy)(e, "adUnitCode");
        return Object.keys(c).forEach(function (e) {
          var t = [],
              n = Object(v.groupBy)(c[e], "bidderCode");
          Object.keys(n).forEach(function (e) {
            return t.push(n[e].reduce(r));
          }), 0 < i ? (t = a ? t(j(!0)) : t.sort(function (e, t) {
            return t.cpm - e.cpm;
          }), o.push.apply(o, T(t.slice(0, i)))) : o.push.apply(o, T(t));
        }), o;
      }

      function j(e) {
        var n = 0 < arguments.length && void 0 !== e && e;
        return function (e, t) {
          return void 0 !== e.adUnitTargeting.hb_deal && void 0 === t.adUnitTargeting.hb_deal ? -1 : void 0 === e.adUnitTargeting.hb_deal && void 0 !== t.adUnitTargeting.hb_deal ? 1 : n ? t.cpm - e.cpm : t.adUnitTargeting.hb_pb - e.adUnitTargeting.hb_pb;
        };
      }

      var f,
          _,
          l,
          p = (f = r.a, l = {}, (_ = {}).setLatestAuctionForAdUnit = function (e, t) {
        l[e] = t;
      }, _.resetPresetTargeting = function (e) {
        var t, r;
        Object(v.isGptPubadsDefined)() && (t = U(e), r = f.getAdUnits().filter(function (e) {
          return S()(t, e.code);
        }), window.googletag.pubads().getSlots().forEach(function (n) {
          I.forEach(function (t) {
            r.forEach(function (e) {
              e.code !== n.getAdUnitPath() && e.code !== n.getSlotElementId() || n.setTargeting(t, null);
            });
          });
        }));
      }, _.resetPresetTargetingAST = function (e) {
        U(e).forEach(function (e) {
          var t,
              n,
              r = window.apntag.getTag(e);
          r && r.keywords && (t = Object.keys(r.keywords), n = {}, t.forEach(function (e) {
            S()(I, e.toLowerCase()) || (n[e] = r.keywords[e]);
          }), window.apntag.modifyTag(e, {
            keywords: n
          }));
        });
      }, _.getAllTargeting = function (e) {
        var n,
            t,
            r,
            i,
            o,
            a,
            c,
            u,
            s,
            d = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : R(),
            f = U(e),
            l = (a = f, c = d, u = _.getWinningBids(a, c), s = D(), (u = u.map(function (o) {
          return E({}, o.adUnitCode, Object.keys(o.adserverTargeting).filter(function (e) {
            return void 0 === o.sendStandardTargeting || o.sendStandardTargeting || -1 === s.indexOf(e);
          }).reduce(function (e, t) {
            var n = [o.adserverTargeting[t]],
                r = E({}, t.substring(0, 20), n);
            if (t !== O.TARGETING_KEYS.DEAL) return [].concat(T(e), [r]);
            var i = E({}, "".concat(t, "_").concat(o.bidderCode).substring(0, 20), n);
            return [].concat(T(e), [r, i]);
          }, []));
        })).concat((o = f, d.filter(function (e) {
          return S()(o, e.adUnitCode);
        }).map(function (e) {
          return A({}, e);
        }).reduce(k, []).map(N).filter(function (e) {
          return e;
        }))).concat(h.b.getConfig("enableSendAllBids") ? (n = f, t = d, r = C.concat(m.a), i = h.b.getConfig("sendBidsControl.bidLimit"), w(t, v.getHighestCpm, i).map(function (t) {
          if (B(t, n)) return E({}, t.adUnitCode, x(t, r.filter(function (e) {
            return void 0 !== t.adserverTargeting[e];
          })));
        }).filter(function (e) {
          return e;
        })) : function (e, t) {
          if (!0 !== h.b.getConfig("targetingControls.alwaysIncludeDeals")) return [];
          var n = C.concat(m.a);
          return w(t, v.getHighestCpm).map(function (t) {
            if (t.dealId && B(t, e)) return E({}, t.adUnitCode, x(t, n.filter(function (e) {
              return void 0 !== t.adserverTargeting[e];
            })));
          }).filter(function (e) {
            return e;
          });
        }(f, d)));
        l.map(function (t) {
          Object.keys(t).map(function (e) {
            t[e].map(function (e) {
              -1 === I.indexOf(Object.keys(e)[0]) && (I = Object.keys(e).concat(I));
            });
          });
        }), l = l.map(function (e) {
          return E({}, Object.keys(e)[0], e[Object.keys(e)[0]].map(function (e) {
            return E({}, Object.keys(e)[0], e[Object.keys(e)[0]].join(", "));
          }).reduce(function (e, t) {
            return A(t, e);
          }, {}));
        }).reduce(function (e, t) {
          var n = Object.keys(t)[0];
          return e[n] = A({}, e[n], t[n]), e;
        }, {});
        var p,
            g,
            b,
            y = h.b.getConfig("targetingControls.auctionKeyMaxChars");
        return y && (Object(v.logInfo)("Detected 'targetingControls.auctionKeyMaxChars' was active for this auction; set with a limit of ".concat(y, " characters.  Running checks on auction keys...")), p = l, g = y, b = Object(v.deepClone)(p), l = Object.keys(b).map(function (e) {
          return {
            adUnitCode: e,
            adUnitTargeting: b[e]
          };
        }).sort(j()).reduce(function (e, t, n, r) {
          var i,
              o = (i = t.adUnitTargeting, Object.keys(i).reduce(function (e, t) {
            return e + "".concat(t, "%3d").concat(encodeURIComponent(i[t]), "%26");
          }, ""));
          n + 1 === r.length && (o = o.slice(0, -3));
          var a = t.adUnitCode,
              c = o.length;
          return c <= g ? (g -= c, Object(v.logInfo)("AdUnit '".concat(a, "' auction keys comprised of ").concat(c, " characters.  Deducted from running threshold; new limit is ").concat(g), b[a]), e[a] = b[a]) : Object(v.logWarn)("The following keys for adUnitCode '".concat(a, "' exceeded the current limit of the 'auctionKeyMaxChars' setting.\nThe key-set size was ").concat(c, ", the current allotted amount was ").concat(g, ".\n"), b[a]), n + 1 === r.length && 0 === Object.keys(e).length && Object(v.logError)("No auction targeting keys were permitted due to the setting in setConfig(targetingControls.auctionKeyMaxChars).  Please review setup and consider adjusting."), e;
        }, {})), f.forEach(function (e) {
          l[e] || (l[e] = {});
        }), l;
      }, _.setTargetingForGPT = function (i, e) {
        window.googletag.pubads().getSlots().forEach(function (r) {
          Object.keys(i).filter((e || Object(v.isAdUnitCodeMatchingSlot))(r)).forEach(function (n) {
            return Object.keys(i[n]).forEach(function (t) {
              var e = i[n][t].split(",");
              (e = 1 < e.length ? [e] : e).map(function (e) {
                return u.logMessage("Attempting to set key value for slot: ".concat(r.getSlotElementId(), " key: ").concat(t, " value: ").concat(e)), e;
              }).forEach(function (e) {
                r.setTargeting(t, e);
              });
            });
          });
        });
      }, _.getWinningBids = function (e) {
        var n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : R(),
            t = U(e);
        return n.filter(function (e) {
          return S()(t, e.adUnitCode);
        }).filter(function (e) {
          return 0 < e.cpm;
        }).map(function (e) {
          return e.adUnitCode;
        }).filter(v.uniques).map(function (t) {
          return n.filter(function (e) {
            return e.adUnitCode === t ? e : null;
          }).reduce(v.getHighestCpm);
        });
      }, _.setTargetingForAst = function (e) {
        var r = _.getAllTargeting(e);

        try {
          _.resetPresetTargetingAST(e);
        } catch (e) {
          u.logError("unable to reset targeting for AST" + e);
        }

        Object.keys(r).forEach(function (n) {
          return Object.keys(r[n]).forEach(function (e) {
            var t;
            u.logMessage("Attempting to set targeting for targetId: ".concat(n, " key: ").concat(e, " value: ").concat(r[n][e])), (u.isStr(r[n][e]) || u.isArray(r[n][e])) && (t = {}, e.search(/pt[0-9]/) < 0 ? t[e.toUpperCase()] = r[n][e] : t[e] = r[n][e], window.apntag.setKeywords(n, t, {
              overrideKeyValue: !0
            }));
          });
        });
      }, _.isApntagDefined = function () {
        if (window.apntag && u.isFn(window.apntag.setKeywords)) return !0;
      }, _);

      function B(e, t) {
        return e.adserverTargeting && t && (u.isArray(t) && S()(t, e.adUnitCode) || "string" == typeof t && e.adUnitCode === t);
      }

      function U(e) {
        return "string" == typeof e ? [e] : u.isArray(e) ? e : f.getAdUnitCodes() || [];
      }

      function R() {
        var e = f.getBidsReceived();
        return h.b.getConfig("useBidCache") || (e = e.filter(function (e) {
          return l[e.adUnitCode] === e.auctionId;
        })), w(e = e.filter(function (e) {
          return Object(v.deepAccess)(e, "video.context") !== o.a;
        }).filter(function (e) {
          return "banner" !== e.mediaType || Object(i.c)([e.width, e.height]);
        }).filter(d).filter(s), v.getOldestHighestCpmBid);
      }

      function D() {
        return f.getStandardBidderAdServerTargeting().map(function (e) {
          return e.key;
        }).concat(C).filter(v.uniques);
      }

      function k(r, i, e, t) {
        return Object.keys(i.adserverTargeting).filter(g()).forEach(function (e) {
          var t, n;
          r.length && r.filter((n = e, function (e) {
            return e.adUnitCode === i.adUnitCode && e.adserverTargeting[n];
          })).forEach((t = e, function (e) {
            u.isArray(e.adserverTargeting[t]) || (e.adserverTargeting[t] = [e.adserverTargeting[t]]), e.adserverTargeting[t] = e.adserverTargeting[t].concat(i.adserverTargeting[t]).filter(v.uniques), delete i.adserverTargeting[t];
          }));
        }), r.push(i), r;
      }

      function g() {
        var t = D().concat(m.a);
        return function (e) {
          return -1 === t.indexOf(e);
        };
      }

      function N(t) {
        return E({}, t.adUnitCode, Object.keys(t.adserverTargeting).filter(g()).map(function (e) {
          return E({}, e.substring(0, 20), [t.adserverTargeting[e]]);
        }));
      }

      function x(t, e) {
        return e.map(function (e) {
          return E({}, "".concat(e, "_").concat(t.bidderCode).substring(0, 20), [t.adserverTargeting[e]]);
        });
      }
    },
    36: function _(e, t) {
      e.exports = function (e) {
        try {
          return !!e();
        } catch (e) {
          return !0;
        }
      };
    },
    37: function _(e, t) {
      var n = {}.toString;

      e.exports = function (e) {
        return n.call(e).slice(8, -1);
      };
    },
    375: function _(e, t, n) {
      n(376), e.exports = n(16).Number.isInteger;
    },
    376: function _(e, t, n) {
      var r = n(15);
      r(r.S, "Number", {
        isInteger: n(377)
      });
    },
    377: function _(e, t, n) {
      var r = n(17),
          i = Math.floor;

      e.exports = function (e) {
        return !r(e) && isFinite(e) && i(e) === e;
      };
    },
    38: function _(e, t) {
      e.exports = function (e) {
        if (null == e) throw TypeError("Can't call method on  " + e);
        return e;
      };
    },
    39: function _(e, t, n) {
      var r = n(47),
          i = Math.min;

      e.exports = function (e) {
        return 0 < e ? i(r(e), 9007199254740991) : 0;
      };
    },
    4: function _(e, t, n) {
      n.d(t, "a", function () {
        return r;
      }), t.b = i;
      var l = n(9),
          p = n(3);

      function g() {
        return (g = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];

            for (var r in n) {
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      function b(e) {
        return (b = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
          return _typeof4(e);
        } : function (e) {
          return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof4(e);
        })(e);
      }

      var y = n(0),
          v = 4,
          r = i();

      function i() {
        var s = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 3e3,
            e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},
            d = e.request,
            f = e.done;
        return function (e, t, n) {
          var r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : {};

          try {
            var i,
                o = r.method || (n ? "POST" : "GET"),
                a = document.createElement("a");
            a.href = e;
            var c,
                u = "object" === b(t) && null !== t ? t : {
              success: function success() {
                y.logMessage("xhr success");
              },
              error: function error(e) {
                y.logError("xhr error", null, e);
              }
            };
            "function" == typeof t && (u.success = t), (i = new window.XMLHttpRequest()).onreadystatechange = function () {
              var e;
              i.readyState === v && ("function" == typeof f && f(a.origin), 200 <= (e = i.status) && e < 300 || 304 === e ? u.success(i.responseText, i) : u.error(i.statusText, i));
            }, p.b.getConfig("disableAjaxTimeout") || (i.ontimeout = function () {
              y.logError("  xhr timeout after ", i.timeout, "ms");
            }), "GET" === o && n && (g((c = Object(l.c)(e, r)).search, n), e = Object(l.a)(c)), i.open(o, e, !0), p.b.getConfig("disableAjaxTimeout") || (i.timeout = s), r.withCredentials && (i.withCredentials = !0), y._each(r.customHeaders, function (e, t) {
              i.setRequestHeader(t, e);
            }), r.preflight && i.setRequestHeader("X-Requested-With", "XMLHttpRequest"), i.setRequestHeader("Content-Type", r.contentType || "text/plain"), "function" == typeof d && d(a.origin), "POST" === o && n ? i.send(n) : i.send();
          } catch (e) {
            y.logError("xhr construction", e);
          }
        };
      }
    },
    40: function _(e, t) {
      e.exports = function () {};
    },
    41: function _(e, t, n) {
      var l = n(27),
          p = n(70),
          g = n(71),
          b = n(29),
          y = n(39),
          v = n(72),
          h = {},
          m = {};
      (t = e.exports = function (e, t, n, r, i) {
        var o,
            a,
            c,
            u,
            s = i ? function () {
          return e;
        } : v(e),
            d = l(n, r, t ? 2 : 1),
            f = 0;
        if ("function" != typeof s) throw TypeError(e + " is not iterable!");

        if (g(s)) {
          for (o = y(e.length); f < o; f++) {
            if ((u = t ? d(b(a = e[f])[0], a[1]) : d(e[f])) === h || u === m) return u;
          }
        } else for (c = s.call(e); !(a = c.next()).done;) {
          if ((u = p(c, d, a.value, t)) === h || u === m) return u;
        }
      }).BREAK = h, t.RETURN = m;
    },
    42: function _(e, t, n) {
      n.d(t, "b", function () {
        return W;
      }), n.d(t, "a", function () {
        return L;
      }), t.k = function (e) {
        var t,
            i,
            b,
            y,
            o = e.adUnits,
            n = e.adUnitCodes,
            r = e.callback,
            a = e.cbTimeout,
            c = e.labels,
            u = e.auctionId,
            v = o,
            s = c,
            d = n,
            h = [],
            f = [],
            l = [],
            p = u || x.generateUUID(),
            g = r,
            m = a,
            S = [],
            A = new Set();

        function E() {
          return {
            auctionId: p,
            timestamp: t,
            auctionEnd: i,
            auctionStatus: b,
            adUnits: v,
            adUnitCodes: d,
            labels: s,
            bidderRequests: h,
            noBids: l,
            bidsReceived: f,
            winningBids: S,
            timeout: m
          };
        }

        function T(n, e) {
          var r, t;
          e && clearTimeout(y), void 0 === i && (r = [], n && (x.logMessage("Auction ".concat(p, " timedOut")), t = A, (r = h.map(function (e) {
            return (e.bids || []).filter(function (e) {
              return !t.has(e.bidder);
            });
          }).reduce(w.flatten, []).map(function (e) {
            return {
              bidId: e.bidId,
              bidder: e.bidder,
              adUnitCode: e.adUnitCode,
              auctionId: e.auctionId
            };
          })).length && M.emit(q.EVENTS.BID_TIMEOUT, r)), b = L, i = Date.now(), M.emit(q.EVENTS.AUCTION_END, E()), Y(v, function () {
            try {
              var e;
              null != g && (e = f.filter(x.bind.call(w.adUnitsFilter, this, d)).reduce(Z, {}), g.apply(pbjs, [e, n, p]), g = null);
            } catch (e) {
              x.logError("Error executing bidsBackHandler", null, e);
            } finally {
              r.length && P.callTimedOutBidders(o, r, m);
              var t = B.b.getConfig("userSync") || {};
              t.enableOverride || N(t.syncDelay);
            }
          }));
        }

        function O() {
          x.logInfo("Bids Received for Auction with id: ".concat(p), f), b = L, T(!1, !0);
        }

        function I(e) {
          A.add(e);
        }

        function C(d) {
          var f = this;
          d.forEach(function (e) {
            var t;
            t = e, h = h.concat(t);
          });
          var l = {},
              e = {
            bidRequests: d,
            run: function run() {
              var e, t;
              e = T.bind(null, !0), t = setTimeout(e, m), y = t, b = W, M.emit(q.EVENTS.AUCTION_INIT, E());
              var n,
                  r,
                  i,
                  o,
                  a,
                  c,
                  u = (n = O, r = f, i = 0, o = !1, a = new Set(), c = {}, {
                addBidResponse: function addBidResponse(e, t) {
                  c[t.requestId] = !0, i++;

                  var n = function (e) {
                    var t = e.adUnitCode,
                        n = e.bid,
                        r = e.bidderRequest,
                        i = e.auctionId,
                        o = r.start,
                        a = k({}, n, {
                      auctionId: i,
                      responseTimestamp: Object(w.timestamp)(),
                      requestTimestamp: o,
                      cpm: parseFloat(n.cpm) || 0,
                      bidder: n.bidderCode,
                      adUnitCode: t
                    });
                    a.timeToRespond = a.responseTimestamp - a.requestTimestamp, M.emit(q.EVENTS.BID_ADJUSTMENT, a);
                    var c = r.bids && U()(r.bids, function (e) {
                      return e.adUnitCode == t;
                    }),
                        u = c && c.renderer;
                    u && u.url && (a.renderer = _.a.install({
                      url: u.url
                    }), a.renderer.setRender(u.render));
                    var s = X(n.mediaType, c, B.b.getConfig("mediaTypePriceGranularity")),
                        d = Object(j.a)(a.cpm, "object" === D(s) ? s : B.b.getConfig("customPriceBucket"), B.b.getConfig("currency.granularityMultiplier"));
                    return a.pbLg = d.low, a.pbMg = d.med, a.pbHg = d.high, a.pbAg = d.auto, a.pbDg = d.dense, a.pbCg = d.custom, a;
                  }({
                    adUnitCode: e,
                    bid: t,
                    bidderRequest: this,
                    auctionId: r.getAuctionId()
                  });

                  "video" === n.mediaType ? function (e, t, n, r) {
                    var i = !0,
                        o = Object(w.getBidRequest)(t.requestId, [n]),
                        a = o && Object(w.deepAccess)(o, "mediaTypes.video"),
                        c = a && Object(w.deepAccess)(a, "context");
                    B.b.getConfig("cache.url") && c !== R.b && (t.videoCacheKey ? t.vastUrl || (x.logError("videoCacheKey specified but not required vastUrl for video bid"), i = !1) : (i = !1, $(e, t, r, o))), i && (Q(e, t), r());
                  }(r, n, this, s) : (Q(r, n), s());
                },
                adapterDone: function adapterDone() {
                  a.add(this), o = r.getBidRequests().every(function (e) {
                    return a.has(e);
                  }), this.bids.forEach(function (e) {
                    c[e.bidId] || (r.addNoBid(e), M.emit(q.EVENTS.NO_BID, e));
                  }), o && 0 === i && n();
                }
              });

              function s() {
                i--, o && 0 === i && n();
              }

              P.callBids(v, d, function () {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) {
                  t[n] = arguments[n];
                }

                K.apply({
                  dispatch: u.addBidResponse,
                  bidderRequest: this
                }, t);
              }, u.adapterDone, {
                request: function request(e, t) {
                  g(z, t), g(l, e), V[e] || (V[e] = {
                    SRA: !0,
                    origin: t
                  }), 1 < l[e] && (V[e].SRA = !1);
                },
                done: function done(e) {
                  z[e]--, H[0] && p(H[0]) && H.shift();
                }
              }, m, I);
            }
          };

          function p(e) {
            var r = !0,
                i = B.b.getConfig("maxRequestsPerOrigin") || F;
            return e.bidRequests.some(function (e) {
              var t = 1,
                  n = void 0 !== e.src && e.src === q.S2S.SRC ? "s2s" : e.bidderCode;
              return V[n] && (!1 === V[n].SRA && (t = Math.min(e.bids.length, i)), z[V[n].origin] + t > i && (r = !1)), !r;
            }), r && e.run(), r;
          }

          function g(e, t) {
            void 0 === e[t] ? e[t] = 1 : e[t]++;
          }

          p(e) || (x.logWarn("queueing auction due to limited endpoint capacity"), H.push(e));
        }

        return {
          addBidReceived: function addBidReceived(e) {
            f = f.concat(e);
          },
          addNoBid: function addNoBid(e) {
            l = l.concat(e);
          },
          executeCallback: T,
          callBids: function callBids() {
            b = G, t = Date.now();
            var e = P.makeBidRequests(v, t, p, m, s);
            x.logInfo("Bids Requested for Auction with id: ".concat(p), e), e.length < 1 ? (x.logWarn("No valid bid requests returned for auction"), O()) : J.call({
              dispatch: C,
              context: this
            }, e);
          },
          addWinningBid: function addWinningBid(e) {
            S = S.concat(e), P.callBidWonBidder(e.bidder, e, o);
          },
          setBidTargeting: function setBidTargeting(e) {
            P.callSetTargetingBidder(e.bidder, e);
          },
          getWinningBids: function getWinningBids() {
            return S;
          },
          getTimeout: function getTimeout() {
            return m;
          },
          getAuctionId: function getAuctionId() {
            return p;
          },
          getAuctionStatus: function getAuctionStatus() {
            return b;
          },
          getAdUnits: function getAdUnits() {
            return v;
          },
          getAdUnitCodes: function getAdUnitCodes() {
            return d;
          },
          getBidRequests: function getBidRequests() {
            return h;
          },
          getBidsReceived: function getBidsReceived() {
            return f;
          },
          getNoBids: function getNoBids() {
            return l;
          }
        };
      }, n.d(t, "c", function () {
        return K;
      }), n.d(t, "e", function () {
        return J;
      }), t.g = d, t.d = Q, n.d(t, "f", function () {
        return $;
      }), n.d(t, "i", function () {
        return f;
      }), n.d(t, "h", function () {
        return l;
      }), t.j = p;

      var w = n(0),
          s = n(9),
          j = n(43),
          a = n(23),
          o = n(79),
          _ = n(10),
          B = n(3),
          r = n(33),
          i = n(13),
          c = n(12),
          U = n.n(c),
          R = n(34),
          u = n(2);

      function D(e) {
        return (D = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
          return _typeof4(e);
        } : function (e) {
          return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof4(e);
        })(e);
      }

      function k() {
        return (k = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];

            for (var r in n) {
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      var N = r.a.syncUsers,
          x = n(0),
          P = n(7)["default"],
          M = n(8),
          q = n(5),
          G = "started",
          W = "inProgress",
          L = "completed";
      M.on(q.EVENTS.BID_ADJUSTMENT, function (e) {
        !function (e) {
          var t,
              n = e.bidderCode,
              r = e.cpm;
          if (pbjs.bidderSettings && (n && pbjs.bidderSettings[n] && "function" == typeof pbjs.bidderSettings[n].bidCpmAdjustment ? t = pbjs.bidderSettings[n].bidCpmAdjustment : pbjs.bidderSettings[q.JSON_MAPPING.BD_SETTING_STANDARD] && "function" == typeof pbjs.bidderSettings[q.JSON_MAPPING.BD_SETTING_STANDARD].bidCpmAdjustment && (t = pbjs.bidderSettings[q.JSON_MAPPING.BD_SETTING_STANDARD].bidCpmAdjustment), t)) try {
            r = t(e.cpm, k({}, e));
          } catch (e) {
            x.logError("Error during bid adjustment", "bidmanager.js", e);
          }
          0 <= r && (e.cpm = r);
        }(e);
      });
      var F = 4,
          z = {},
          V = {},
          H = [];
      var K = Object(i.b)("async", function (e, t) {
        this.dispatch.call(this.bidderRequest, e, t);
      }, "addBidResponse"),
          J = Object(i.b)("sync", function (e) {
        this.dispatch.call(this.context, e);
      }, "addBidderRequests"),
          Y = Object(i.b)("async", function (e, t) {
        t && t();
      }, "bidsBackCallback");

      function d(e, t) {
        t.timeToRespond > e.getTimeout() + B.b.getConfig("timeoutBuffer") && e.executeCallback(!0);
      }

      function Q(e, t) {
        var n = e.getBidRequests(),
            r = U()(n, function (e) {
          return e.bidderCode === t.bidderCode;
        });
        !function (t, e) {
          var n;
          {
            var r;
            t.bidderCode && (0 < t.cpm || t.dealId) && (r = U()(e.bids, function (e) {
              return e.adUnitCode === t.adUnitCode;
            }), n = function (e, t, n) {
              if (!t) return {};
              var r = {},
                  i = pbjs.bidderSettings;
              {
                var o;
                i && (o = p(t.mediaType, e, n), g(r, o, t), e && i[e] && i[e][q.JSON_MAPPING.ADSERVER_TARGETING] && (g(r, i[e], t), t.sendStandardTargeting = i[e].sendStandardTargeting));
              }
              t["native"] && (r = k({}, r, Object(a.d)(t, n)));
              return r;
            }(t.bidderCode, t, r));
          }
          t.adserverTargeting = k(t.adserverTargeting || {}, n);
        }(t, r), M.emit(q.EVENTS.BID_RESPONSE, t), e.addBidReceived(t), d(e, t);
      }

      var $ = Object(i.b)("async", function (n, r, i, e) {
        Object(o.b)([r], function (e, t) {
          e ? (x.logWarn("Failed to save to the video cache: ".concat(e, ". Video bid must be discarded.")), d(n, r)) : "" === t[0].uuid ? (x.logWarn("Supplied video cache key was already in use by Prebid Cache; caching attempt was rejected. Video bid must be discarded."), d(n, r)) : (r.videoCacheKey = t[0].uuid, r.vastUrl || (r.vastUrl = Object(o.a)(r.videoCacheKey)), Q(n, r), i());
        });
      }, "callPrebidCache");

      function X(e, t, n) {
        if (e && n) {
          if (e === u.d) {
            var r = Object(w.deepAccess)(t, "mediaTypes.".concat(u.d, ".context"), "instream");
            if (n["".concat(u.d, "-").concat(r)]) return n["".concat(u.d, "-").concat(r)];
          }

          return n[e];
        }
      }

      var f = function f(e, t) {
        var n = X(e, t, B.b.getConfig("mediaTypePriceGranularity"));
        return "string" == typeof e && n ? "string" == typeof n ? n : "custom" : B.b.getConfig("priceGranularity");
      },
          l = function l(t) {
        return function (e) {
          return t === q.GRANULARITY_OPTIONS.AUTO ? e.pbAg : t === q.GRANULARITY_OPTIONS.DENSE ? e.pbDg : t === q.GRANULARITY_OPTIONS.LOW ? e.pbLg : t === q.GRANULARITY_OPTIONS.MEDIUM ? e.pbMg : t === q.GRANULARITY_OPTIONS.HIGH ? e.pbHg : t === q.GRANULARITY_OPTIONS.CUSTOM ? e.pbCg : void 0;
        };
      };

      function p(e, t, n) {
        function r(e, t) {
          return {
            key: e,
            val: "function" == typeof t ? function (e) {
              return t(e);
            } : function (e) {
              return Object(w.getValue)(e, t);
            }
          };
        }

        var i,
            o,
            a = q.TARGETING_KEYS,
            c = f(e, n),
            u = pbjs.bidderSettings;
        return u[q.JSON_MAPPING.BD_SETTING_STANDARD] || (u[q.JSON_MAPPING.BD_SETTING_STANDARD] = {}), u[q.JSON_MAPPING.BD_SETTING_STANDARD][q.JSON_MAPPING.ADSERVER_TARGETING] || (u[q.JSON_MAPPING.BD_SETTING_STANDARD][q.JSON_MAPPING.ADSERVER_TARGETING] = [r(a.BIDDER, "bidderCode"), r(a.AD_ID, "adId"), r(a.PRICE_BUCKET, l(c)), r(a.SIZE, "size"), r(a.DEAL, "dealId"), r(a.SOURCE, "source"), r(a.FORMAT, "mediaType")]), "video" === e && (i = u[q.JSON_MAPPING.BD_SETTING_STANDARD][q.JSON_MAPPING.ADSERVER_TARGETING], [a.UUID, a.CACHE_ID].forEach(function (t) {
          void 0 === U()(i, function (e) {
            return e.key === t;
          }) && i.push(r(t, "videoCacheKey"));
        }), !B.b.getConfig("cache.url") || t && !1 === x.deepAccess(u, "".concat(t, ".sendStandardTargeting")) || (o = Object(s.c)(B.b.getConfig("cache.url")), void 0 === U()(i, function (e) {
          return e.key === a.CACHE_HOST;
        }) && i.push(r(a.CACHE_HOST, function (e) {
          return x.deepAccess(e, "adserverTargeting.".concat(a.CACHE_HOST)) ? e.adserverTargeting[a.CACHE_HOST] : o.hostname;
        })))), u[q.JSON_MAPPING.BD_SETTING_STANDARD];
      }

      function g(r, i, o) {
        var e = i[q.JSON_MAPPING.ADSERVER_TARGETING];
        return o.size = o.getSize(), x._each(e, function (e) {
          var t = e.key,
              n = e.val;
          if (r[t] && x.logWarn("The key: " + t + " is getting ovewritten"), x.isFn(n)) try {
            n = n(o);
          } catch (e) {
            x.logError("bidmanager", "ERROR", e);
          }
          (void 0 === i.suppressEmptyKeys || !0 !== i.suppressEmptyKeys) && t !== q.TARGETING_KEYS.DEAL || !x.isEmptyStr(n) && null != n ? r[t] = n : x.logInfo("suppressing empty key '" + t + "' from adserver targeting");
        }), r;
      }

      function Z(e, t) {
        return e[t.adUnitCode] || (e[t.adUnitCode] = {
          bids: []
        }), e[t.adUnitCode].bids.push(t), e;
      }
    },
    43: function _(e, t, n) {
      n.d(t, "a", function () {
        return d;
      }), n.d(t, "b", function () {
        return h;
      });
      var r = n(12),
          y = n.n(r),
          i = n(0),
          v = 2,
          o = {
        buckets: [{
          max: 5,
          increment: .5
        }]
      },
          a = {
        buckets: [{
          max: 20,
          increment: .1
        }]
      },
          c = {
        buckets: [{
          max: 20,
          increment: .01
        }]
      },
          u = {
        buckets: [{
          max: 3,
          increment: .01
        }, {
          max: 8,
          increment: .05
        }, {
          max: 20,
          increment: .5
        }]
      },
          s = {
        buckets: [{
          max: 5,
          increment: .05
        }, {
          max: 10,
          increment: .1
        }, {
          max: 20,
          increment: .5
        }]
      };

      function d(e, t) {
        var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1,
            r = parseFloat(e);
        return isNaN(r) && (r = ""), {
          low: "" === r ? "" : f(e, o, n),
          med: "" === r ? "" : f(e, a, n),
          high: "" === r ? "" : f(e, c, n),
          auto: "" === r ? "" : f(e, s, n),
          dense: "" === r ? "" : f(e, u, n),
          custom: "" === r ? "" : f(e, t, n)
        };
      }

      function f(n, e, r) {
        var i = "";
        if (!h(e)) return i;
        var t,
            o,
            a,
            c,
            u,
            s,
            d,
            f,
            l,
            p = e.buckets.reduce(function (e, t) {
          return e.max > t.max ? e : t;
        }, {
          max: 0
        }),
            g = 0,
            b = y()(e.buckets, function (e) {
          if (n > p.max * r) {
            var t = e.precision;
            void 0 === t && (t = v), i = (e.max * r).toFixed(t);
          } else {
            if (n <= e.max * r && g * r <= n) return e.min = g, e;
            g = e.max;
          }
        });
        return b && (t = n, a = r, c = void 0 !== (o = b).precision ? o.precision : v, u = o.increment * a, s = o.min * a, d = Math.pow(10, c + 2), f = (t * d - s * d) / (u * d), l = Math.floor(f) * u + s, i = (l = Number(l.toFixed(10))).toFixed(c)), i;
      }

      function h(e) {
        if (i.isEmpty(e) || !e.buckets || !Array.isArray(e.buckets)) return !1;
        var t = !0;
        return e.buckets.forEach(function (e) {
          e.max && e.increment || (t = !1);
        }), t;
      }
    },
    44: function _(e, t) {
      e.exports = function (e, t) {
        return {
          enumerable: !(1 & e),
          configurable: !(2 & e),
          writable: !(4 & e),
          value: t
        };
      };
    },
    45: function _(e, t, n) {
      var m = n(27),
          S = n(59),
          A = n(46),
          E = n(39),
          r = n(85);

      e.exports = function (f, e) {
        var l = 1 == f,
            p = 2 == f,
            g = 3 == f,
            b = 4 == f,
            y = 6 == f,
            v = 5 == f || y,
            h = e || r;
        return function (e, t, n) {
          for (var r, i, o = A(e), a = S(o), c = m(t, n, 3), u = E(a.length), s = 0, d = l ? h(e, u) : p ? h(e, 0) : void 0; s < u; s++) {
            if ((v || s in a) && (i = c(r = a[s], s, o), f)) if (l) d[s] = i;else if (i) switch (f) {
              case 3:
                return !0;

              case 5:
                return r;

              case 6:
                return s;

              case 2:
                d.push(r);
            } else if (b) return !1;
          }

          return y ? -1 : g || b ? b : d;
        };
      };
    },
    46: function _(e, t, n) {
      var r = n(38);

      e.exports = function (e) {
        return Object(r(e));
      };
    },
    47: function _(e, t) {
      var n = Math.ceil,
          r = Math.floor;

      e.exports = function (e) {
        return isNaN(e = +e) ? 0 : (0 < e ? r : n)(e);
      };
    },
    48: function _(e, t) {
      var n = 0,
          r = Math.random();

      e.exports = function (e) {
        return "Symbol(".concat(void 0 === e ? "" : e, ")_", (++n + r).toString(36));
      };
    },
    49: function _(e, t, n) {
      var r = n(59),
          i = n(38);

      e.exports = function (e) {
        return r(i(e));
      };
    },
    5: function _(e, t) {
      e.exports = {
        JSON_MAPPING: {
          PL_CODE: "code",
          PL_SIZE: "sizes",
          PL_BIDS: "bids",
          BD_BIDDER: "bidder",
          BD_ID: "paramsd",
          BD_PL_ID: "placementId",
          ADSERVER_TARGETING: "adserverTargeting",
          BD_SETTING_STANDARD: "standard"
        },
        DEBUG_MODE: "pbjs_debug",
        STATUS: {
          GOOD: 1,
          NO_BID: 2
        },
        CB: {
          TYPE: {
            ALL_BIDS_BACK: "allRequestedBidsBack",
            AD_UNIT_BIDS_BACK: "adUnitBidsBack",
            BID_WON: "bidWon",
            REQUEST_BIDS: "requestBids"
          }
        },
        EVENTS: {
          AUCTION_INIT: "auctionInit",
          AUCTION_END: "auctionEnd",
          BID_ADJUSTMENT: "bidAdjustment",
          BID_TIMEOUT: "bidTimeout",
          BID_REQUESTED: "bidRequested",
          BID_RESPONSE: "bidResponse",
          NO_BID: "noBid",
          BID_WON: "bidWon",
          BIDDER_DONE: "bidderDone",
          SET_TARGETING: "setTargeting",
          BEFORE_REQUEST_BIDS: "beforeRequestBids",
          REQUEST_BIDS: "requestBids",
          ADD_AD_UNITS: "addAdUnits",
          AD_RENDER_FAILED: "adRenderFailed"
        },
        AD_RENDER_FAILED_REASON: {
          PREVENT_WRITING_ON_MAIN_DOCUMENT: "preventWritingOnMainDocuemnt",
          NO_AD: "noAd",
          EXCEPTION: "exception",
          CANNOT_FIND_AD: "cannotFindAd",
          MISSING_DOC_OR_ADID: "missingDocOrAdid"
        },
        EVENT_ID_PATHS: {
          bidWon: "adUnitCode"
        },
        GRANULARITY_OPTIONS: {
          LOW: "low",
          MEDIUM: "medium",
          HIGH: "high",
          AUTO: "auto",
          DENSE: "dense",
          CUSTOM: "custom"
        },
        TARGETING_KEYS: {
          BIDDER: "hb_bidder",
          AD_ID: "hb_adid",
          PRICE_BUCKET: "hb_pb",
          SIZE: "hb_size",
          DEAL: "hb_deal",
          SOURCE: "hb_source",
          FORMAT: "hb_format",
          UUID: "hb_uuid",
          CACHE_ID: "hb_cache_id",
          CACHE_HOST: "hb_cache_host"
        },
        NATIVE_KEYS: {
          title: "hb_native_title",
          body: "hb_native_body",
          body2: "hb_native_body2",
          privacyLink: "hb_native_privacy",
          privacyIcon: "hb_native_privicon",
          sponsoredBy: "hb_native_brand",
          image: "hb_native_image",
          icon: "hb_native_icon",
          clickUrl: "hb_native_linkurl",
          displayUrl: "hb_native_displayurl",
          cta: "hb_native_cta",
          rating: "hb_native_rating",
          address: "hb_native_address",
          downloads: "hb_native_downloads",
          likes: "hb_native_likes",
          phone: "hb_native_phone",
          price: "hb_native_price",
          salePrice: "hb_native_saleprice"
        },
        S2S: {
          SRC: "s2s",
          DEFAULT_ENDPOINT: "https://prebid.adnxs.com/pbs/v1/openrtb2/auction",
          SYNCED_BIDDERS_KEY: "pbjsSyncs"
        },
        BID_STATUS: {
          BID_TARGETING_SET: "targetingSet",
          RENDERED: "rendered"
        },
        SUBMODULES_THAT_ALWAYS_REFRESH_ID: {
          parrableId: !0
        }
      };
    },
    50: function _(e, t, n) {
      function m() {
        return this;
      }

      var S = n(61),
          A = n(15),
          E = n(92),
          T = n(21),
          O = n(31),
          I = n(93),
          C = n(52),
          w = n(98),
          j = n(14)("iterator"),
          _ = !([].keys && "next" in [].keys()),
          B = "values";

      e.exports = function (e, t, n, r, i, o, a) {
        I(n, t, r);

        function c(e) {
          if (!_ && e in g) return g[e];

          switch (e) {
            case "keys":
            case B:
              return function () {
                return new n(this, e);
              };
          }

          return function () {
            return new n(this, e);
          };
        }

        var u,
            s,
            d,
            f = t + " Iterator",
            l = i == B,
            p = !1,
            g = e.prototype,
            b = g[j] || g["@@iterator"] || i && g[i],
            y = b || c(i),
            v = i ? l ? c("entries") : y : void 0,
            h = "Array" == t && g.entries || b;
        if (h && (d = w(h.call(new e()))) !== Object.prototype && d.next && (C(d, f, !0), S || "function" == typeof d[j] || T(d, j, m)), l && b && b.name !== B && (p = !0, y = function y() {
          return b.call(this);
        }), S && !a || !_ && !p && g[j] || T(g, j, y), O[t] = y, O[f] = m, i) if (u = {
          values: l ? y : c(B),
          keys: o ? y : c("keys"),
          entries: v
        }, a) for (s in u) {
          s in g || E(g, s, u[s]);
        } else A(A.P + A.F * (_ || p), t, u);
        return u;
      };
    },
    51: function _(e, t, n) {
      var r = n(60)("keys"),
          i = n(48);

      e.exports = function (e) {
        return r[e] || (r[e] = i(e));
      };
    },
    52: function _(e, t, n) {
      var r = n(20).f,
          i = n(30),
          o = n(14)("toStringTag");

      e.exports = function (e, t, n) {
        e && !i(e = n ? e : e.prototype, o) && r(e, o, {
          configurable: !0,
          value: t
        });
      };
    },
    53: function _(e, t, n) {
      n.d(t, "a", function () {
        return o;
      });
      var r = n(0),
          c = {};

      function i(e, t, n) {
        var r,
            i,
            o,
            a = (i = n, o = c[r = e] = c[r] || {
          bidders: {}
        }, i ? o.bidders[i] = o.bidders[i] || {} : o);
        return a[t] = (a[t] || 0) + 1, a[t];
      }

      var o = {
        incrementRequestsCounter: function incrementRequestsCounter(e) {
          return i(e, "requestsCounter");
        },
        incrementBidderRequestsCounter: function incrementBidderRequestsCounter(e, t) {
          return i(e, "requestsCounter", t);
        },
        incrementBidderWinsCounter: function incrementBidderWinsCounter(e, t) {
          return i(e, "winsCounter", t);
        },
        getRequestsCounter: function getRequestsCounter(e) {
          return Object(r.deepAccess)(c, "".concat(e, ".requestsCounter")) || 0;
        },
        getBidderRequestsCounter: function getBidderRequestsCounter(e, t) {
          return Object(r.deepAccess)(c, "".concat(e, ".bidders.").concat(t, ".requestsCounter")) || 0;
        },
        getBidderWinsCounter: function getBidderWinsCounter(e, t) {
          return Object(r.deepAccess)(c, "".concat(e, ".bidders.").concat(t, ".winsCounter")) || 0;
        }
      };
    },
    54: function _(e, t, n) {
      n(170), e.exports = n(16).Array.findIndex;
    },
    55: function _(e, t, n) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), n.d(t, "adUnitSetupChecks", function () {
        return F;
      }), n.d(t, "checkAdUnitSetup", function () {
        return z;
      });
      var r = n(18),
          i = n(0),
          o = n(173),
          a = n(33),
          d = n(3),
          v = n(25),
          f = n(35),
          c = n(13),
          u = n(174),
          s = n(11),
          l = n.n(s),
          p = n(53),
          h = n(10),
          g = n(24);

      function b(e) {
        return (b = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
          return _typeof4(e);
        } : function (e) {
          return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof4(e);
        })(e);
      }

      function y() {
        return (y = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];

            for (var r in n) {
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      var m = Object(r.a)(),
          S = n(5),
          A = n(0),
          E = n(7)["default"],
          T = n(8),
          O = a.a.triggerUserSyncs,
          I = S.EVENTS,
          C = I.ADD_AD_UNITS,
          w = I.BID_WON,
          j = I.REQUEST_BIDS,
          _ = I.SET_TARGETING,
          B = I.AD_RENDER_FAILED,
          U = S.AD_RENDER_FAILED_REASON,
          R = U.PREVENT_WRITING_ON_MAIN_DOCUMENT,
          D = U.NO_AD,
          k = U.EXCEPTION,
          N = U.CANNOT_FIND_AD,
          x = U.MISSING_DOC_OR_ADID,
          P = {
        bidWon: function bidWon(e) {
          var t = v.a.getBidsRequested().map(function (e) {
            return e.bids.map(function (e) {
              return e.adUnitCode;
            });
          }).reduce(i.flatten).filter(i.uniques);
          return !!A.contains(t, e) || void A.logError('The "' + e + '" placement is not defined.');
        }
      };

      function M(e, t, n) {
        e.defaultView && e.defaultView.frameElement && (e.defaultView.frameElement.width = t, e.defaultView.frameElement.height = n);
      }

      function q(e, t) {
        var n = [];
        return A.isArray(e) && (t ? e.length === t : 0 < e.length) && (e.every(function (e) {
          return Object(i.isArrayOfNums)(e, 2);
        }) ? n = e : Object(i.isArrayOfNums)(e, 2) && n.push(e)), n;
      }

      function G(e) {
        var t = e.mediaTypes.banner,
            n = q(t.sizes);
        0 < n.length ? (t.sizes = n, e.sizes = n) : (A.logError("Detected a mediaTypes.banner object without a proper sizes field.  Please ensure the sizes are listed like: [[300, 250], ...].  Removing invalid mediaTypes.banner object from request."), delete e.mediaTypes.banner);
      }

      function W(e) {
        var t = e.mediaTypes.video,
            n = "number" == typeof t.playerSize[0] ? 2 : 1,
            r = q(t.playerSize, n);
        0 < r.length ? (2 == n && A.logInfo("Transforming video.playerSize from [640,480] to [[640,480]] so it's in the proper format."), t.playerSize = r, e.sizes = r) : (A.logError("Detected incorrect configuration of mediaTypes.video.playerSize.  Please specify only one set of dimensions in a format like: [[640, 480]]. Removing invalid mediaTypes.video.playerSize property from request."), delete e.mediaTypes.video.playerSize);
      }

      function L(e) {
        var t = e.mediaTypes["native"];
        t.image && t.image.sizes && !Array.isArray(t.image.sizes) && (A.logError("Please use an array of sizes for native.image.sizes field.  Removing invalid mediaTypes.native.image.sizes property from request."), delete e.mediaTypes["native"].image.sizes), t.image && t.image.aspect_ratios && !Array.isArray(t.image.aspect_ratios) && (A.logError("Please use an array of sizes for native.image.aspect_ratios field.  Removing invalid mediaTypes.native.image.aspect_ratios property from request."), delete e.mediaTypes["native"].image.aspect_ratios), t.icon && t.icon.sizes && !Array.isArray(t.icon.sizes) && (A.logError("Please use an array of sizes for native.icon.sizes field.  Removing invalid mediaTypes.native.icon.sizes property from request."), delete e.mediaTypes["native"].icon.sizes);
      }

      Object(u.a)(), m.bidderSettings = m.bidderSettings || {}, m.libLoaded = !0, m.version = "v3.13.0-pre", A.logInfo("Prebid.js v3.13.0-pre loaded"), m.adUnits = m.adUnits || [], m.triggerUserSyncs = O;
      var F = {
        validateBannerMediaType: G,
        validateVideoMediaType: W,
        validateNativeMediaType: L,
        validateSizes: q
      },
          z = Object(c.b)("sync", function (e) {
        return e.filter(function (e) {
          var t = e.mediaTypes;
          return t && 0 !== Object.keys(t).length ? (t.banner && G(e), t.video && t.video.playerSize && W(e), t["native"] && L(e), !0) : (A.logError("Detected adUnit.code '".concat(e.code, "' did not have a 'mediaTypes' object defined.  This is a required field for the auction, so this adUnit has been removed.")), !1);
        });
      }, "checkAdUnitSetup");

      function V(e) {
        var n = v.a[e]().filter(A.bind.call(i.adUnitsFilter, this, v.a.getAdUnitCodes())),
            r = v.a.getLastAuctionId();
        return n.map(function (e) {
          return e.adUnitCode;
        }).filter(i.uniques).map(function (t) {
          return n.filter(function (e) {
            return e.auctionId === r && e.adUnitCode === t;
          });
        }).filter(function (e) {
          return e && e[0] && e[0].adUnitCode;
        }).map(function (e) {
          return t = {}, n = e[0].adUnitCode, r = {
            bids: e
          }, n in t ? Object.defineProperty(t, n, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
          }) : t[n] = r, t;
          var t, n, r;
        }).reduce(function (e, t) {
          return y(e, t);
        }, {});
      }

      function H(e) {
        var t = e.reason,
            n = e.message,
            r = e.bid,
            i = e.id,
            o = {
          reason: t,
          message: n
        };
        r && (o.bid = r), i && (o.adId = i), A.logError(n), T.emit(B, o);
      }

      function K(e) {
        e.forEach(function (e) {
          if (void 0 === e.called) try {
            e.call(), e.called = !0;
          } catch (e) {
            A.logError("Error processing command :", "prebid.js", e);
          }
        });
      }

      m.getAdserverTargetingForAdUnitCodeStr = function (e) {
        if (A.logInfo("Invoking pbjs.getAdserverTargetingForAdUnitCodeStr", arguments), e) {
          var t = m.getAdserverTargetingForAdUnitCode(e);
          return A.transformAdServerTargetingObj(t);
        }

        A.logMessage("Need to call getAdserverTargetingForAdUnitCodeStr with adunitCode");
      }, m.getAdserverTargetingForAdUnitCode = function (e) {
        return m.getAdserverTargeting(e)[e];
      }, m.getAdserverTargeting = function (e) {
        return A.logInfo("Invoking pbjs.getAdserverTargeting", arguments), f.a.getAllTargeting(e);
      }, m.getNoBids = function () {
        return A.logInfo("Invoking pbjs.getNoBids", arguments), V("getNoBids");
      }, m.getBidResponses = function () {
        return A.logInfo("Invoking pbjs.getBidResponses", arguments), V("getBidsReceived");
      }, m.getBidResponsesForAdUnitCode = function (t) {
        return {
          bids: v.a.getBidsReceived().filter(function (e) {
            return e.adUnitCode === t;
          })
        };
      }, m.setTargetingForGPTAsync = function (e, t) {
        var n;
        A.logInfo("Invoking pbjs.setTargetingForGPTAsync", arguments), Object(i.isGptPubadsDefined)() ? (n = f.a.getAllTargeting(e), f.a.resetPresetTargeting(e), f.a.setTargetingForGPT(n, t), Object.keys(n).forEach(function (t) {
          Object.keys(n[t]).forEach(function (e) {
            "hb_adid" === e && v.a.setStatusForBids(n[t][e], S.BID_STATUS.BID_TARGETING_SET);
          });
        }), T.emit(_, n)) : A.logError("window.googletag is not defined on the page");
      }, m.setTargetingForAst = function (e) {
        A.logInfo("Invoking pbjs.setTargetingForAn", arguments), f.a.isApntagDefined() ? (f.a.setTargetingForAst(e), T.emit(_, f.a.getAllTargeting())) : A.logError("window.apntag is not defined on the page");
      }, m.renderAd = function (e, t) {
        if (A.logInfo("Invoking pbjs.renderAd", arguments), A.logMessage("Calling renderAd with adId :" + t), e && t) try {
          var n,
              r,
              i,
              o,
              a,
              c,
              u,
              s,
              d,
              f,
              l,
              p,
              g = v.a.findBidByAdId(t);
          g ? (g.ad = A.replaceAuctionPrice(g.ad, g.cpm), g.adUrl = A.replaceAuctionPrice(g.adUrl, g.cpm), v.a.addWinningBid(g), T.emit(w, g), n = g.height, r = g.width, i = g.ad, o = g.mediaType, a = g.adUrl, c = g.renderer, u = document.createComment("Creative ".concat(g.creativeId, " served by ").concat(g.bidder, " Prebid.js Header Bidding")), A.insertElement(u, e, "body"), Object(h.c)(c) ? Object(h.b)(c, g) : e === document && !A.inIframe() || "video" === o ? (s = "Error trying to write ad. Ad render call ad id ".concat(t, " was prevented from writing to the main document."), H({
            reason: R,
            message: s,
            bid: g,
            id: t
          })) : i ? (navigator.userAgent && -1 < navigator.userAgent.toLowerCase().indexOf("firefox/") && (d = navigator.userAgent.toLowerCase().match(/firefox\/([\d\.]+)/)[1]) && parseInt(d, 10) < 67 && e.open("text/html", "replace"), e.write(i), e.close(), M(e, r, n), A.callBurl(g)) : a ? ((f = A.createInvisibleIframe()).height = n, f.width = r, f.style.display = "inline", f.style.overflow = "hidden", f.src = a, A.insertElement(f, e, "body"), M(e, r, n), A.callBurl(g)) : (l = "Error trying to write ad. No ad for bid response id: ".concat(t), H({
            reason: D,
            message: l,
            bid: g,
            id: t
          }))) : (p = "Error trying to write ad. Cannot find ad by given id : ".concat(t), H({
            reason: N,
            message: p,
            id: t
          }));
        } catch (e) {
          var b = "Error trying to write ad Id :".concat(t, " to the page:").concat(e.message);
          H({
            reason: k,
            message: b,
            id: t
          });
        } else {
          var y = "Error trying to write ad Id :".concat(t, " to the page. Missing document or adId");
          H({
            reason: x,
            message: y,
            id: t
          });
        }
      }, m.removeAdUnit = function (e) {
        A.logInfo("Invoking pbjs.removeAdUnit", arguments), e ? (A.isArray(e) ? e : [e]).forEach(function (e) {
          for (var t = m.adUnits.length - 1; 0 <= t; t--) {
            m.adUnits[t].code === e && m.adUnits.splice(t, 1);
          }
        }) : m.adUnits = [];
      }, m.requestBids = Object(c.b)("async", function () {
        var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.bidsBackHandler,
            n = e.timeout,
            r = e.adUnits,
            i = e.adUnitCodes,
            o = e.labels,
            a = e.auctionId;
        T.emit(j);
        var c = n || d.b.getConfig("bidderTimeout"),
            r = r || m.adUnits;

        if (A.logInfo("Invoking pbjs.requestBids", arguments), i && i.length ? r = r.filter(function (e) {
          return l()(i, e.code);
        }) : i = r && r.map(function (e) {
          return e.code;
        }), (r = z(r)).forEach(function (i) {
          var o = Object.keys(i.mediaTypes || {
            banner: "banner"
          }),
              e = i.bids.map(function (e) {
            return e.bidder;
          }),
              a = E.bidderRegistry,
              t = d.b.getConfig("s2sConfig"),
              n = t && t.bidders,
              r = n ? e.filter(function (e) {
            return !l()(n, e);
          }) : e;
          i.transactionId = A.generateUUID(), r.forEach(function (t) {
            var e = a[t],
                n = e && e.getSpec && e.getSpec(),
                r = n && n.supportedMediaTypes || ["banner"];
            o.some(function (e) {
              return l()(r, e);
            }) ? p.a.incrementBidderRequestsCounter(i.code, t) : (A.logWarn(A.unsupportedBidderMessage(i, t)), i.bids = i.bids.filter(function (e) {
              return e.bidder !== t;
            }));
          }), p.a.incrementRequestsCounter(i.code);
        }), r && 0 !== r.length) {
          var u = v.a.createAuction({
            adUnits: r,
            adUnitCodes: i,
            callback: t,
            cbTimeout: c,
            labels: o,
            auctionId: a
          }),
              s = r.length;
          return 15 < s && A.logInfo("Current auction ".concat(u.getAuctionId(), " contains ").concat(s, " adUnits."), r), i.forEach(function (e) {
            return f.a.setLatestAuctionForAdUnit(e, u.getAuctionId());
          }), u.callBids(), u;
        }

        if (A.logMessage("No adUnits configured. No bids requested."), "function" == typeof t) try {
          t();
        } catch (e) {
          A.logError("Error executing bidsBackHandler", null, e);
        }
      }), m.addAdUnits = function (e) {
        A.logInfo("Invoking pbjs.addAdUnits", arguments), A.isArray(e) ? m.adUnits.push.apply(m.adUnits, e) : "object" === b(e) && m.adUnits.push(e), T.emit(C);
      }, m.onEvent = function (e, t, n) {
        A.logInfo("Invoking pbjs.onEvent", arguments), A.isFn(t) ? !n || P[e].call(null, n) ? T.on(e, t, n) : A.logError('The id provided is not valid for event "' + e + '" and no handler was set.') : A.logError('The event handler provided is not a function and was not set on event "' + e + '".');
      }, m.offEvent = function (e, t, n) {
        A.logInfo("Invoking pbjs.offEvent", arguments), n && !P[e].call(null, n) || T.off(e, t, n);
      }, m.registerBidAdapter = function (e, t) {
        A.logInfo("Invoking pbjs.registerBidAdapter", arguments);

        try {
          E.registerBidAdapter(e(), t);
        } catch (e) {
          A.logError("Error registering bidder adapter : " + e.message);
        }
      }, m.registerAnalyticsAdapter = function (e) {
        A.logInfo("Invoking pbjs.registerAnalyticsAdapter", arguments);

        try {
          E.registerAnalyticsAdapter(e);
        } catch (e) {
          A.logError("Error registering analytics adapter : " + e.message);
        }
      }, m.createBid = function (e) {
        return A.logInfo("Invoking pbjs.createBid", arguments), Object(g.a)(e);
      }, m.enableAnalytics = function (e) {
        e && !A.isEmpty(e) ? (A.logInfo("Invoking pbjs.enableAnalytics for: ", e), E.enableAnalytics(e)) : A.logError("pbjs.enableAnalytics should be called with option {}");
      }, m.aliasBidder = function (e, t) {
        A.logInfo("Invoking pbjs.aliasBidder", arguments), e && t ? E.aliasBidAdapter(e, t) : A.logError("bidderCode and alias must be passed as arguments", "pbjs.aliasBidder");
      }, m.getAllWinningBids = function () {
        return v.a.getAllWinningBids();
      }, m.getAllPrebidWinningBids = function () {
        return v.a.getBidsReceived().filter(function (e) {
          return e.status === S.BID_STATUS.BID_TARGETING_SET;
        });
      }, m.getHighestCpmBids = function (e) {
        return f.a.getWinningBids(e);
      }, m.markWinningBidAsUsed = function (t) {
        var e = [];
        t.adUnitCode && t.adId ? e = v.a.getBidsReceived().filter(function (e) {
          return e.adId === t.adId && e.adUnitCode === t.adUnitCode;
        }) : t.adUnitCode ? e = f.a.getWinningBids(t.adUnitCode) : t.adId ? e = v.a.getBidsReceived().filter(function (e) {
          return e.adId === t.adId;
        }) : A.logWarn("Inproper usage of markWinningBidAsUsed. It'll need an adUnitCode and/or adId to function."), 0 < e.length && (e[0].status = S.BID_STATUS.RENDERED);
      }, m.getConfig = d.b.getConfig, m.setConfig = d.b.setConfig, m.setBidderConfig = d.b.setBidderConfig, m.que.push(function () {
        return Object(o.a)();
      }), m.cmd.push = function (e) {
        if ("function" == typeof e) try {
          e.call();
        } catch (e) {
          A.logError("Error processing command :", e.message, e.stack);
        } else A.logError("Commands written into pbjs.cmd.push must be wrapped in a function");
      }, m.que.push = m.cmd.push, m.processQueue = function () {
        c.b.ready(), K(m.que), K(m.cmd);
      }, t["default"] = m;
    },
    56: function _(e, t, n) {
      t.a = function (t, n) {
        o.adServers = o.adServers || {}, o.adServers[t] = o.adServers[t] || {}, Object.keys(n).forEach(function (e) {
          o.adServers[t][e] ? Object(i.logWarn)("Attempting to add an already registered function property ".concat(e, " for AdServer ").concat(t, ".")) : o.adServers[t][e] = n[e];
        });
      };

      var r = n(18),
          i = n(0),
          o = Object(r.a)();
    },
    57: function _(e, t) {
      e.exports = function (e) {
        if ("function" != typeof e) throw TypeError(e + " is not a function!");
        return e;
      };
    },
    58: function _(e, t, n) {
      var r = n(17),
          i = n(19).document,
          o = r(i) && r(i.createElement);

      e.exports = function (e) {
        return o ? i.createElement(e) : {};
      };
    },
    59: function _(e, t, n) {
      var r = n(37);
      e.exports = Object("z").propertyIsEnumerable(0) ? Object : function (e) {
        return "String" == r(e) ? e.split("") : Object(e);
      };
    },
    60: function _(e, t, n) {
      var r = n(16),
          i = n(19),
          o = "__core-js_shared__",
          a = i[o] || (i[o] = {});
      (e.exports = function (e, t) {
        return a[e] || (a[e] = void 0 !== t ? t : {});
      })("versions", []).push({
        version: r.version,
        mode: n(61) ? "pure" : "global",
        copyright: "© 2019 Denis Pushkarev (zloirock.ru)"
      });
    },
    61: function _(e, t) {
      e.exports = !0;
    },
    62: function _(e, t, n) {
      var u = n(49),
          s = n(39),
          d = n(89);

      e.exports = function (c) {
        return function (e, t, n) {
          var r,
              i = u(e),
              o = s(i.length),
              a = d(n, o);

          if (c && t != t) {
            for (; a < o;) {
              if ((r = i[a++]) != r) return !0;
            }
          } else for (; a < o; a++) {
            if ((c || a in i) && i[a] === t) return c || a || 0;
          }

          return !c && -1;
        };
      };
    },
    63: function _(e, t, n) {
      n(90), n(64), n(99), n(101), n(105), n(108), n(110), e.exports = n(16).Set;
    },
    64: function _(e, t, n) {
      var r = n(91)(!0);
      n(50)(String, "String", function (e) {
        this._t = String(e), this._i = 0;
      }, function () {
        var e,
            t = this._t,
            n = this._i;
        return n >= t.length ? {
          value: void 0,
          done: !0
        } : (e = r(t, n), this._i += e.length, {
          value: e,
          done: !1
        });
      });
    },
    65: function _(e, t, r) {
      function i() {}

      var o = r(29),
          a = r(94),
          c = r(66),
          u = r(51)("IE_PROTO"),
          s = "prototype",
          _d = function d() {
        var e,
            t = r(58)("iframe"),
            n = c.length;

        for (t.style.display = "none", r(97).appendChild(t), t.src = "javascript:", (e = t.contentWindow.document).open(), e.write("<script>document.F=Object<\/script>"), e.close(), _d = e.F; n--;) {
          delete _d[s][c[n]];
        }

        return _d();
      };

      e.exports = Object.create || function (e, t) {
        var n;
        return null !== e ? (i[s] = o(e), n = new i(), i[s] = null, n[u] = e) : n = _d(), void 0 === t ? n : a(n, t);
      };
    },
    66: function _(e, t) {
      e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
    },
    67: function _(e, t) {
      e.exports = function (e, t) {
        return {
          value: t,
          done: !!e
        };
      };
    },
    68: function _(e, t, n) {
      var i = n(21);

      e.exports = function (e, t, n) {
        for (var r in t) {
          n && e[r] ? e[r] = t[r] : i(e, r, t[r]);
        }

        return e;
      };
    },
    681: function _(e, t, n) {
      e.exports = n(55);
    },
    69: function _(e, t) {
      e.exports = function (e, t, n, r) {
        if (!(e instanceof t) || void 0 !== r && r in e) throw TypeError(n + ": incorrect invocation!");
        return e;
      };
    },
    7: function _(e, t, n) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), n.d(t, "gdprDataHandler", function () {
        return R;
      }), n.d(t, "uspDataHandler", function () {
        return D;
      }), t.setS2STestingModule = function (e) {
        I = e;
      };
      var S = n(0),
          p = n(78),
          g = n(23),
          d = n(1),
          h = n(4),
          A = n(3),
          r = n(13),
          i = n(11),
          E = n.n(i),
          o = n(12),
          T = n.n(o),
          b = n(53),
          O = n(32);

      function m(e, t) {
        return function (e) {
          if (Array.isArray(e)) return e;
        }(e) || function (e, t) {
          if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e))) return;
          var n = [],
              r = !0,
              i = !1,
              o = void 0;

          try {
            for (var a, c = e[Symbol.iterator](); !(r = (a = c.next()).done) && (n.push(a.value), !t || n.length !== t); r = !0) {
              ;
            }
          } catch (e) {
            i = !0, o = e;
          } finally {
            try {
              r || null == c["return"] || c["return"]();
            } finally {
              if (i) throw o;
            }
          }

          return n;
        }(e, t) || function (e, t) {
          if (!e) return;
          if ("string" == typeof e) return a(e, t);
          var n = Object.prototype.toString.call(e).slice(8, -1);
          "Object" === n && e.constructor && (n = e.constructor.name);
          if ("Map" === n || "Set" === n) return Array.from(e);
          if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return a(e, t);
        }(e, t) || function () {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function a(e, t) {
        (null == t || t > e.length) && (t = e.length);

        for (var n = 0, r = new Array(t); n < t; n++) {
          r[n] = e[n];
        }

        return r;
      }

      function y() {
        return (y = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];

            for (var r in n) {
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      var I,
          C = n(0),
          w = n(5),
          j = n(8),
          f = {},
          _ = f.bidderRegistry = {},
          l = f.aliasRegistry = {},
          B = {};

      A.b.getConfig("s2sConfig", function (e) {
        B = e.s2sConfig;
      });
      var c = {};
      var U = Object(r.b)("sync", function (e) {
        var i = e.bidderCode,
            s = e.auctionId,
            d = e.bidderRequestId,
            t = e.adUnits,
            f = e.labels,
            l = e.src;
        return t.reduce(function (e, c) {
          var t = Object(p.b)(Object(p.a)(c, f), c.mediaTypes, c.sizes),
              n = t.active,
              u = t.mediaTypes,
              r = t.filterResults;
          return n ? r && C.logInfo('Size mapping filtered adUnit "'.concat(c.code, '" banner sizes from '), r.before, "to ", r.after) : C.logInfo('Size mapping disabled adUnit "'.concat(c.code, '"')), n && e.push(c.bids.filter(function (e) {
            return e.bidder === i;
          }).reduce(function (e, t) {
            var n = c.nativeParams || C.deepAccess(c, "mediaTypes.native");
            n && (t = y({}, t, {
              nativeParams: Object(g.g)(n)
            })), t = y({}, t, Object(S.getDefinedParams)(c, ["fpd", "mediaType", "renderer", "storedAuctionResponse"]));
            var r = Object(p.b)(Object(p.a)(t, f), u),
                i = r.active,
                o = r.mediaTypes,
                a = r.filterResults;
            return i ? a && C.logInfo('Size mapping filtered adUnit "'.concat(c.code, '" bidder "').concat(t.bidder, '" banner sizes from '), a.before, "to ", a.after) : C.logInfo('Size mapping deactivated adUnit "'.concat(c.code, '" bidder "').concat(t.bidder, '"')), C.isValidMediaTypes(o) ? t = y({}, t, {
              mediaTypes: o
            }) : C.logError("mediaTypes is not correctly configured for adunit ".concat(c.code)), i && e.push(y({}, t, {
              adUnitCode: c.code,
              transactionId: c.transactionId,
              sizes: C.deepAccess(o, "banner.sizes") || C.deepAccess(o, "video.playerSize") || [],
              bidId: t.bid_id || C.getUniqueIdentifierStr(),
              bidderRequestId: d,
              auctionId: s,
              src: l,
              bidRequestsCount: b.a.getRequestsCounter(c.code),
              bidderRequestsCount: b.a.getBidderRequestsCounter(c.code, t.bidder),
              bidderWinsCount: b.a.getBidderWinsCounter(c.code, t.bidder)
            })), e;
          }, [])), e;
        }, []).reduce(S.flatten, []).filter(function (e) {
          return "" !== e;
        });
      }, "getBids");
      var R = {
        consentData: null,
        setConsentData: function setConsentData(e) {
          R.consentData = e;
        },
        getConsentData: function getConsentData() {
          return R.consentData;
        }
      },
          D = {
        consentData: null,
        setConsentData: function setConsentData(e) {
          D.consentData = e;
        },
        getConsentData: function getConsentData() {
          return D.consentData;
        }
      };

      function k() {
        return B && B.enabled && B.testing && I;
      }

      function u(t, n, e) {
        try {
          var r = _[t].getSpec();

          r && r[n] && "function" == typeof r[n] && (C.logInfo("Invoking ".concat(t, ".").concat(n)), A.b.runWithBidder(t, S.bind.call(r[n], r, e)));
        } catch (e) {
          C.logWarn("Error calling ".concat(n, " of ").concat(t));
        }
      }

      f.makeBidRequests = Object(r.b)("sync", function (e, i, o, a, c) {
        j.emit(w.EVENTS.BEFORE_REQUEST_BIDS, e);
        var u = [],
            t = Object(S.getBidderCodes)(e);
        A.b.getConfig("bidderSequence") === A.a && (t = Object(S.shuffle)(t));
        var n,
            r,
            s,
            d,
            f,
            l,
            p,
            g = Object(O.b)(),
            b = t,
            y = [];
        B.enabled && (k() && (y = I.getSourceBidderMap(e)[I.CLIENT]), n = B.bidders, b = t.filter(function (e) {
          return !E()(n, e) || E()(y, e);
        }), Boolean(k() && B.testServerOnly) && (p = e, Boolean(T()(p, function (e) {
          return T()(e.bids, function (e) {
            return (e.bidSource || B.bidderControl && B.bidderControl[e.bidder]) && e.finalSource === I.SERVER;
          });
        }))) && (b.length = 0), d = e, f = B.bidders, (l = C.deepClone(d)).forEach(function (e) {
          e.bids = e.bids.filter(function (e) {
            return E()(f, e.bidder) && (!k() || e.finalSource !== I.CLIENT);
          }).map(function (e) {
            return e.bid_id = C.getUniqueIdentifierStr(), e;
          });
        }), r = l = l.filter(function (e) {
          return 0 !== e.bids.length;
        }), s = C.generateUUID(), n.forEach(function (e) {
          var t = C.getUniqueIdentifierStr(),
              n = {
            bidderCode: e,
            auctionId: o,
            bidderRequestId: t,
            tid: s,
            bids: U({
              bidderCode: e,
              auctionId: o,
              bidderRequestId: t,
              adUnits: C.deepClone(r),
              labels: c,
              src: w.S2S.SRC
            }),
            auctionStart: i,
            timeout: B.timeout,
            src: w.S2S.SRC,
            refererInfo: g
          };
          0 !== n.bids.length && u.push(n);
        }), r.forEach(function (e) {
          var t = e.bids.filter(function (t) {
            return T()(u, function (e) {
              return T()(e.bids, function (e) {
                return e.bidId === t.bid_id;
              });
            });
          });
          e.bids = t;
        }), u.forEach(function (e) {
          e.adUnitsS2SCopy = r.filter(function (e) {
            return 0 < e.bids.length;
          });
        }));
        var v,
            h,
            m = (v = e, (h = C.deepClone(v)).forEach(function (e) {
          e.bids = e.bids.filter(function (e) {
            return !k() || e.finalSource !== I.SERVER;
          });
        }), h = h.filter(function (e) {
          return 0 !== e.bids.length;
        }));
        return b.forEach(function (e) {
          var t = C.getUniqueIdentifierStr(),
              n = {
            bidderCode: e,
            auctionId: o,
            bidderRequestId: t,
            bids: U({
              bidderCode: e,
              auctionId: o,
              bidderRequestId: t,
              adUnits: C.deepClone(m),
              labels: c,
              src: "client"
            }),
            auctionStart: i,
            timeout: a,
            refererInfo: g
          },
              r = _[e];
          r || C.logError("Trying to make a request for bidder that does not exist: ".concat(e)), r && n.bids && 0 !== n.bids.length && u.push(n);
        }), R.getConsentData() && u.forEach(function (e) {
          e.gdprConsent = R.getConsentData();
        }), D.getConsentData() && u.forEach(function (e) {
          e.uspConsent = D.getConsentData();
        }), u;
      }, "makeBidRequests"), f.callBids = function (e, t, r, i, o, a, c) {
        var n, u, s, d, f, l, p, g, b, y, v;
        t.length ? (u = (n = m(t.reduce(function (e, t) {
          return e[Number(void 0 !== t.src && t.src === w.S2S.SRC)].push(t), e;
        }, [[], []]), 2))[0], (s = n[1]).length && (d = Object(h.b)(a, o ? {
          request: o.request.bind(null, "s2s"),
          done: o.done
        } : void 0), f = B.bidders, l = _[B.adapter], p = s[0].tid, g = s[0].adUnitsS2SCopy, l ? (b = {
          tid: p,
          ad_units: g
        }).ad_units.length && (y = s.map(function (e) {
          return e.start = Object(S.timestamp)(), i.bind(e);
        }), v = b.ad_units.reduce(function (e, t) {
          return e.concat((t.bids || []).reduce(function (e, t) {
            return e.concat(t.bidder);
          }, []));
        }, []), C.logMessage("CALLING S2S HEADER BIDDERS ==== ".concat(f.filter(function (e) {
          return E()(v, e);
        }).join(","))), s.forEach(function (e) {
          j.emit(w.EVENTS.BID_REQUESTED, e);
        }), l.callBids(b, s, function (e, t) {
          var n = Object(S.getBidderRequest)(s, t.bidderCode, e);
          n && r.call(n, e, t);
        }, function () {
          return y.forEach(function (e) {
            return e();
          });
        }, d)) : C.logError("missing " + B.adapter)), u.forEach(function (e) {
          e.start = Object(S.timestamp)();
          var t = _[e.bidderCode];
          C.logMessage("CALLING BIDDER ======= ".concat(e.bidderCode)), j.emit(w.EVENTS.BID_REQUESTED, e);
          var n = Object(h.b)(a, o ? {
            request: o.request.bind(null, e.bidderCode),
            done: o.done
          } : void 0);
          A.b.runWithBidder(e.bidderCode, S.bind.call(t.callBids, t, e, r.bind(e), i.bind(e), n, c, A.b.callbackWithBidder(e.bidderCode)));
        })) : C.logWarn("callBids executed with no bidRequests.  Were they filtered by labels or sizing?");
      }, f.videoAdapters = [], f.registerBidAdapter = function (e, t) {
        var n = (2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {}).supportedMediaTypes,
            r = void 0 === n ? [] : n;
        e && t ? "function" == typeof e.callBids ? (_[t] = e, E()(r, "video") && f.videoAdapters.push(t), E()(r, "native") && g.e.push(t)) : C.logError("Bidder adaptor error for bidder code: " + t + "bidder must implement a callBids() function") : C.logError("bidAdaptor or bidderCode not specified");
      }, f.aliasBidAdapter = function (t, e) {
        var n, r;

        if (void 0 === _[e]) {
          var i = _[t];

          if (void 0 === i) {
            var o = A.b.getConfig("s2sConfig"),
                a = o && o.bidders;
            a && E()(a, e) ? l[e] = t : C.logError('bidderCode "' + t + '" is not an existing bidder.', "adapterManager.aliasBidAdapter");
          } else try {
            var c,
                u,
                s = (n = t, r = [], E()(f.videoAdapters, n) && r.push("video"), E()(g.e, n) && r.push("native"), r);
            i.constructor.prototype != Object.prototype ? (u = new i.constructor()).setBidderCode(e) : (c = i.getSpec(), u = Object(d.newBidder)(y({}, c, {
              code: e
            })), l[e] = t), f.registerBidAdapter(u, e, {
              supportedMediaTypes: s
            });
          } catch (e) {
            C.logError(t + " bidder does not currently support aliasing.", "adapterManager.aliasBidAdapter");
          }
        } else C.logMessage('alias name "' + e + '" has been already specified.');
      }, f.registerAnalyticsAdapter = function (e) {
        var t = e.adapter,
            n = e.code;
        t && n ? "function" == typeof t.enableAnalytics ? (t.code = n, c[n] = t) : C.logError('Prebid Error: Analytics adaptor error for analytics "'.concat(n, '"\n        analytics adapter must implement an enableAnalytics() function')) : C.logError("Prebid Error: analyticsAdapter or analyticsCode not specified");
      }, f.enableAnalytics = function (e) {
        C.isArray(e) || (e = [e]), C._each(e, function (e) {
          var t = c[e.provider];
          t ? t.enableAnalytics(e) : C.logError("Prebid Error: no analytics adapter found in registry for\n        ".concat(e.provider, "."));
        });
      }, f.getBidAdapter = function (e) {
        return _[e];
      }, f.callTimedOutBidders = function (t, n, r) {
        n = n.map(function (e) {
          return e.params = C.getUserConfiguredParams(t, e.adUnitCode, e.bidder), e.timeout = r, e;
        }), n = C.groupBy(n, "bidder"), Object.keys(n).forEach(function (e) {
          u(e, "onTimeout", n[e]);
        });
      }, f.callBidWonBidder = function (e, t, n) {
        t.params = C.getUserConfiguredParams(n, t.adUnitCode, t.bidder), b.a.incrementBidderWinsCounter(t.adUnitCode, t.bidder), u(e, "onBidWon", t);
      }, f.callSetTargetingBidder = function (e, t) {
        u(e, "onSetTargeting", t);
      }, t["default"] = f;
    },
    70: function _(e, t, n) {
      var o = n(29);

      e.exports = function (t, e, n, r) {
        try {
          return r ? e(o(n)[0], n[1]) : e(n);
        } catch (e) {
          var i = t["return"];
          throw void 0 !== i && o(i.call(t)), e;
        }
      };
    },
    71: function _(e, t, n) {
      var r = n(31),
          i = n(14)("iterator"),
          o = Array.prototype;

      e.exports = function (e) {
        return void 0 !== e && (r.Array === e || o[i] === e);
      };
    },
    72: function _(e, t, n) {
      var r = n(73),
          i = n(14)("iterator"),
          o = n(31);

      e.exports = n(16).getIteratorMethod = function (e) {
        if (null != e) return e[i] || e["@@iterator"] || o[r(e)];
      };
    },
    73: function _(e, t, n) {
      var i = n(37),
          o = n(14)("toStringTag"),
          a = "Arguments" == i(function () {
        return arguments;
      }());

      e.exports = function (e) {
        var t, n, r;
        return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof (n = function (e, t) {
          try {
            return e[t];
          } catch (e) {}
        }(t = Object(e), o)) ? n : a ? i(t) : "Object" == (r = i(t)) && "function" == typeof t.callee ? "Arguments" : r;
      };
    },
    74: function _(e, t, n) {
      function r(e) {
        c(e, i, {
          value: {
            i: "O" + ++u,
            w: {}
          }
        });
      }

      var i = n(48)("meta"),
          o = n(17),
          a = n(30),
          c = n(20).f,
          u = 0,
          s = Object.isExtensible || function () {
        return !0;
      },
          d = !n(36)(function () {
        return s(Object.preventExtensions({}));
      }),
          f = e.exports = {
        KEY: i,
        NEED: !1,
        fastKey: function fastKey(e, t) {
          if (!o(e)) return "symbol" == _typeof4(e) ? e : ("string" == typeof e ? "S" : "P") + e;

          if (!a(e, i)) {
            if (!s(e)) return "F";
            if (!t) return "E";
            r(e);
          }

          return e[i].i;
        },
        getWeak: function getWeak(e, t) {
          if (!a(e, i)) {
            if (!s(e)) return !0;
            if (!t) return !1;
            r(e);
          }

          return e[i].w;
        },
        onFreeze: function onFreeze(e) {
          return d && f.NEED && s(e) && !a(e, i) && r(e), e;
        }
      };
    },
    75: function _(e, t, n) {
      var r = n(17);

      e.exports = function (e, t) {
        if (!r(e) || e._t !== t) throw TypeError("Incompatible receiver, " + t + " required!");
        return e;
      };
    },
    76: function _(e, t, n) {
      n(64), n(112), e.exports = n(16).Array.from;
    },
    77: function _(e, t, n) {
      t.a = function (e) {
        var t = e;
        return {
          callBids: function callBids() {},
          setBidderCode: function setBidderCode(e) {
            t = e;
          },
          getBidderCode: function getBidderCode() {
            return t;
          }
        };
      };
    },
    78: function _(e, t, n) {
      t.a = function (e, t) {
        if (e.labelAll) return {
          labelAll: !0,
          labels: e.labelAll,
          activeLabels: t
        };
        return {
          labelAll: !1,
          labels: e.labelAny,
          activeLabels: t
        };
      }, t.c = function (e) {
        var t = y(1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : b);
        return !t.shouldFilter || !!t.sizesSupported[e];
      }, t.b = function () {
        var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.labels,
            n = void 0 === t ? [] : t,
            r = e.labelAll,
            i = void 0 !== r && r,
            o = e.activeLabels,
            a = void 0 === o ? [] : o,
            c = 1 < arguments.length ? arguments[1] : void 0,
            u = 2 < arguments.length ? arguments[2] : void 0,
            s = y(3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : b);
        c = Object(p.isPlainObject)(c) ? Object(p.deepClone)(c) : u ? {
          banner: {
            sizes: u
          }
        } : {};
        var d = Object(p.deepAccess)(c, "banner.sizes");
        s.shouldFilter && d && (c.banner.sizes = d.filter(function (e) {
          return s.sizesSupported[e];
        }));
        var f = Object.keys(c),
            l = {
          active: f.every(function (e) {
            return "banner" !== e;
          }) || f.some(function (e) {
            return "banner" === e;
          }) && 0 < Object(p.deepAccess)(c, "banner.sizes.length") && (0 === n.length || !i && (n.some(function (e) {
            return s.labels[e];
          }) || n.some(function (e) {
            return g()(a, e);
          })) || i && n.reduce(function (e, t) {
            return e ? s.labels[t] || g()(a, t) : e;
          }, !0)),
          mediaTypes: c
        };
        d && d.length !== c.banner.sizes.length && (l.filterResults = {
          before: d,
          after: c.banner.sizes
        });
        return l;
      };
      var r = n(3),
          p = n(0),
          i = n(11),
          g = n.n(i);

      function o(e) {
        return (o = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
          return _typeof4(e);
        } : function (e) {
          return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof4(e);
        })(e);
      }

      var b = [];

      function y(e) {
        return e.reduce(function (n, r) {
          if ("object" === o(r) && "string" == typeof r.mediaQuery) {
            var t = !1;
            if ("" === r.mediaQuery) t = !0;else try {
              t = Object(p.getWindowTop)().matchMedia(r.mediaQuery).matches;
            } catch (e) {
              Object(p.logWarn)("Unfriendly iFrame blocks sizeConfig from being correctly evaluated"), t = matchMedia(r.mediaQuery).matches;
            }
            t && (Array.isArray(r.sizesSupported) && (n.shouldFilter = !0), ["labels", "sizesSupported"].forEach(function (t) {
              return (r[t] || []).forEach(function (e) {
                return n[t][e] = !0;
              });
            }));
          } else Object(p.logWarn)('sizeConfig rule missing required property "mediaQuery"');

          return n;
        }, {
          labels: {},
          sizesSupported: {},
          shouldFilter: !1
        });
      }

      r.b.getConfig("sizeConfig", function (e) {
        return t = e.sizeConfig, void (b = t);
        var t;
      });
    },
    79: function _(e, t, n) {
      t.b = function (e, t) {
        var n = {
          puts: e.map(i)
        };
        Object(r.a)(o.b.getConfig("cache.url"), function (n) {
          return {
            success: function success(e) {
              var t;

              try {
                t = JSON.parse(e).responses;
              } catch (e) {
                return void n(e, []);
              }

              t ? n(null, t) : n(new Error("The cache server didn't respond with a responses property."), []);
            },
            error: function error(e, t) {
              n(new Error("Error storing video ad in the cache: ".concat(e, ": ").concat(JSON.stringify(t))), []);
            }
          };
        }(t), JSON.stringify(n), {
          contentType: "text/plain",
          withCredentials: !0
        });
      }, t.a = function (e) {
        return "".concat(o.b.getConfig("cache.url"), "?uuid=").concat(e);
      };
      var r = n(4),
          o = n(3);

      function i(e) {
        var t,
            n,
            r,
            i = {
          type: "xml",
          value: e.vastXml ? e.vastXml : (t = e.vastUrl, n = e.vastImpUrl, r = n ? "<![CDATA[".concat(n, "]]>") : "", '<VAST version="3.0">\n    <Ad>\n      <Wrapper>\n        <AdSystem>prebid.org wrapper</AdSystem>\n        <VASTAdTagURI><![CDATA['.concat(t, "]]></VASTAdTagURI>\n        <Impression>").concat(r, "</Impression>\n        <Creatives></Creatives>\n      </Wrapper>\n    </Ad>\n  </VAST>")),
          ttlseconds: Number(e.ttl)
        };
        return o.b.getConfig("cache.vasttrack") && (i.bidder = e.bidder, i.bidid = e.requestId), "string" == typeof e.customCacheKey && "" !== e.customCacheKey && (i.key = e.customCacheKey), i;
      }
    },
    8: function _(e, t, n) {
      function r() {
        return (r = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];

            for (var r in n) {
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      var c,
          i,
          u = n(0),
          o = n(5),
          a = Array.prototype.slice,
          s = Array.prototype.push,
          d = u._map(o.EVENTS, function (e) {
        return e;
      }),
          f = o.EVENT_ID_PATHS,
          l = [];

      e.exports = (c = {}, (i = {}).on = function (e, t, n) {
        var r, i;
        i = e, u.contains(d, i) ? (r = c[e] || {
          que: []
        }, n ? (r[n] = r[n] || {
          que: []
        }, r[n].que.push(t)) : r.que.push(t), c[e] = r) : u.logError("Wrong event name : " + e + " Valid event names :" + d);
      }, i.emit = function (e) {
        !function (e, t) {
          u.logMessage("Emitting event for: " + e);

          var n = t[0] || {},
              r = n[f[e]],
              i = c[e] || {
            que: []
          },
              o = u._map(i, function (e, t) {
            return t;
          }),
              a = [];

          l.push({
            eventType: e,
            args: n,
            id: r
          }), r && u.contains(o, r) && s.apply(a, i[r].que), s.apply(a, i.que), u._each(a, function (e) {
            if (e) try {
              e.apply(null, t);
            } catch (e) {
              u.logError("Error executing handler:", "events.js", e);
            }
          });
        }(e, a.call(arguments, 1));
      }, i.off = function (e, n, r) {
        var i = c[e];
        u.isEmpty(i) || u.isEmpty(i.que) && u.isEmpty(i[r]) || r && (u.isEmpty(i[r]) || u.isEmpty(i[r].que)) || (r ? u._each(i[r].que, function (e) {
          var t = i[r].que;
          e === n && t.splice(u.indexOf.call(t, e), 1);
        }) : u._each(i.que, function (e) {
          var t = i.que;
          e === n && t.splice(u.indexOf.call(t, e), 1);
        }), c[e] = i);
      }, i.get = function () {
        return c;
      }, i.getEvents = function () {
        var n = [];
        return u._each(l, function (e) {
          var t = r({}, e);
          n.push(t);
        }), n;
      }, i);
    },
    82: function _(e, t, n) {
      var r = n(15),
          i = n(45)(5),
          o = "find",
          a = !0;
      o in [] && Array(1)[o](function () {
        a = !1;
      }), r(r.P + r.F * a, "Array", {
        find: function find(e, t) {
          return i(this, e, 1 < arguments.length ? t : void 0);
        }
      }), n(40)(o);
    },
    83: function _(e, t, n) {
      e.exports = !n(22) && !n(36)(function () {
        return 7 != Object.defineProperty(n(58)("div"), "a", {
          get: function get() {
            return 7;
          }
        }).a;
      });
    },
    84: function _(e, t, n) {
      var i = n(17);

      e.exports = function (e, t) {
        if (!i(e)) return e;
        var n, r;
        if (t && "function" == typeof (n = e.toString) && !i(r = n.call(e))) return r;
        if ("function" == typeof (n = e.valueOf) && !i(r = n.call(e))) return r;
        if (!t && "function" == typeof (n = e.toString) && !i(r = n.call(e))) return r;
        throw TypeError("Can't convert object to primitive value");
      };
    },
    85: function _(e, t, n) {
      var r = n(86);

      e.exports = function (e, t) {
        return new (r(e))(t);
      };
    },
    86: function _(e, t, n) {
      var r = n(17),
          i = n(87),
          o = n(14)("species");

      e.exports = function (e) {
        var t;
        return i(e) && ("function" != typeof (t = e.constructor) || t !== Array && !i(t.prototype) || (t = void 0), r(t) && null === (t = t[o]) && (t = void 0)), void 0 === t ? Array : t;
      };
    },
    87: function _(e, t, n) {
      var r = n(37);

      e.exports = Array.isArray || function (e) {
        return "Array" == r(e);
      };
    },
    88: function _(e, t, n) {
      var r = n(15),
          i = n(62)(!0);
      r(r.P, "Array", {
        includes: function includes(e, t) {
          return i(this, e, 1 < arguments.length ? t : void 0);
        }
      }), n(40)("includes");
    },
    89: function _(e, t, n) {
      var r = n(47),
          i = Math.max,
          o = Math.min;

      e.exports = function (e, t) {
        return (e = r(e)) < 0 ? i(e + t, 0) : o(e, t);
      };
    },
    9: function _(e, t, n) {
      function o(e, t) {
        return function (e) {
          if (Array.isArray(e)) return e;
        }(e) || function (e, t) {
          if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e))) return;
          var n = [],
              r = !0,
              i = !1,
              o = void 0;

          try {
            for (var a, c = e[Symbol.iterator](); !(r = (a = c.next()).done) && (n.push(a.value), !t || n.length !== t); r = !0) {
              ;
            }
          } catch (e) {
            i = !0, o = e;
          } finally {
            try {
              r || null == c["return"] || c["return"]();
            } finally {
              if (i) throw o;
            }
          }

          return n;
        }(e, t) || function (e, t) {
          if (!e) return;
          if ("string" == typeof e) return r(e, t);
          var n = Object.prototype.toString.call(e).slice(8, -1);
          "Object" === n && e.constructor && (n = e.constructor.name);
          if ("Map" === n || "Set" === n) return Array.from(e);
          if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return r(e, t);
        }(e, t) || function () {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function r(e, t) {
        (null == t || t > e.length) && (t = e.length);

        for (var n = 0, r = new Array(t); n < t; n++) {
          r[n] = e[n];
        }

        return r;
      }

      function i(e) {
        return e ? e.replace(/^\?/, "").split("&").reduce(function (e, t) {
          var n = o(t.split("="), 2),
              r = n[0],
              i = n[1];
          return /\[\]$/.test(r) ? (e[r = r.replace("[]", "")] = e[r] || [], e[r].push(i)) : e[r] = i || "", e;
        }, {}) : {};
      }

      function a(e) {
        return Object.keys(e).map(function (t) {
          return Array.isArray(e[t]) ? e[t].map(function (e) {
            return "".concat(t, "[]=").concat(e);
          }).join("&") : "".concat(t, "=").concat(e[t]);
        }).join("&");
      }

      t.d = i, t.b = a, t.c = function (e, t) {
        var n = document.createElement("a");
        t && "noDecodeWholeURL" in t && t.noDecodeWholeURL ? n.href = e : n.href = decodeURIComponent(e);
        var r = t && "decodeSearchAsString" in t && t.decodeSearchAsString;
        return {
          href: n.href,
          protocol: (n.protocol || "").replace(/:$/, ""),
          hostname: n.hostname,
          port: +n.port,
          pathname: n.pathname.replace(/^(?!\/)/, "/"),
          search: r ? n.search : i(n.search || ""),
          hash: (n.hash || "").replace(/^#/, ""),
          host: n.host || window.location.host
        };
      }, t.a = function (e) {
        return (e.protocol || "http") + "://" + (e.host || e.hostname + (e.port ? ":".concat(e.port) : "")) + (e.pathname || "") + (e.search ? "?".concat(a(e.search || "")) : "") + (e.hash ? "#".concat(e.hash) : "");
      };
    },
    90: function _(e, t) {},
    91: function _(e, t, n) {
      var u = n(47),
          s = n(38);

      e.exports = function (c) {
        return function (e, t) {
          var n,
              r,
              i = String(s(e)),
              o = u(t),
              a = i.length;
          return o < 0 || a <= o ? c ? "" : void 0 : (n = i.charCodeAt(o)) < 55296 || 56319 < n || o + 1 === a || (r = i.charCodeAt(o + 1)) < 56320 || 57343 < r ? c ? i.charAt(o) : n : c ? i.slice(o, o + 2) : r - 56320 + (n - 55296 << 10) + 65536;
        };
      };
    },
    92: function _(e, t, n) {
      e.exports = n(21);
    },
    93: function _(e, t, n) {
      var r = n(65),
          i = n(44),
          o = n(52),
          a = {};
      n(21)(a, n(14)("iterator"), function () {
        return this;
      }), e.exports = function (e, t, n) {
        e.prototype = r(a, {
          next: i(1, n)
        }), o(e, t + " Iterator");
      };
    },
    94: function _(e, t, n) {
      var a = n(20),
          c = n(29),
          u = n(95);
      e.exports = n(22) ? Object.defineProperties : function (e, t) {
        c(e);

        for (var n, r = u(t), i = r.length, o = 0; o < i;) {
          a.f(e, n = r[o++], t[n]);
        }

        return e;
      };
    },
    95: function _(e, t, n) {
      var r = n(96),
          i = n(66);

      e.exports = Object.keys || function (e) {
        return r(e, i);
      };
    },
    96: function _(e, t, n) {
      var a = n(30),
          c = n(49),
          u = n(62)(!1),
          s = n(51)("IE_PROTO");

      e.exports = function (e, t) {
        var n,
            r = c(e),
            i = 0,
            o = [];

        for (n in r) {
          n != s && a(r, n) && o.push(n);
        }

        for (; t.length > i;) {
          a(r, n = t[i++]) && (~u(o, n) || o.push(n));
        }

        return o;
      };
    },
    97: function _(e, t, n) {
      var r = n(19).document;
      e.exports = r && r.documentElement;
    },
    98: function _(e, t, n) {
      var r = n(30),
          i = n(46),
          o = n(51)("IE_PROTO"),
          a = Object.prototype;

      e.exports = Object.getPrototypeOf || function (e) {
        return e = i(e), r(e, o) ? e[o] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? a : null;
      };
    },
    99: function _(e, t, n) {
      n(100);

      for (var r = n(19), i = n(21), o = n(31), a = n(14)("toStringTag"), c = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","), u = 0; u < c.length; u++) {
        var s = c[u],
            d = r[s],
            f = d && d.prototype;
        f && !f[a] && i(f, a, s), o[s] = o.Array;
      }
    }
  });
  pbjsChunk([250], {
    171: function _(e, t, i) {
      e.exports = i(172);
    },
    172: function _(e, t, i) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), t.callPrebidCacheHook = _, t.checkAdUnitSetupHook = R, t.checkVideoBidSetupHook = x, t.adpodSetConfig = K, t.callPrebidCacheAfterAuction = P, t.sortByPricePerSecond = z, t.getTargeting = G;
      var h = i(0),
          p = i(42),
          n = i(55),
          a = i(34),
          r = i(13),
          u = i(79),
          y = i(3),
          m = i(2),
          o = i(63),
          s = i.n(o),
          d = i(12),
          c = i.n(d),
          T = i(25),
          l = i(5),
          f = i.n(l);

      function C() {
        return (C = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var i = arguments[t];

            for (var n in i) {
              Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      function S(e, t, i) {
        return t in e ? Object.defineProperty(e, t, {
          value: i,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : e[t] = i, e;
      }

      function A(e, t) {
        return function (e) {
          if (Array.isArray(e)) return e;
        }(e) || function (e, t) {
          if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e))) return;
          var i = [],
              n = !0,
              a = !1,
              r = void 0;

          try {
            for (var o, d = e[Symbol.iterator](); !(n = (o = d.next()).done) && (i.push(o.value), !t || i.length !== t); n = !0) {
              ;
            }
          } catch (e) {
            a = !0, r = e;
          } finally {
            try {
              n || null == d["return"] || d["return"]();
            } finally {
              if (a) throw r;
            }
          }

          return i;
        }(e, t) || v(e, t) || function () {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function g(e) {
        return function (e) {
          if (Array.isArray(e)) return b(e);
        }(e) || function (e) {
          if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
        }(e) || v(e) || function () {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function v(e, t) {
        if (e) {
          if ("string" == typeof e) return b(e, t);
          var i = Object.prototype.toString.call(e).slice(8, -1);
          return "Object" === i && e.constructor && (i = e.constructor.name), "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? b(e, t) : void 0;
        }
      }

      function b(e, t) {
        (null == t || t > e.length) && (t = e.length);

        for (var i = 0, n = new Array(t); i < t; i++) {
          n[i] = e[i];
        }

        return n;
      }

      var I,
          E = i(76),
          j = "hb_pb_cat_dur",
          D = "hb_cache_id",
          O = 50,
          w = 5,
          U = (I = {}, {
        addBid: function addBid(e) {
          I[e.auctionId] || B(e.auctionId), I[e.auctionId].bidStorage.add(e);
        },
        removeBid: function removeBid(e) {
          I[e.auctionId].bidStorage["delete"](e);
        },
        getBids: function getBids(e) {
          return I[e.auctionId] && I[e.auctionId].bidStorage.values();
        },
        getQueueDispatcher: function getQueueDispatcher(e) {
          return I[e.auctionId] && I[e.auctionId].queueDispatcher;
        },
        setupInitialCacheKey: function setupInitialCacheKey(e) {
          I[e.auctionId] || (I[e.auctionId] = {}, I[e.auctionId].initialCacheKey = h.generateUUID());
        },
        getInitialCacheKey: function getInitialCacheKey(e) {
          return I[e.auctionId] && I[e.auctionId].initialCacheKey;
        }
      });

      function B(e) {
        var o, d, c;
        I[e] = {}, I[e].bidStorage = new s.a(), I[e].queueDispatcher = (o = O, c = 1, function (e, t, i, n) {
          function a() {
            (function (a, r, o) {
              (function (e) {
                for (var t = 0; t < e.length; t++) {
                  U.removeBid(e[t]);
                }
              })(r), Object(u.b)(r, function (e, t) {
                if (e) {
                  h.logWarn("Failed to save to the video cache: ".concat(e, ". Video bid(s) must be discarded."));

                  for (var i = 0; i < r.length; i++) {
                    Object(p.g)(a, r[i]);
                  }
                } else for (var n = 0; n < t.length; n++) {
                  "" !== t[n].uuid ? Object(p.d)(a, r[n]) : h.logInfo("Detected a bid was not cached because the custom key was already registered.  Attempted to use key: ".concat(r[n].customCacheKey, ". Bid was: "), r[n]), o();
                }
              });
            }).call(r, e, t, i);
          }

          var r = this;
          clearTimeout(d), n ? c = 1 : c === w ? (c = 1, a()) : (c++, d = setTimeout(a, o));
        }), I[e].initialCacheKey = h.generateUUID();
      }

      function k(e, t) {
        var i,
            n,
            a,
            r,
            o,
            d,
            c = U.getInitialCacheKey(e),
            u = h.deepAccess(e, "video.durationBucket"),
            s = (i = e, a = y.b.getConfig("adpod.prioritizeDeals"), r = h.deepAccess(i, "video.dealTier"), a && r ? (n = y.b.getConfig("adpod.dealTier.".concat(i.bidderCode))) ? r >= n.minDealTier ? n.prefix ? n.prefix + r : r : l(i) : r : l(i));

        function l(e) {
          var t = Object(p.i)(e.mediaType);
          return Object(p.h)(t)(e);
        }

        d = t ? (o = h.deepAccess(e, "meta.adServerCatId"), "".concat(s, "_").concat(o, "_").concat(u, "s")) : "".concat(s, "_").concat(u, "s"), e.adserverTargeting || (e.adserverTargeting = {}), e.adserverTargeting[j] = d, e.adserverTargeting[D] = c, e.videoCacheKey = c, e.customCacheKey = "".concat(d, "_").concat(c);
      }

      function _(e, t, i, n, a) {
        var r,
            o,
            d,
            c,
            u,
            s,
            l,
            f,
            g = h.deepAccess(a, "mediaTypes.video");
        g && g.context === m.a ? (r = y.b.getConfig("adpod.brandCategoryExclusion"), !h.deepAccess(i, "meta.adServerCatId") && r ? (h.logWarn("Detected a bid without meta.adServerCatId while setConfig({adpod.brandCategoryExclusion}) was enabled.  This bid has been rejected:", i), n()) : !1 === y.b.getConfig("adpod.deferCaching") ? (U.addBid(i), k(i, r), o = t, d = i, c = n, (f = U.getBids(d)) ? (u = E(f), s = U.getQueueDispatcher(d), l = !(o.getAuctionStatus() === p.b), s(o, u, c, l)) : h.logWarn("Attempted to cache a bid from an unknown auction. Bid:", d)) : (U.setupInitialCacheKey(i), k(i, r), Object(p.d)(t, i), n())) : e.call(this, t, i, n, a);
      }

      function R(e, t) {
        t = t.filter(function (e) {
          var t = h.deepAccess(e, "mediaTypes"),
              i = h.deepAccess(t, "video");

          if (i && i.context === m.a) {
            if (1 < Object.keys(t).length) return h.logWarn("Detected more than one mediaType in adUnitCode: ".concat(e.code, " while attempting to define an 'adpod' video adUnit.  'adpod' adUnits cannot be mixed with other mediaTypes.  This adUnit will be removed from the auction.")), !1;
            var n = "Detected missing or incorrectly setup fields for an adpod adUnit.  Please review the following fields of adUnitCode: ".concat(e.code, ".  This adUnit will be removed from the auction."),
                a = !!(i.playerSize && (h.isArrayOfNums(i.playerSize, 2) || h.isArray(i.playerSize) && i.playerSize.every(function (e) {
              return h.isArrayOfNums(e, 2);
            })) || i.sizeConfig),
                r = !!(i.adPodDurationSec && h.isNumber(i.adPodDurationSec) && 0 < i.adPodDurationSec),
                o = !!(i.durationRangeSec && h.isArrayOfNums(i.durationRangeSec) && i.durationRangeSec.every(function (e) {
              return 0 < e;
            }));
            if (!a || !r || !o) return n += a ? "" : "\nmediaTypes.video.playerSize", n += r ? "" : "\nmediaTypes.video.adPodDurationSec", n += o ? "" : "\nmediaTypes.video.durationRangeSec", h.logWarn(n), !1;
          }

          return !0;
        }), e.call(this, t);
      }

      function x(e, t, i, n, a) {
        var r;
        a === m.a ? (r = !0, y.b.getConfig("adpod.brandCategoryExclusion") && !h.deepAccess(t, "meta.iabSubCatId") && (r = !1), h.deepAccess(t, "video") && (h.deepAccess(t, "video.context") && t.video.context === m.a || (r = !1), h.deepAccess(t, "video.durationSeconds") && !(t.video.durationSeconds <= 0) && function (e, t) {
          var i = h.deepAccess(t, "video.durationSeconds"),
              n = h.deepAccess(e, "mediaTypes.video"),
              a = n.durationRangeSec;

          if (a.sort(function (e, t) {
            return e - t;
          }), n.requireExactDuration) {
            if (!c()(a, function (e) {
              return e === i;
            })) return h.logWarn("Detected a bid with a duration value not part of the list of accepted ranges specified in adUnit.mediaTypes.video.durationRangeSec.  Exact match durations must be used for this adUnit. Rejecting bid: ", t), !1;
            t.video.durationBucket = i;
          } else {
            var r = Math.max.apply(Math, g(a));
            if (!(i <= r + 2)) return h.logWarn("Detected a bid with a duration value outside the accepted ranges specified in adUnit.mediaTypes.video.durationRangeSec.  Rejecting bid: ", t), !1;
            var o = c()(a, function (e) {
              return i <= e + 2;
            });
            t.video.durationBucket = o;
          }

          return !0;
        }(i, t) || (r = !1)), y.b.getConfig("cache.url") || !t.vastXml || t.vastUrl || (h.logError('\n        This bid contains only vastXml and will not work when a prebid cache url is not specified.\n        Try enabling prebid cache with pbjs.setConfig({ cache: {url: "..."} });\n      '), r = !1), e.bail(r)) : e.call(this, t, i, n, a);
      }

      function K(e) {
        void 0 !== e.bidQueueTimeDelay && ("number" == typeof e.bidQueueTimeDelay && 0 < e.bidQueueTimeDelay ? O = e.bidQueueTimeDelay : h.logWarn("Detected invalid value for adpod.bidQueueTimeDelay in setConfig; must be a positive number.  Using default: ".concat(O))), void 0 !== e.bidQueueSizeLimit && ("number" == typeof e.bidQueueSizeLimit && 0 < e.bidQueueSizeLimit ? w = e.bidQueueSizeLimit : h.logWarn("Detected invalid value for adpod.bidQueueSizeLimit in setConfig; must be a positive number.  Using default: ".concat(w)));
      }

      function P(a, r) {
        Object(u.b)(a, function (e, t) {
          if (e) r(e, null);else {
            for (var i = [], n = 0; n < t.length; n++) {
              "" !== t[n] && i.push(a[n]);
            }

            r(null, i);
          }
        });
      }

      function z(e, t) {
        return e.adserverTargeting[f.a.TARGETING_KEYS.PRICE_BUCKET] / e.video.durationBucket < t.adserverTargeting[f.a.TARGETING_KEYS.PRICE_BUCKET] / t.video.durationBucket ? 1 : e.adserverTargeting[f.a.TARGETING_KEYS.PRICE_BUCKET] / e.video.durationBucket > t.adserverTargeting[f.a.TARGETING_KEYS.PRICE_BUCKET] / t.video.durationBucket ? -1 : 0;
      }

      function G() {
        var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.codes,
            n = e.callback;

        if (n) {
          var i,
              a,
              r,
              o,
              d,
              c,
              u = (i = t = t || [], T.a.getAdUnits().filter(function (e) {
            return h.deepAccess(e, "mediaTypes.video.context") === m.a;
          }).filter(function (e) {
            return !(0 < i.length) || -1 != i.indexOf(e.code);
          })),
              s = T.a.getBidsReceived(),
              l = y.b.getConfig("adpod.brandCategoryExclusion"),
              f = y.b.getConfig("adpod.deferCaching"),
              g = "boolean" != typeof f || f,
              p = (a = s, r = u.map(function (e) {
            return e.code;
          }), a.filter(function (e) {
            return -1 != r.indexOf(e.adUnitCode) && e.video && e.video.context === m.a;
          })),
              p = l || g ? function (e) {
            var t = e.map(function (e) {
              return C({}, e, S({}, j, e.adserverTargeting[j]));
            });
            t = h.groupBy(t, j);
            var i = [];
            return Object.keys(t).forEach(function (e) {
              t[e].sort(h.compareOn("responseTimestamp")), i.push(t[e][0]);
            }), i;
          }(p) : p;
          y.b.getConfig("adpod.prioritizeDeals") ? (d = (o = A(p.reduce(function (e, t) {
            var i = h.deepAccess(t, "video.dealTier"),
                n = y.b.getConfig("adpod.dealTier.".concat(t.bidderCode, ".minDealTier"));
            return n && i ? n <= i ? e[1].push(t) : e[0].push(t) : i ? e[1].push(t) : e[0].push(t), e;
          }, [[], []]), 2))[0], (c = o[1]).sort(z), d.sort(z), p = c.concat(d)) : p.sort(z);
          var v,
              b = {};
          return !1 === g ? (u.forEach(function (t) {
            var n = [],
                a = h.deepAccess(t, "mediaTypes.video.adPodDurationSec");
            p.filter(function (e) {
              return e.adUnitCode === t.code;
            }).forEach(function (e, t, i) {
              e.video.durationBucket <= a && (n.push(S({}, j, e.adserverTargeting[j])), a -= e.video.durationBucket), t === i.length - 1 && 0 < n.length && n.push(S({}, D, e.adserverTargeting[D]));
            }), b[t.code] = n;
          }), n(null, b)) : (v = [], u.forEach(function (t) {
            var i = h.deepAccess(t, "mediaTypes.video.adPodDurationSec");
            p.filter(function (e) {
              return e.adUnitCode === t.code;
            }).forEach(function (e) {
              e.video.durationBucket <= i && (v.push(e), i -= e.video.durationBucket);
            });
          }), P(v, function (e, t) {
            var i;
            e ? n(e, null) : (i = h.groupBy(t, "adUnitCode"), Object.keys(i).forEach(function (e) {
              var n = [];
              i[e].forEach(function (e, t, i) {
                n.push(S({}, j, e.adserverTargeting[j])), t === i.length - 1 && 0 < n.length && n.push(S({}, D, e.adserverTargeting[D]));
              }), b[e] = n;
            }), n(null, b));
          })), b;
        }

        h.logError("No callback function was defined in the getTargeting call.  Aborting getTargeting().");
      }

      y.b.getConfig("adpod", function (e) {
        return K(e.adpod);
      }), Object(r.d)(p.f, _), Object(r.d)(n.checkAdUnitSetup, R), Object(r.d)(a.c, x);
      var Q = {
        TARGETING_KEY_PB_CAT_DUR: j,
        TARGETING_KEY_CACHE_ID: D,
        getTargeting: G
      };
      Object.freeze(Q), Object(r.c)("adpod", function (e) {
        h.isPlainObject(arguments.length <= 0 ? void 0 : e) ? function (e, t) {
          for (var i in t) {
            e[i] = t[i];
          }
        }(arguments.length <= 0 ? void 0 : e, Q) : h.logError("Adpod module needs plain object to share methods with submodule");
      });
    }
  }, [171]);
  pbjsChunk([237], {
    209: function _(e, r, t) {
      e.exports = t(210);
    },
    210: function _(e, r, t) {
      Object.defineProperty(r, "__esModule", {
        value: !0
      }), t.d(r, "spec", function () {
        return l;
      });

      var f = t(10),
          _ = t(0),
          k = t(3),
          y = t(1),
          g = t(2),
          c = t(25),
          a = t(12),
          I = t.n(a),
          n = t(11),
          x = t.n(n),
          v = t(34);

      function i(e) {
        return (i = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
          return _typeof4(e);
        } : function (e) {
          return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof4(e);
        })(e);
      }

      function b() {
        return (b = Object.assign || function (e) {
          for (var r = 1; r < arguments.length; r++) {
            var t = arguments[r];

            for (var a in t) {
              Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      function A(e) {
        return function (e) {
          if (Array.isArray(e)) return s(e);
        }(e) || function (e) {
          if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
        }(e) || function (e, r) {
          if (!e) return;
          if ("string" == typeof e) return s(e, r);
          var t = Object.prototype.toString.call(e).slice(8, -1);
          "Object" === t && e.constructor && (t = e.constructor.name);
          if ("Map" === t || "Set" === t) return Array.from(e);
          if ("Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return s(e, r);
        }(e) || function () {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function s(e, r) {
        (null == r || r > e.length) && (r = e.length);

        for (var t = 0, a = new Array(r); t < r; t++) {
          a[t] = e[t];
        }

        return a;
      }

      var C = "https://ib.adnxs.com/ut/v3/prebid",
          u = ["id", "mimes", "minduration", "maxduration", "startdelay", "skippable", "playback_method", "frameworks"],
          S = ["age", "externalUid", "segments", "gender", "dnt", "language"],
          w = ["geo", "device_id"],
          T = ["enabled", "dongle", "member_id", "debug_timeout"],
          p = {
        body: "description",
        body2: "desc2",
        cta: "ctatext",
        image: {
          serverName: "main_image",
          requiredParams: {
            required: !0
          }
        },
        icon: {
          serverName: "icon",
          requiredParams: {
            required: !0
          }
        },
        sponsoredBy: "sponsored_by",
        privacyLink: "privacy_link",
        salePrice: "saleprice",
        displayUrl: "displayurl"
      },
          o = "<script",
          d = /\/\/cdn\.adnxs\.com\/v/,
          m = "trk.js",
          l = {
        code: "appnexus",
        aliases: ["appnexusAst", "brealtime", "emxdigital", "pagescience", "defymedia", "gourmetads", "matomy", "featureforward", "oftmedia", "districtm", "adasta"],
        supportedMediaTypes: [g.b, g.d, g.c],
        isBidRequestValid: function isBidRequestValid(e) {
          return !!(e.params.placementId || e.params.member && e.params.invCode);
        },
        buildRequests: function buildRequests(e, r) {
          var a = e.map(O),
              t = I()(e, P),
              n = {};
          !0 === k.b.getConfig("coppa") && (n = {
            coppa: !0
          }), t && Object.keys(t.params.user).filter(function (e) {
            return x()(S, e);
          }).forEach(function (e) {
            return n[e] = t.params.user[e];
          });
          var i,
              s = I()(e, U);
          s && s.params && s.params.app && (i = {}, Object.keys(s.params.app).filter(function (e) {
            return x()(w, e);
          }).forEach(function (e) {
            return i[e] = s.params.app[e];
          }));
          var o,
              d = I()(e, q);
          d && d.params && s.params.app && s.params.app.id && (o = {
            appid: d.params.app.id
          });
          var c = {},
              u = {},
              p = _.getCookie("apn_prebid_debug") || null;
          if (p) try {
            c = JSON.parse(p);
          } catch (e) {
            _.logError("AppNexus Debug Auction Cookie Error:\n\n" + e);
          } else {
            var m = I()(e, M);
            m && m.debug && (c = m.debug);
          }
          c && c.enabled && Object.keys(c).filter(function (e) {
            return x()(T, e);
          }).forEach(function (e) {
            u[e] = c[e];
          });
          var l,
              f = I()(e, N),
              y = f ? parseInt(f.params.member, 10) : 0,
              g = e[0].schain,
              v = {
            tags: A(a),
            user: n,
            sdk: {
              source: "pbjs",
              version: "3.13.0-pre"
            },
            schain: g
          };
          0 < y && (v.member_id = y), s && (v.device = i), d && (v.app = o), k.b.getConfig("adpod.brandCategoryExclusion") && (v.brand_category_uniqueness = !0), u.enabled && (v.debug = u, _.logInfo("AppNexus Debug Auction Settings:\n\n" + JSON.stringify(u, null, 4))), r && r.gdprConsent && (v.gdpr_consent = {
            consent_string: r.gdprConsent.consentString,
            consent_required: r.gdprConsent.gdprApplies
          }), r && r.uspConsent && (v.us_privacy = r.uspConsent), r && r.refererInfo && (l = {
            rd_ref: encodeURIComponent(r.refererInfo.referer),
            rd_top: r.refererInfo.reachedTop,
            rd_ifs: r.refererInfo.numIframes,
            rd_stk: r.refererInfo.stack.map(function (e) {
              return encodeURIComponent(e);
            }).join(",")
          }, v.referrer_detection = l), I()(e, z) && e.filter(z).forEach(function (r) {
            var e = function (e, r) {
              var t = r.mediaTypes.video,
                  a = t.durationRangeSec,
                  n = t.requireExactDuration,
                  i = function (e) {
                var r = e.adPodDurationSec,
                    t = e.durationRangeSec,
                    a = e.requireExactDuration,
                    n = _.getMinValueFromArray(t),
                    i = Math.floor(r / n);

                return a ? Math.max(i, t.length) : i;
              }(r.mediaTypes.video),
                  s = _.getMaxValueFromArray(a),
                  o = e.filter(function (e) {
                return e.uuid === r.bidId;
              }),
                  d = _.fill.apply(_, A(o).concat([i]));

              {
                var c, u;
                n ? (c = Math.ceil(i / a.length), u = _.chunk(d, c), a.forEach(function (r, e) {
                  u[e].map(function (e) {
                    B(e, "minduration", r), B(e, "maxduration", r);
                  });
                })) : d.map(function (e) {
                  return B(e, "maxduration", s);
                });
              }
              return d;
            }(a, r),
                t = v.tags.filter(function (e) {
              return e.uuid !== r.bidId;
            });

            v.tags = [].concat(A(t), A(e));
          });

          var b,
              h = _.deepAccess(e[0], "userId.criteoId");

          return h && ((b = []).push({
            provider: "criteo",
            user_id: h
          }), v.tpuids = b), function (e, t) {
            var a = [];
            {
              var n, r;
              15 < e.tags.length ? (n = _.deepClone(e), _.chunk(e.tags, 15).forEach(function (e) {
                n.tags = e;
                var r = JSON.stringify(n);
                a.push({
                  method: "POST",
                  url: C,
                  data: r,
                  bidderRequest: t
                });
              })) : (r = JSON.stringify(e), a = {
                method: "POST",
                url: C,
                data: r,
                bidderRequest: t
              });
            }
            return a;
          }(v, r);
        },
        interpretResponse: function interpretResponse(e, r) {
          var i = this,
              s = r.bidderRequest;
          e = e.body;
          var t,
              o = [];
          if (e && !e.error) return e.tags && e.tags.forEach(function (e) {
            var r,
                t,
                a,
                n = (r = e) && r.ads && r.ads.length && I()(r.ads, function (e) {
              return e.rtb;
            });
            n && 0 !== n.cpm && x()(i.supportedMediaTypes, n.ad_type) && ((t = function (r, e, t) {
              var a = _.getBidRequest(r.uuid, [t]),
                  n = {
                requestId: r.uuid,
                cpm: e.cpm,
                creativeId: e.creative_id,
                dealId: e.deal_id,
                currency: "USD",
                netRevenue: !0,
                ttl: 300,
                adUnitCode: a.adUnitCode,
                appnexus: {
                  buyerMemberId: e.buyer_member_id,
                  dealPriority: e.deal_priority,
                  dealCode: e.deal_code
                }
              };

              e.advertiser_id && (n.meta = b({}, n.meta, {
                advertiserId: e.advertiser_id
              }));

              if (e.rtb.video) {
                var i, s;

                switch (b(n, {
                  width: e.rtb.video.player_width,
                  height: e.rtb.video.player_height,
                  vastImpUrl: e.notify_url,
                  ttl: 3600
                }), _.deepAccess(a, "mediaTypes.video.context")) {
                  case g.a:
                    var o = Object(y.getIabSubCategory)(a.bidder, e.brand_category_id);
                    n.meta = b({}, n.meta, {
                      iabSubCatId: o
                    });
                    var d = e.deal_priority;
                    n.video = {
                      context: g.a,
                      durationSeconds: Math.floor(e.rtb.video.duration_ms / 1e3),
                      dealTier: d
                    }, n.vastUrl = e.rtb.video.asset_url;
                    break;

                  case v.b:
                    n.adResponse = r, n.adResponse.ad = n.adResponse.ads[0], n.adResponse.ad.video = n.adResponse.ad.rtb.video, n.vastXml = e.rtb.video.content, e.renderer_url && (i = I()(t.bids, function (e) {
                      return e.bidId === r.uuid;
                    }), s = _.deepAccess(i, "renderer.options"), n.renderer = function (e, r) {
                      var t = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {},
                          a = f.a.install({
                        id: r.renderer_id,
                        url: r.renderer_url,
                        config: t,
                        loaded: !1,
                        adUnitCode: e
                      });

                      try {
                        a.setRender(D);
                      } catch (e) {
                        _.logWarn("Prebid Error calling setRender on renderer", e);
                      }

                      return a.setEventHandlers({
                        impression: function impression() {
                          return _.logMessage("AppNexus outstream video impression event");
                        },
                        loaded: function loaded() {
                          return _.logMessage("AppNexus outstream video loaded event");
                        },
                        ended: function ended() {
                          _.logMessage("AppNexus outstream renderer video event"), document.querySelector("#".concat(e)).style.display = "none";
                        }
                      }), a;
                    }(n.adUnitCode, e, s));
                    break;

                  case v.a:
                    n.vastUrl = e.notify_url + "&redir=" + encodeURIComponent(e.rtb.video.asset_url);
                }
              } else if (e.rtb[g.c]) {
                var c = e.rtb[g.c],
                    u = e.viewability.config.replace("src=", "data-src="),
                    p = c.javascript_trackers;
                null == p ? p = u : _.isStr(p) ? p = [p, u] : p.push(u), n[g.c] = {
                  title: c.title,
                  body: c.desc,
                  body2: c.desc2,
                  cta: c.ctatext,
                  rating: c.rating,
                  sponsoredBy: c.sponsored,
                  privacyLink: c.privacy_link,
                  address: c.address,
                  downloads: c.downloads,
                  likes: c.likes,
                  phone: c.phone,
                  price: c.price,
                  salePrice: c.saleprice,
                  clickUrl: c.link.url,
                  displayUrl: c.displayurl,
                  clickTrackers: c.link.click_trackers,
                  impressionTrackers: c.impression_trackers,
                  javascriptTrackers: p
                }, c.main_img && (n["native"].image = {
                  url: c.main_img.url,
                  height: c.main_img.height,
                  width: c.main_img.width
                }), c.icon && (n["native"].icon = {
                  url: c.icon.url,
                  height: c.icon.height,
                  width: c.icon.width
                });
              } else {
                b(n, {
                  width: e.rtb.banner.width,
                  height: e.rtb.banner.height,
                  ad: e.rtb.banner.content
                });

                try {
                  var m = e.rtb.trackers[0].impression_urls[0],
                      l = _.createTrackPixelHtml(m);

                  n.ad += l;
                } catch (e) {
                  _.logError("Error appending tracking pixel", e);
                }
              }

              return n;
            }(e, n, s)).mediaType = (a = n.ad_type) === g.d ? g.d : a === g.c ? g.c : g.b, o.push(t));
          }), e.debug && e.debug.debug_info && (t = (t = "AppNexus Debug Auction for Prebid\n\n" + e.debug.debug_info).replace(/(<td>|<th>)/gm, "\t").replace(/(<\/td>|<\/th>)/gm, "\n").replace(/^<br>/gm, "").replace(/(<br>\n|<br>)/gm, "\n").replace(/<h1>(.*)<\/h1>/gm, "\n\n===== $1 =====\n\n").replace(/<h[2-6]>(.*)<\/h[2-6]>/gm, "\n\n*** $1 ***\n\n").replace(/(<([^>]+)>)/gim, ""), _.logMessage("https://console.appnexus.com/docs/understanding-the-debug-auction"), _.logMessage(t)), o;
          var a = "in response for ".concat(s.bidderCode, " adapter");
          return e && e.error && (a += ": ".concat(e.error)), _.logError(a), o;
        },
        getMappingFileInfo: function getMappingFileInfo() {
          return {
            url: "https://acdn.adnxs.com/prebid/appnexus-mapping/mappings.json",
            refreshInDays: 7
          };
        },
        getUserSyncs: function getUserSyncs(e) {
          if (e.iframeEnabled) return [{
            type: "iframe",
            url: "https://acdn.adnxs.com/ib/static/usersync/v3/async_usersync.html"
          }];
        },
        transformBidParams: function transformBidParams(t, e) {
          return t = _.convertTypes({
            member: "string",
            invCode: "string",
            placementId: "number",
            keywords: _.transformBidderParamKeywords
          }, t), e && (t.use_pmt_rule = "boolean" == typeof t.usePaymentRule && t.usePaymentRule, t.usePaymentRule && delete t.usePaymentRule, h(t.keywords) && t.keywords.forEach(E), Object.keys(t).forEach(function (e) {
            var r = _.convertCamelToUnderscore(e);

            r !== e && (t[r] = t[e], delete t[e]);
          })), t;
        },
        onBidWon: function onBidWon(e) {
          e["native"] && function (e) {
            var r = function (e) {
              var r;
              if (_.isStr(e) && R(e)) r = e;else if (_.isArray(e)) for (var t = 0; t < e.length; t++) {
                var a = e[t];
                R(a) && (r = a);
              }
              return r;
            }(e["native"].javascriptTrackers);

            if (r) for (var t = "pbjs_adid=" + e.adId + ";pbjs_auc=" + e.adUnitCode, a = function (e) {
              var r = e.indexOf('src="') + 5,
                  t = e.indexOf('"', r);
              return e.substring(r, t);
            }(r), n = a.replace("dom_id=%native_dom_id%", t), i = document.getElementsByTagName("iframe"), s = !1, o = 0; o < i.length && !s; o++) {
              var d = i[o];

              try {
                var c = d.contentDocument || d.contentWindow.document;
                if (c) for (var u = c.getElementsByTagName("script"), p = 0; p < u.length && !s; p++) {
                  var m = u[p];
                  m.getAttribute("data-src") == a && (m.setAttribute("src", n), m.setAttribute("data-src", ""), m.removeAttribute && m.removeAttribute("data-src"), s = !0);
                }
              } catch (e) {
                if (!(e instanceof DOMException && "SecurityError" === e.name)) throw e;
              }
            }
          }(e);
        }
      };

      function h(e) {
        return _.isArray(e) && 0 < e.length;
      }

      function E(e) {
        h(e.value) && "" === e.value[0] && delete e.value;
      }

      function R(e) {
        var r = e.match(d),
            t = null != r && 1 <= r.length,
            a = e.match(m),
            n = null != a && 1 <= a.length;
        return e.startsWith(o) && n && t;
      }

      function O(r) {
        var e,
            t,
            n,
            i,
            a = {};
        a.sizes = j(r.sizes), a.primary_size = a.sizes[0], a.ad_types = [], a.uuid = r.bidId, r.params.placementId ? a.id = parseInt(r.params.placementId, 10) : a.code = r.params.invCode, a.allow_smaller_sizes = r.params.allowSmallerSizes || !1, a.use_pmt_rule = r.params.usePaymentRule || !1, a.prebid = !0, a.disable_psa = !0, r.params.reserve && (a.reserve = r.params.reserve), r.params.position && (a.position = {
          above: 1,
          below: 2
        }[r.params.position] || 0), r.params.trafficSourceCode && (a.traffic_source_code = r.params.trafficSourceCode), r.params.privateSizes && (a.private_sizes = j(r.params.privateSizes)), r.params.supplyType && (a.supply_type = r.params.supplyType), r.params.pubClick && (a.pubclick = r.params.pubClick), r.params.extInvCode && (a.ext_inv_code = r.params.extInvCode), r.params.externalImpId && (a.external_imp_id = r.params.externalImpId), _.isEmpty(r.params.keywords) || (0 < (e = _.transformBidderParamKeywords(r.params.keywords)).length && e.forEach(E), a.keywords = e), r.mediaType !== g.c && !_.deepAccess(r, "mediaTypes.".concat(g.c)) || (a.ad_types.push(g.c), 0 === a.sizes.length && (a.sizes = j([1, 1])), r.nativeParams && (n = r.nativeParams, i = {}, Object.keys(n).forEach(function (e) {
          var r,
              t = p[e] && p[e].serverName || p[e] || e,
              a = p[e] && p[e].requiredParams;
          i[t] = b({}, a, n[e]), t !== p.image.serverName && t !== p.icon.serverName || !i[t].sizes || (r = i[t].sizes, (_.isArrayOfNums(r) || _.isArray(r) && 0 < r.length && r.every(function (e) {
            return _.isArrayOfNums(e);
          })) && (i[t].sizes = j(i[t].sizes))), t === p.privacyLink && (i.privacy_supported = !0);
        }), t = i, a[g.c] = {
          layouts: [t]
        }));

        var s = _.deepAccess(r, "mediaTypes.".concat(g.d)),
            o = _.deepAccess(r, "mediaTypes.video.context");

        a.hb_source = s && "adpod" === o ? 7 : 1, r.mediaType !== g.d && !s || a.ad_types.push(g.d), (r.mediaType === g.d || s && "outstream" !== o) && (a.require_asset_url = !0), r.params.video && (a.video = {}, Object.keys(r.params.video).filter(function (e) {
          return x()(u, e);
        }).forEach(function (e) {
          return a.video[e] = r.params.video[e];
        })), r.renderer && (a.video = b({}, a.video, {
          custom_renderer_present: !0
        }));
        var d = I()(c.a.getAdUnits(), function (e) {
          return r.transactionId === e.transactionId;
        });
        return d && d.mediaTypes && d.mediaTypes.banner && a.ad_types.push(g.b), 0 === a.ad_types.length && delete a.ad_types, a;
      }

      function j(e) {
        var r = [],
            t = {};
        if (_.isArray(e) && 2 === e.length && !_.isArray(e[0])) t.width = parseInt(e[0], 10), t.height = parseInt(e[1], 10), r.push(t);else if ("object" === i(e)) for (var a = 0; a < e.length; a++) {
          var n = e[a];
          (t = {}).width = parseInt(n[0], 10), t.height = parseInt(n[1], 10), r.push(t);
        }
        return r;
      }

      function P(e) {
        return !!e.params.user;
      }

      function N(e) {
        return !!parseInt(e.params.member, 10);
      }

      function U(e) {
        if (e.params) return !!e.params.app;
      }

      function q(e) {
        return e.params && e.params.app ? !!e.params.app.id : !!e.params.app;
      }

      function M(e) {
        return !!e.debug;
      }

      function z(e) {
        return e.mediaTypes && e.mediaTypes.video && e.mediaTypes.video.context === g.a;
      }

      function B(e, r, t) {
        _.isEmpty(e.video) && (e.video = {}), e.video[r] = t;
      }

      function D(e) {
        e.renderer.push(function () {
          window.ANOutstreamVideo.renderAd({
            tagId: e.adResponse.tag_id,
            sizes: [e.getSize().split("x")],
            targetId: e.adUnitCode,
            uuid: e.adResponse.uuid,
            adResponse: e.adResponse,
            rendererOptions: e.renderer.getConfig()
          }, function (e, r, t) {
            e.renderer.handleVideoEvent({
              id: r,
              eventName: t
            });
          }.bind(null, e));
        });
      }

      Object(y.registerBidder)(l);
    }
  }, [209]);
  pbjsChunk([218], {
    249: function _(a, t, e) {
      a.exports = e(250);
    },
    250: function _(a, t, e) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), e.d(t, "registerAdserver", function () {
        return g;
      }), t.getAdserverCategoryHook = p, t.initTranslation = b;
      var i = e(3),
          r = e(13),
          n = e(4),
          o = e(0),
          l = e(42),
          s = "iabToFwMappingkey",
          c = "iabToFwMappingkeyPub",
          d = 1,
          g = Object(r.b)("async", function (a) {
        "freewheel" === a && b("https://cdn.jsdelivr.net/gh/prebid/category-mapping-file@1/freewheel-mapping.json", s);
      }, "registerAdserver");

      function p(a, t, e) {
        if (!e) return a.call(this, t);
        if (!i.b.getConfig("adpod.brandCategoryExclusion")) return a.call(this, t, e);
        var r = i.b.getConfig("brandCategoryTranslation.translationFile") ? c : s;

        if (e.meta && !e.meta.adServerCatId) {
          var n = Object(o.getDataFromLocalStorage)(r);

          if (n) {
            try {
              n = JSON.parse(n);
            } catch (a) {
              Object(o.logError)("Failed to parse translation mapping file");
            }

            e.meta.iabSubCatId && n.mapping && n.mapping[e.meta.iabSubCatId] ? e.meta.adServerCatId = n.mapping[e.meta.iabSubCatId].id : e.meta.adServerCatId = void 0;
          } else Object(o.logError)("Translation mapping data not found in local storage");
        }

        a.call(this, t, e);
      }

      function b(a, t) {
        Object(r.d)(l.c, p, 50);
        var e = Object(o.getDataFromLocalStorage)(t);
        (!e || Object(o.timestamp)() < e.lastUpdated + 24 * d * 60 * 60 * 1e3) && Object(n.a)(a, {
          success: function success(a) {
            try {
              (a = JSON.parse(a)).lastUpdated = Object(o.timestamp)(), Object(o.setDataInLocalStorage)(t, JSON.stringify(a));
            } catch (a) {
              Object(o.logError)("Failed to parse translation mapping file");
            }
          },
          error: function error() {
            Object(o.logError)("Failed to load brand category translation file.");
          }
        });
      }

      g(), i.b.getConfig("brandCategoryTranslation", function (a) {
        var t;
        (t = a.brandCategoryTranslation).translationFile && b(t.translationFile, c);
      });
    }
  }, [249]);
  pbjsChunk([209], {
    267: function _(n, t, e) {
      n.exports = e(268);
    },
    268: function _(n, t, e) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), e.d(t, "userCMP", function () {
        return l;
      }), e.d(t, "consentTimeout", function () {
        return u;
      }), e.d(t, "allowAuction", function () {
        return g;
      }), e.d(t, "gdprScope", function () {
        return p;
      }), e.d(t, "staticConsentData", function () {
        return m;
      }), t.requestBidsHook = M, t.resetConsentData = function () {
        C = void 0, l = void 0, w = 0, a.gdprDataHandler.setConsentData(null);
      }, t.setConsentConfig = x;
      var d = e(0),
          o = e(3),
          a = e(7),
          i = e(11),
          s = e.n(i),
          r = e(269),
          f = e.n(r);

      function c(n) {
        return (c = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (n) {
          return _typeof4(n);
        } : function (n) {
          return n && "function" == typeof Symbol && n.constructor === Symbol && n !== Symbol.prototype ? "symbol" : _typeof4(n);
        })(n);
      }

      var l,
          u,
          g,
          p,
          m,
          C,
          b = "iab",
          v = 1e4,
          y = !0,
          w = 0,
          D = !1,
          k = {
        iab: function iab(o, e, s) {
          function n(n, t) {
            d.logInfo("Received a response from CMP", n), t ? ("tcloaded" === n.eventStatus || "useractioncomplete" === n.eventStatus || "cmpuishown" === n.eventStatus && 0 < n.tcString.length && !0 === n.purposeOneTreatment) && o(n, s) : e("CMP unable to register callback function.  Please check CMP setup.", s);
          }

          var t = function () {
            var t = {};

            function e() {
              t.getConsentData && t.getVendorConsents && (d.logInfo("Received all requested responses from CMP", t), o(t, s));
            }

            return {
              consentDataCallback: function consentDataCallback(n) {
                t.getConsentData = n, e();
              },
              vendorConsentsCallback: function vendorConsentsCallback(n) {
                t.getVendorConsents = n, e();
              }
            };
          }(),
              u = {},
              a = function () {
            for (var n, t, e = window; !n;) {
              try {
                if ("function" == typeof e.__tcfapi || "function" == typeof e.__cmp) {
                  t = "function" == typeof e.__tcfapi ? (w = 2, e.__tcfapi) : (w = 1, e.__cmp), n = e;
                  break;
                }
              } catch (n) {}

              try {
                if (e.frames.__tcfapiLocator) {
                  w = 2, n = e;
                  break;
                }
              } catch (n) {}

              try {
                if (e.frames.__cmpLocator) {
                  w = 1, n = e;
                  break;
                }
              } catch (n) {}

              if (e === window.top) break;
              e = e.parent;
            }

            return {
              cmpFrame: n,
              cmpFunction: t
            };
          }(),
              i = a.cmpFrame,
              r = a.cmpFunction;

          if (!i) return e("CMP not found.", s);
          d.isFn(r) ? (d.logInfo("Detected CMP API is directly accessible, calling it now..."), 1 === w ? (r("getConsentData", null, t.consentDataCallback), r("getVendorConsents", null, t.vendorConsentsCallback)) : 2 === w && r("addEventListener", w, n)) : 1 === w && window.$sf && window.$sf.ext && "function" == typeof window.$sf.ext.cmp ? (d.logInfo("Detected Prebid.js is encased in a SafeFrame and CMP is registered, calling it now..."), c("getConsentData", t.consentDataCallback), c("getVendorConsents", t.vendorConsentsCallback)) : (d.logInfo("Detected CMP is outside the current iframe where Prebid.js is located, calling it now..."), 1 === w ? (l("getConsentData", i, t.consentDataCallback), l("getVendorConsents", i, t.vendorConsentsCallback)) : 2 === w && l("addEventListener", i, n));

          function c(o, a) {
            var n,
                t = s.adUnits,
                e = 1,
                i = 1;
            Array.isArray(t) && 0 < t.length && (e = (n = d.getAdUnitSizes(t[0]))[0][0], i = n[0][1]), window.$sf.ext.register(e, i, function (n, t) {
              var e;
              "cmpReturn" === n && (e = "getConsentData" === o ? t.vendorConsentData : t.vendorConsents, a(e));
            }), window.$sf.ext.cmp(o);
          }

          function l(n, l, t) {
            var d = 2 === w ? "__tcfapi" : "__cmp";
            window[d] = function (n, t, e) {
              var o,
                  a,
                  i,
                  s = Math.random() + "",
                  r = "".concat(d, "Call"),
                  c = (i = {
                command: n,
                parameter: t,
                callId: s
              }, (a = r) in (o = {}) ? Object.defineProperty(o, a, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
              }) : o[a] = i, o);
              1 !== w && (c[r].version = w), u[s] = e, l.postMessage(c, "*");
            }, window.addEventListener("message", function (n) {
              var t = "".concat(d, "Return"),
                  e = "string" == typeof n.data && f()(n.data, t) ? JSON.parse(n.data) : n.data;
              {
                var o;
                e[t] && e[t].callId && (o = e[t], void 0 !== u[o.callId] && u[o.callId](o.returnValue, o.success));
              }
            }, !1), window[d](n, null, t);
          }
        },
        "static": function _static(n, t, e) {
          n(m, e);
        }
      };

      function M(n, t) {
        var e = {
          context: this,
          args: [t],
          nextFn: n,
          adUnits: t.adUnits || pbjs.adUnits,
          bidsBackHandler: t.bidsBackHandler,
          haveExited: !1,
          timer: null
        };
        return C ? (d.logInfo("User consent information already known.  Pulling internally stored information..."), _(null, e)) : s()(Object.keys(k), l) ? (k[l].call(this, h, P, e), void (e.haveExited || (0 === u ? h(void 0, e) : e.timer = setTimeout(function (n) {
          P("CMP workflow exceeded timeout threshold.", n);
        }.bind(null, e), u)))) : (d.logWarn("CMP framework (".concat(l, ") is not a supported framework.  Aborting consentManagement module and resuming auction.")), e.nextFn.apply(e.context, e.args));
      }

      function h(e, n) {
        "static" === l && 2 === (w = e.getConsentData ? 1 : e.getTCData ? 2 : 0) && (e = e.getTCData);
        var t = 1 === w ? function (n) {
          var t = n && n.getConsentData && n.getConsentData.gdprApplies;
          return !("boolean" == typeof t && (!0 !== t || d.isStr(n.getConsentData.consentData) && d.isPlainObject(n.getVendorConsents) && 1 < Object.keys(n.getVendorConsents).length));
        } : 2 === w ? function () {
          var n = e && e.gdprApplies,
              t = e && e.tcString;
          return !("boolean" == typeof n && (!0 !== n || d.isStr(t)));
        } : null;
        d.isFn(t) ? t(e) ? P("CMP returned unexpected value during lookup process.", n, e) : (clearTimeout(n.timer), S(e), _(null, n)) : P("Unable to derive CMP version to process data.  Consent object does not conform to TCF v1 or v2 specs.", n, e);
      }

      function P(n, t, e) {
        clearTimeout(t.timer), g && S(void 0), _(n, t, e);
      }

      function S(n) {
        (C = 1 === w ? {
          consentString: n ? n.getConsentData.consentData : void 0,
          vendorData: n ? n.getVendorConsents : void 0,
          gdprApplies: n ? n.getConsentData.gdprApplies : p
        } : {
          consentString: n ? n.tcString : void 0,
          vendorData: n || void 0,
          gdprApplies: n ? n.gdprApplies : p
        }).apiVersion = w, a.gdprDataHandler.setConsentData(C);
      }

      function _(n, t, e) {
        var o, a, i;
        !1 === t.haveExited && (t.haveExited = !0, o = t.context, a = t.args, i = t.nextFn, n ? g ? (d.logWarn(n + " Resuming auction without consent data as per consentManagement config.", e), i.apply(o, a)) : (d.logError(n + " Canceling auction as per consentManagement config.", e), "function" == typeof t.bidsBackHandler ? t.bidsBackHandler() : d.logError("Error executing bidsBackHandler")) : i.apply(o, a));
      }

      function x(n) {
        (n = n.gdpr || n.usp ? n.gdpr : n) && "object" === c(n) ? (d.isStr(n.cmpApi) ? l = n.cmpApi : (l = b, d.logInfo("consentManagement config did not specify cmp.  Using system default setting (".concat(b, ")."))), d.isNumber(n.timeout) ? u = n.timeout : (u = v, d.logInfo("consentManagement config did not specify timeout.  Using system default setting (".concat(v, ")."))), "boolean" == typeof n.allowAuctionWithoutConsent ? g = n.allowAuctionWithoutConsent : (g = y, d.logInfo("consentManagement config did not specify allowAuctionWithoutConsent.  Using system default setting (".concat(y, ")."))), p = !0 === n.defaultGdprScope, d.logInfo("consentManagement module has been activated..."), "static" === l && (d.isPlainObject(n.consentData) ? (m = n.consentData, u = 0) : d.logError("consentManagement config with cmpApi: 'static' did not specify consentData. No consents will be available to adapters.")), D || pbjs.requestBids.before(M, 50), D = !0) : d.logWarn("consentManagement config not defined, exiting consent manager");
      }

      o.b.getConfig("consentManagement", function (n) {
        return x(n.consentManagement);
      });
    }
  }, [267]);
  pbjsChunk([0], {
    284: function _(t, e, r) {
      t.exports = r(285);
    },
    285: function _(t, e, r) {
      Object.defineProperty(e, "__esModule", {
        value: !0
      }), r.d(e, "ADAPTER_VERSION", function () {
        return m;
      }), r.d(e, "PROFILE_ID_PUBLISHERTAG", function () {
        return y;
      }), r.d(e, "spec", function () {
        return n;
      }), e.tryGetCriteoFastBid = A;
      var a = r(28),
          o = r(1),
          c = r(3),
          h = r(2),
          p = r(9),
          f = r(0),
          i = r(12),
          l = r.n(i),
          u = r(286);
      r.n(u);

      function d() {
        return (d = Object.assign || function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var r = arguments[e];

            for (var o in r) {
              Object.prototype.hasOwnProperty.call(r, o) && (t[o] = r[o]);
            }
          }

          return t;
        }).apply(this, arguments);
      }

      var m = 26,
          v = "criteo",
          y = 185,
          b = 65537,
          g = "ztQYwCE5BU7T9CDM5he6rKoabstXRmkzx54zFPZkWbK530dwtLBDeaWBMxHBUT55CYyboR/EZ4efghPi3CoNGfGWezpjko9P6p2EwGArtHEeS4slhu/SpSIFMjG6fdrpRoNuIAMhq1Z+Pr/+HOd1pThFKeGFr2/NhtAg+TXAzaU=",
          n = {
        code: v,
        supportedMediaTypes: [h.b, h.d, h.c],
        isBidRequestValid: function isBidRequestValid(t) {
          return !(!t || !t.params || !t.params.zoneId && !t.params.networkId) && !(S(t) && !function (e) {
            var r = !0;

            if (["mimes", "playerSize", "maxduration", "protocols", "api"].forEach(function (t) {
              void 0 === f.deepAccess(e, "mediaTypes.video." + t) && (r = !1, f.logError("Criteo Bid Adapter: mediaTypes.video." + t + " is required"));
            }), ["skip", "placement", "playbackmethod"].forEach(function (t) {
              void 0 === f.deepAccess(e, "params.video." + t) && (r = !1, f.logError("Criteo Bid Adapter: params.video." + t + " is required"));
            }), r) {
              if ("instream" == e.mediaTypes.video.context && 1 === e.params.video.placement) return 1;
              if ("outstream" == e.mediaTypes.video.context && 1 !== e.params.video.placement) return 1;
            }

            return;
          }(t));
        },
        buildRequests: function buildRequests(t, e) {
          var r, o, i, n, s;
          if (d(e, {
            ceh: c.b.getConfig("criteo.ceh")
          }), T() || (window.Criteo = window.Criteo || {}, window.Criteo.usePrebidEvents = !1, A(), setTimeout(function () {
            Object(a.a)("https://static.criteo.net/js/ld/publishertag.prebid.js", v);
          }, e.timeout)), s = T() ? (r = new Criteo.PubTag.Adapters.Prebid(y, m, t, e, "3.13.0-pre"), o = c.b.getConfig("enableSendAllBids"), r.setEnableSendAllBids && "function" == typeof r.setEnableSendAllBids && "boolean" == typeof o && r.setEnableSendAllBids(o), n = r.buildCdbUrl(), r.buildCdbRequest()) : (n = function (t) {
            var e = "https://bidder.criteo.com/cdb";
            e += "?profileId=207", e += "&av=" + String(m), e += "&wv=" + encodeURIComponent("3.13.0-pre"), e += "&cb=" + String(Math.floor(99999999999 * Math.random())), t.amp && (e += "&im=1");
            t.debug && (e += "&debug=1");
            t.noLog && (e += "&nolog=1");
            return e;
          }(i = function (t, e) {
            var r = "";
            e && e.refererInfo && (r = e.refererInfo.referer);
            var o = Object(p.c)(r).search,
                i = {
              url: r,
              debug: "1" === o.pbt_debug,
              noLog: "1" === o.pbt_nolog,
              amp: !1
            };
            return t.forEach(function (t) {
              "amp" === t.params.integrationMode && (i.amp = !0);
            }), i;
          }(t, e)), function (t, e, r) {
            var n,
                o = {
              publisher: {
                url: t.url
              },
              slots: e.map(function (t) {
                n = t.params.networkId || n;
                var e,
                    r,
                    o,
                    i = {
                  impid: t.adUnitCode,
                  transactionid: t.transactionId,
                  auctionId: t.auctionId,
                  sizes: (e = t, C(f.deepAccess(e, "mediaTypes.banner.sizes") || e.sizes))
                };
                return t.params.zoneId && (i.zoneid = t.params.zoneId), t.params.publisherSubId && (i.publishersubid = t.params.publisherSubId), (t.params.nativeCallback || f.deepAccess(t, "mediaTypes.".concat(h.c))) && (i["native"] = !0), S(t) && ((r = {
                  playersizes: (o = t, C(f.deepAccess(o, "mediaTypes.video.playerSize"))),
                  mimes: t.mediaTypes.video.mimes,
                  protocols: t.mediaTypes.video.protocols,
                  maxduration: t.mediaTypes.video.maxduration,
                  api: t.mediaTypes.video.api
                }).skip = t.params.video.skip, r.placement = t.params.video.placement, r.minduration = t.params.video.minduration, r.playbackmethod = t.params.video.playbackmethod, r.startdelay = t.params.video.startdelay, i.video = r), i;
              })
            };
            n && (o.publisher.networkid = n);
            o.user = {}, r && r.ceh && (o.user.ceh = r.ceh);
            r && r.gdprConsent && (o.gdprConsent = {}, void 0 !== r.gdprConsent.gdprApplies && (o.gdprConsent.gdprApplies = !!r.gdprConsent.gdprApplies), r.gdprConsent.vendorData && r.gdprConsent.vendorData.vendorConsents && void 0 !== r.gdprConsent.vendorData.vendorConsents[91..toString(10)] && (o.gdprConsent.consentGiven = !!r.gdprConsent.vendorData.vendorConsents[91..toString(10)]), void 0 !== r.gdprConsent.consentString && (o.gdprConsent.consentData = r.gdprConsent.consentString));
            r && r.uspConsent && (o.user.uspIab = r.uspConsent);
            return o;
          }(i, t, e))) return {
            method: "POST",
            url: n,
            data: s,
            bidRequests: t
          };
        },
        interpretResponse: function interpretResponse(t, u) {
          var e = t.body || t;

          if (T()) {
            var r = Criteo.PubTag.Adapters.Prebid.GetAdapter(u);
            if (r) return r.interpretResponse(e, u);
          }

          var d = [];
          return e && e.slots && f.isArray(e.slots) && e.slots.forEach(function (e) {
            var t,
                r,
                o,
                i,
                n,
                s = l()(u.bidRequests, function (t) {
              return t.adUnitCode === e.impid && (!t.params.zoneId || parseInt(t.params.zoneId) === e.zoneid);
            }),
                a = s.bidId,
                p = {
              requestId: a,
              adId: e.bidId || f.getUniqueIdentifierStr(),
              cpm: e.cpm,
              currency: e.currency,
              netRevenue: !0,
              ttl: e.ttl || 60,
              creativeId: a,
              width: e.width,
              height: e.height,
              dealId: e.dealCode
            };
            if (e["native"]) {
              if (s.params.nativeCallback) p.ad = (r = a, o = e["native"], i = s.params.nativeCallback, n = "criteo_prebid_native_slots", window[n] = window[n] || {}, window[n][r] = {
                callback: i,
                payload: o
              }, '\n<script type="text/javascript">\nfor (var i = 0; i < 10; ++i) {\n var slots = window.parent.'.concat(n, ';\n  if(!slots){continue;}\n  var responseSlot = slots["').concat(r, '"];\n  responseSlot.callback(responseSlot.payload);\n  break;\n}\n<\/script>'));else {
                if (!0 === c.b.getConfig("enableSendAllBids")) return;
                p["native"] = {
                  title: (t = e["native"]).products[0].title,
                  body: t.products[0].description,
                  sponsoredBy: t.advertiser.description,
                  icon: t.advertiser.logo,
                  image: t.products[0].image,
                  clickUrl: t.products[0].click_url,
                  privacyLink: t.privacy.optout_click_url,
                  privacyIcon: t.privacy.optout_image_url,
                  cta: t.products[0].call_to_action,
                  price: t.products[0].price,
                  impressionTrackers: t.impression_pixels.map(function (t) {
                    return t.url;
                  })
                }, p.mediaType = h.c;
              }
            } else e.video ? (p.vastUrl = e.displayurl, p.mediaType = h.d) : p.ad = e.creative;
            d.push(p);
          }), d;
        },
        onTimeout: function onTimeout(t) {
          T() && Criteo.PubTag.Adapters.Prebid.GetAdapter(t.auctionId).handleBidTimeout();
        },
        onBidWon: function onBidWon(t) {
          T() && Criteo.PubTag.Adapters.Prebid.GetAdapter(t.auctionId).handleBidWon(t);
        },
        onSetTargeting: function onSetTargeting(t) {
          T() && Criteo.PubTag.Adapters.Prebid.GetAdapter(t.auctionId).handleSetTargeting(t);
        }
      };

      function T() {
        return "undefined" != typeof Criteo && Criteo.PubTag && Criteo.PubTag.Adapters && Criteo.PubTag.Adapters.Prebid;
      }

      function s(t) {
        return t[0] + "x" + t[1];
      }

      function C(t) {
        return Array.isArray(t[0]) ? t.map(s) : [s(t)];
      }

      function S(t) {
        return void 0 !== f.deepAccess(t, "params.video") && void 0 !== f.deepAccess(t, "mediaTypes.video");
      }

      function A() {
        try {
          var t,
              e,
              r,
              o,
              i,
              n = "criteo_fast_bid",
              s = "// Hash: ",
              a = f.getDataFromLocalStorage(n);
          null !== a && (t = a.indexOf("\n"), (e = a.substr(0, t).trim()).substr(0, s.length) !== s ? (f.logWarn("No hash found in FastBid"), f.removeDataFromLocalStorage(n)) : (r = e.substr(s.length), o = a.substr(t + 1), Object(u.verify)(o, r, g, b) ? (f.logInfo("Using Criteo FastBid"), (i = document.createElement("script")).type = "text/javascript", i.text = o, f.insertElement(i)) : (f.logWarn("Invalid Criteo FastBid found"), f.removeDataFromLocalStorage(n))));
        } catch (t) {}
      }

      Object(o.registerBidder)(n);
    },
    286: function _(t, e, r) {
      Object.defineProperty(e, "__esModule", {
        value: !0
      });
      var a = r(287),
          p = r(288);

      e.verify = function (t, e, r, o) {
        var i = new a.BigInteger(a.b64toHex(e)),
            n = new a.BigInteger(a.b64toHex(r)),
            s = i.modPowInt(o, n);
        return a.removeExtraSymbols(s.toHexString()) === p.Sha256.hash(t);
      };
    },
    287: function _(t, e, r) {
      var o;
      Object.defineProperty(e, "__esModule", {
        value: !0
      });
      var i = (g.prototype.toHexString = function () {
        if (this.s < 0) return "-" + this.negate().toHexString();
        var t,
            e = !1,
            r = "",
            o = this.t,
            i = this.DB - o * this.DB % 4;
        if (0 < o--) for (i < this.DB && 0 < (t = this[o] >> i) && (e = !0, r = d(t)); 0 <= o;) {
          i < 4 ? (t = (this[o] & (1 << i) - 1) << 4 - i, t |= this[--o] >> (i += this.DB - 4)) : (t = this[o] >> (i -= 4) & 15, i <= 0 && (i += this.DB, --o)), 0 < t && (e = !0), e && (r += d(t));
        }
        return e ? r : "0";
      }, g.prototype.fromHexString = function (t) {
        if (null !== t) {
          this.t = 0, this.s = 0;

          for (var e = t.length, r = !1, o = 0; 0 <= --e;) {
            var i = p(t, e);
            i < 0 ? "-" == t.charAt(e) && (r = !0) : (r = !1, 0 == o ? this[this.t++] = i : o + 4 > this.DB ? (this[this.t - 1] |= (i & (1 << this.DB - o) - 1) << o, this[this.t++] = i >> this.DB - o) : this[this.t - 1] |= i << o, (o += 4) >= this.DB && (o -= this.DB));
          }

          this.clamp(), r && g.ZERO.subTo(this, this);
        }
      }, g.prototype.negate = function () {
        var t = T();
        return g.ZERO.subTo(this, t), t;
      }, g.prototype.abs = function () {
        return this.s < 0 ? this.negate() : this;
      }, g.prototype.mod = function (t) {
        var e = T();
        return this.abs().divRemTo(t, null, e), this.s < 0 && 0 < e.compareTo(g.ZERO) && t.subTo(e, e), e;
      }, g.prototype.copyTo = function (t) {
        for (var e = this.t - 1; 0 <= e; --e) {
          t[e] = this[e];
        }

        t.t = this.t, t.s = this.s;
      }, g.prototype.lShiftTo = function (t, e) {
        for (var r = t % this.DB, o = this.DB - r, i = (1 << o) - 1, n = Math.floor(t / this.DB), s = this.s << r & this.DM, a = this.t - 1; 0 <= a; --a) {
          e[a + n + 1] = this[a] >> o | s, s = (this[a] & i) << r;
        }

        for (a = n - 1; 0 <= a; --a) {
          e[a] = 0;
        }

        e[n] = s, e.t = this.t + n + 1, e.s = this.s, e.clamp();
      }, g.prototype.invDigit = function () {
        if (this.t < 1) return 0;
        var t = this[0];
        if (0 == (1 & t)) return 0;
        var e = 3 & t;
        return 0 < (e = (e = (e = (e = e * (2 - (15 & t) * e) & 15) * (2 - (255 & t) * e) & 255) * (2 - ((65535 & t) * e & 65535)) & 65535) * (2 - t * e % this.DV) % this.DV) ? this.DV - e : -e;
      }, g.prototype.dlShiftTo = function (t, e) {
        for (var r = this.t - 1; 0 <= r; --r) {
          e[r + t] = this[r];
        }

        for (r = t - 1; 0 <= r; --r) {
          e[r] = 0;
        }

        e.t = this.t + t, e.s = this.s;
      }, g.prototype.squareTo = function (t) {
        for (var e = this.abs(), r = t.t = 2 * e.t; 0 <= --r;) {
          t[r] = 0;
        }

        for (r = 0; r < e.t - 1; ++r) {
          var o = e.am(r, e[r], t, 2 * r, 0, 1);
          (t[r + e.t] += e.am(r + 1, 2 * e[r], t, 2 * r + 1, o, e.t - r - 1)) >= e.DV && (t[r + e.t] -= e.DV, t[r + e.t + 1] = 1);
        }

        0 < t.t && (t[t.t - 1] += e.am(r, e[r], t, 2 * r, 0, 1)), t.s = 0, t.clamp();
      }, g.prototype.multiplyTo = function (t, e) {
        var r = this.abs(),
            o = t.abs(),
            i = r.t;

        for (e.t = i + o.t; 0 <= --i;) {
          e[i] = 0;
        }

        for (i = 0; i < o.t; ++i) {
          e[i + r.t] = r.am(0, o[i], e, i, 0, r.t);
        }

        e.s = 0, e.clamp(), this.s != t.s && g.ZERO.subTo(e, e);
      }, g.prototype.divRemTo = function (t, e, r) {
        var o = t.abs();

        if (!(o.t <= 0)) {
          var i = this.abs();
          if (i.t < o.t) return null != e && e.fromHexString("0"), void (null != r && this.copyTo(r));
          null == r && (r = T());
          var n = T(),
              s = this.s,
              a = t.s,
              p = this.DB - C(o[o.t - 1]);
          0 < p ? (o.lShiftTo(p, n), i.lShiftTo(p, r)) : (o.copyTo(n), i.copyTo(r));
          var u = n.t,
              d = n[u - 1];

          if (0 != d) {
            var c = d * (1 << this.F1) + (1 < u ? n[u - 2] >> this.F2 : 0),
                h = this.FV / c,
                f = (1 << this.F1) / c,
                l = 1 << this.F2,
                m = r.t,
                v = m - u,
                y = null == e ? T() : e;

            for (n.dlShiftTo(v, y), 0 <= r.compareTo(y) && (r[r.t++] = 1, r.subTo(y, r)), g.ONE.dlShiftTo(u, y), y.subTo(n, n); n.t < u;) {
              n[n.t++] = 0;
            }

            for (; 0 <= --v;) {
              var b = r[--m] == d ? this.DM : Math.floor(r[m] * h + (r[m - 1] + l) * f);
              if ((r[m] += n.am(0, b, r, v, 0, u)) < b) for (n.dlShiftTo(v, y), r.subTo(y, r); r[m] < --b;) {
                r.subTo(y, r);
              }
            }

            null != e && (r.drShiftTo(u, e), s != a && g.ZERO.subTo(e, e)), r.t = u, r.clamp(), 0 < p && r.rShiftTo(p, r), s < 0 && g.ZERO.subTo(r, r);
          }
        }
      }, g.prototype.rShiftTo = function (t, e) {
        e.s = this.s;
        var r = Math.floor(t / this.DB);
        if (r >= this.t) e.t = 0;else {
          var o = t % this.DB,
              i = this.DB - o,
              n = (1 << o) - 1;
          e[0] = this[r] >> o;

          for (var s = r + 1; s < this.t; ++s) {
            e[s - r - 1] |= (this[s] & n) << i, e[s - r] = this[s] >> o;
          }

          0 < o && (e[this.t - r - 1] |= (this.s & n) << i), e.t = this.t - r, e.clamp();
        }
      }, g.prototype.drShiftTo = function (t, e) {
        for (var r = t; r < this.t; ++r) {
          e[r - t] = this[r];
        }

        e.t = Math.max(this.t - t, 0), e.s = this.s;
      }, g.prototype.subTo = function (t, e) {
        for (var r = 0, o = 0, i = Math.min(t.t, this.t); r < i;) {
          o += this[r] - t[r], e[r++] = o & this.DM, o >>= this.DB;
        }

        if (t.t < this.t) {
          for (o -= t.s; r < this.t;) {
            o += this[r], e[r++] = o & this.DM, o >>= this.DB;
          }

          o += this.s;
        } else {
          for (o += this.s; r < t.t;) {
            o -= t[r], e[r++] = o & this.DM, o >>= this.DB;
          }

          o -= t.s;
        }

        e.s = o < 0 ? -1 : 0, o < -1 ? e[r++] = this.DV + o : 0 < o && (e[r++] = o), e.t = r, e.clamp();
      }, g.prototype.clamp = function () {
        for (var t = this.s & this.DM; 0 < this.t && this[this.t - 1] == t;) {
          --this.t;
        }
      }, g.prototype.modPowInt = function (t, e) {
        var r = new (t < 256 || e.isEven() ? c : f)(e);
        return this.exp(t, r);
      }, g.prototype.exp = function (t, e) {
        if (4294967295 < t || t < 1) return g.ONE;
        var r,
            o = T(),
            i = T(),
            n = e.convert(this),
            s = C(t) - 1;

        for (n.copyTo(o); 0 <= --s;) {
          e.sqrTo(o, i), 0 < (t & 1 << s) ? e.mulTo(i, n, o) : (r = o, o = i, i = r);
        }

        return e.revert(o);
      }, g.prototype.isEven = function () {
        return 0 == (0 < this.t ? 1 & this[0] : this.s);
      }, g.prototype.compareTo = function (t) {
        var e = this.s - t.s;
        if (0 != e) return e;
        var r = this.t;
        if (0 != (e = r - t.t)) return this.s < 0 ? -e : e;

        for (; 0 <= --r;) {
          if (0 != (e = this[r] - t[r])) return e;
        }

        return 0;
      }, g.prototype.am1 = function (t, e, r, o, i, n) {
        for (; 0 <= --n;) {
          var s = e * this[t++] + r[o] + i;
          i = Math.floor(s / 67108864), r[o++] = 67108863 & s;
        }

        return i;
      }, g.prototype.am2 = function (t, e, r, o, i, n) {
        for (var s = 32767 & e, a = e >> 15; 0 <= --n;) {
          var p = 32767 & this[t],
              u = this[t++] >> 15,
              d = a * p + u * s;
          i = ((p = s * p + ((32767 & d) << 15) + r[o] + (1073741823 & i)) >>> 30) + (d >>> 15) + a * u + (i >>> 30), r[o++] = 1073741823 & p;
        }

        return i;
      }, g.prototype.am3 = function (t, e, r, o, i, n) {
        for (var s = 16383 & e, a = e >> 14; 0 <= --n;) {
          var p = 16383 & this[t],
              u = this[t++] >> 14,
              d = a * p + u * s;
          i = ((p = s * p + ((16383 & d) << 14) + r[o] + i) >> 28) + (d >> 14) + a * u, r[o++] = 268435455 & p;
        }

        return i;
      }, g);

      function g(t) {
        null !== t && this.fromHexString(t);
      }

      function T() {
        return new i(null);
      }

      function C(t) {
        var e,
            r = 1;
        return 0 != (e = t >>> 16) && (t = e, r += 16), 0 != (e = t >> 8) && (t = e, r += 8), 0 != (e = t >> 4) && (t = e, r += 4), 0 != (e = t >> 2) && (t = e, r += 2), 0 != (e = t >> 1) && (t = e, r += 1), r;
      }

      e.BigInteger = i, e.nbi = T, e.nbits = C;

      for (var n = [], s = "0".charCodeAt(0), a = 0; a <= 9; ++a) {
        n[s++] = a;
      }

      for (s = "a".charCodeAt(0), a = 10; a < 36; ++a) {
        n[s++] = a;
      }

      for (s = "A".charCodeAt(0), a = 10; a < 36; ++a) {
        n[s++] = a;
      }

      function p(t, e) {
        var r = n[t.charCodeAt(e)];
        return null == r ? -1 : r;
      }

      e.intAt = p;
      var u = "0123456789abcdefghijklmnopqrstuvwxyz";

      function d(t) {
        return u.charAt(t);
      }

      e.int2char = d;
      e.b64toHex = function (t) {
        for (var e = "", r = 0, o = 0, i = 0; i < t.length && "=" != t.charAt(i); ++i) {
          var n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(t.charAt(i));
          n < 0 || (r = 0 == r ? (e += d(n >> 2), o = 3 & n, 1) : 1 == r ? (e += d(o << 2 | n >> 4), o = 15 & n, 2) : 2 == r ? (e += d(o), e += d(n >> 2), o = 3 & n, 3) : (e += d(o << 2 | n >> 4), e += d(15 & n), 0));
        }

        return 1 == r && (e += d(o << 2)), e;
      }, e.removeExtraSymbols = function (t) {
        return t.replace(/^1f+00/, "").replace("3031300d060960864801650304020105000420", "");
      };
      var c = (h.prototype.convert = function (t) {
        return t.s < 0 || 0 <= t.compareTo(this.m) ? t.mod(this.m) : t;
      }, h.prototype.revert = function (t) {
        return t;
      }, h.prototype.reduce = function (t) {
        t.divRemTo(this.m, null, t);
      }, h.prototype.mulTo = function (t, e, r) {
        t.multiplyTo(e, r), this.reduce(r);
      }, h.prototype.sqrTo = function (t, e) {
        t.squareTo(e), this.reduce(e);
      }, h);

      function h(t) {
        this.m = t;
      }

      var f = (l.prototype.convert = function (t) {
        var e = T();
        return t.abs().dlShiftTo(this.m.t, e), e.divRemTo(this.m, null, e), t.s < 0 && 0 < e.compareTo(i.ZERO) && this.m.subTo(e, e), e;
      }, l.prototype.revert = function (t) {
        var e = T();
        return t.copyTo(e), this.reduce(e), e;
      }, l.prototype.reduce = function (t) {
        for (; t.t <= this.mt2;) {
          t[t.t++] = 0;
        }

        for (var e = 0; e < this.m.t; ++e) {
          var r = 32767 & t[e],
              o = r * this.mpl + ((r * this.mph + (t[e] >> 15) * this.mpl & this.um) << 15) & t.DM;

          for (t[r = e + this.m.t] += this.m.am(0, o, t, e, 0, this.m.t); t[r] >= t.DV;) {
            t[r] -= t.DV, t[++r]++;
          }
        }

        t.clamp(), t.drShiftTo(this.m.t, t), 0 <= t.compareTo(this.m) && t.subTo(this.m, t);
      }, l.prototype.mulTo = function (t, e, r) {
        t.multiplyTo(e, r), this.reduce(r);
      }, l.prototype.sqrTo = function (t, e) {
        t.squareTo(e), this.reduce(e);
      }, l);

      function l(t) {
        this.m = t, this.mp = t.invDigit(), this.mpl = 32767 & this.mp, this.mph = this.mp >> 15, this.um = (1 << t.DB - 15) - 1, this.mt2 = 2 * t.t;
      }

      function m(t) {
        var e = T();
        return e.fromHexString(t.toString()), e;
      }

      e.nbv = m, i.ZERO = m(0), i.ONE = m(1), o = "Microsoft Internet Explorer" == navigator.appName ? (i.prototype.am = i.prototype.am2, 30) : "Netscape" != navigator.appName ? (i.prototype.am = i.prototype.am1, 26) : (i.prototype.am = i.prototype.am3, 28), i.prototype.DB = o, i.prototype.DM = (1 << o) - 1, i.prototype.DV = 1 << o;
      i.prototype.FV = Math.pow(2, 52), i.prototype.F1 = 52 - o, i.prototype.F2 = 2 * o - 52;
    },
    288: function _(t, e, r) {
      Object.defineProperty(e, "__esModule", {
        value: !0
      });
      var o = (A.hash = function (t) {
        t = A.utf8Encode(t || "");

        for (var e = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], r = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], o = (t += String.fromCharCode(128)).length / 4 + 2, i = Math.ceil(o / 16), n = new Array(i), s = 0; s < i; s++) {
          n[s] = new Array(16);

          for (var a = 0; a < 16; a++) {
            n[s][a] = t.charCodeAt(64 * s + 4 * a) << 24 | t.charCodeAt(64 * s + 4 * a + 1) << 16 | t.charCodeAt(64 * s + 4 * a + 2) << 8 | t.charCodeAt(64 * s + 4 * a + 3) << 0;
          }
        }

        var p = 8 * (t.length - 1) / Math.pow(2, 32),
            u = 8 * (t.length - 1) >>> 0;

        for (n[i - 1][14] = Math.floor(p), n[i - 1][15] = u, s = 0; s < i; s++) {
          for (var d = new Array(64), c = 0; c < 16; c++) {
            d[c] = n[s][c];
          }

          for (c = 16; c < 64; c++) {
            d[c] = A.q1(d[c - 2]) + d[c - 7] + A.q0(d[c - 15]) + d[c - 16] >>> 0;
          }

          for (var h = r[0], f = r[1], l = r[2], m = r[3], v = r[4], y = r[5], b = r[6], g = r[7], c = 0; c < 64; c++) {
            var T = g + A.z1(v) + A.Ch(v, y, b) + e[c] + d[c],
                C = A.z0(h) + A.Maj(h, f, l);
            g = b, b = y, y = v, v = m + T >>> 0, m = l, l = f, f = h, h = T + C >>> 0;
          }

          r[0] = r[0] + h >>> 0, r[1] = r[1] + f >>> 0, r[2] = r[2] + l >>> 0, r[3] = r[3] + m >>> 0, r[4] = r[4] + v >>> 0, r[5] = r[5] + y >>> 0, r[6] = r[6] + b >>> 0, r[7] = r[7] + g >>> 0;
        }

        for (var S = new Array(r.length), g = 0; g < r.length; g++) {
          S[g] = ("00000000" + r[g].toString(16)).slice(-8);
        }

        return S.join("");
      }, A.utf8Encode = function (e) {
        try {
          return new TextEncoder().encode(e).reduce(function (t, e) {
            return t + String.fromCharCode(e);
          }, "");
        } catch (t) {
          return unescape(encodeURIComponent(e));
        }
      }, A.ROTR = function (t, e) {
        return e >>> t | e << 32 - t;
      }, A.z0 = function (t) {
        return A.ROTR(2, t) ^ A.ROTR(13, t) ^ A.ROTR(22, t);
      }, A.z1 = function (t) {
        return A.ROTR(6, t) ^ A.ROTR(11, t) ^ A.ROTR(25, t);
      }, A.q0 = function (t) {
        return A.ROTR(7, t) ^ A.ROTR(18, t) ^ t >>> 3;
      }, A.q1 = function (t) {
        return A.ROTR(17, t) ^ A.ROTR(19, t) ^ t >>> 10;
      }, A.Ch = function (t, e, r) {
        return t & e ^ ~t & r;
      }, A.Maj = function (t, e, r) {
        return t & e ^ t & r ^ e & r;
      }, A);

      function A() {}

      e.Sha256 = o;
    }
  }, [284]);
  pbjsChunk([196], {
    305: function _(e, t, r) {
      e.exports = r(306);
    },
    306: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), r.d(t, "spec", function () {
        return m;
      }), t.cleanSizes = b, t.shuffle = h, t.removeDuplicate = y, t.upto5 = g, t.matchRequest = v, t.checkDeepArray = O, t.defaultSize = x;
      var s = r(0),
          n = r(1),
          a = r(3);

      function i(e, t) {
        return function (e) {
          if (Array.isArray(e)) return e;
        }(e) || function (e, t) {
          if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e))) return;
          var r = [],
              n = !0,
              i = !1,
              o = void 0;

          try {
            for (var u, c = e[Symbol.iterator](); !(n = (u = c.next()).done) && (r.push(u.value), !t || r.length !== t); n = !0) {
              ;
            }
          } catch (e) {
            i = !0, o = e;
          } finally {
            try {
              n || null == c["return"] || c["return"]();
            } finally {
              if (i) throw o;
            }
          }

          return r;
        }(e, t) || u(e, t) || function () {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function o(e) {
        return function (e) {
          if (Array.isArray(e)) return c(e);
        }(e) || function (e) {
          if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
        }(e) || u(e) || function () {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function u(e, t) {
        if (e) {
          if ("string" == typeof e) return c(e, t);
          var r = Object.prototype.toString.call(e).slice(8, -1);
          return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? c(e, t) : void 0;
        }
      }

      function c(e, t) {
        (null == t || t > e.length) && (t = e.length);

        for (var r = 0, n = new Array(t); r < t; r++) {
          n[r] = e[r];
        }

        return n;
      }

      function d(t, e) {
        var r,
            n = Object.keys(t);
        return Object.getOwnPropertySymbols && (r = Object.getOwnPropertySymbols(t), e && (r = r.filter(function (e) {
          return Object.getOwnPropertyDescriptor(t, e).enumerable;
        })), n.push.apply(n, r)), n;
      }

      function f(t) {
        for (var e = 1; e < arguments.length; e++) {
          var r = null != arguments[e] ? arguments[e] : {};
          e % 2 ? d(Object(r), !0).forEach(function (e) {
            p(t, e, r[e]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : d(Object(r)).forEach(function (e) {
            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
          });
        }

        return t;
      }

      function p(e, t, r) {
        return t in e ? Object.defineProperty(e, t, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : e[t] = r, e;
      }

      var l = "https://dmx.districtm.io/b/v1",
          m = {
        code: "districtmDMX",
        supportedFormat: ["banner"],
        isBidRequestValid: function isBidRequestValid(e) {
          return !(!e.params.dmxid || !e.params.memberid);
        },
        interpretResponse: function interpretResponse(e, o) {
          return (e = e.body || {}).seatbid && s.isArray(e.seatbid) ? e.seatbid.reduce(function (e, t) {
            var r = t.bid.reduce(function (e, t) {
              if (e.price < t.price) {
                var r = x(v(t.impid, o)),
                    n = r.width,
                    i = r.height;
                return t.cpm = parseFloat(t.price).toFixed(2), t.bidId = t.impid, t.requestId = t.impid, t.width = t.w || n, t.height = t.h || i, t.dealid && (t.dealId = t.dealid), t.ad = t.adm, t.netRevenue = !0, t.creativeId = t.crid, t.currency = "USD", t.ttl = 60, t;
              }

              return e.cpm = e.price, e;
            }, {
              price: 0
            });
            return r.adm && e.push(r), e;
          }, []).filter(function (e) {
            return !!e.bidId;
          }) : [];
        },
        buildRequests: function buildRequests(e, t) {
          var r = a.b.getConfig("bidderTimeout"),
              n = null,
              i = {
            id: s.generateUUID(),
            cur: ["USD"],
            tmax: r - 300,
            test: this.test() || 0,
            site: {
              publisher: {
                id: String(e[0].params.memberid) || null
              }
            }
          };

          try {
            var o = a.b.getConfig("dmx");
            i.user = o.user || {};
            var u = o.site || {};
            i.site = f(f({}, i.site), u);
          } catch (e) {}

          i.test || delete i.test, t.gdprConsent && (i.regs = {}, i.regs.ext = {}, i.regs.ext.gdpr = !0 === t.gdprConsent.gdprApplies ? 1 : 0, i.user = {}, i.user.ext = {}, i.user.ext.consent = t.gdprConsent.consentString), t && t.uspConsent && (i.regs = i.regs || {}, i.regs.ext = i.regs.ext || {}, i.regs.ext.us_privacy = t.uspConsent);

          try {
            n = e[0].schain, i.source = {}, i.source.ext = {}, i.source.ext.schain = n || {};
          } catch (e) {}

          var c = e.map(function (e) {
            var t = {};
            return t.id = e.bidId, t.tagid = String(e.params.dmxid), t.secure = 1, t.banner = {
              topframe: 1,
              w: b(e.sizes, "w"),
              h: b(e.sizes, "h"),
              format: b(e.sizes).map(function (e) {
                return {
                  w: e[0],
                  h: e[1]
                };
              }).filter(function (e) {
                return "number" == typeof e.w && "number" == typeof e.h;
              })
            }, t;
          });
          return c.length <= 5 ? (i.imp = c, {
            method: "POST",
            url: l,
            data: JSON.stringify(i),
            bidderRequest: t
          }) : g(c, i, t, l);
        },
        test: function test() {
          return -1 !== window.location.href.indexOf("dmTest=true") ? 1 : 0;
        },
        getUserSyncs: function getUserSyncs(e, t, r, n) {
          var i = [],
              o = "https://cdn.districtm.io/ids/index.html";
          if (r && r.gdprApplies && "string" == typeof r.consentString && i.push(["gdpr", r.consentString]), n && i.push(["ccpa", n]), 0 < i.length && (o += "?" + i.map(function (e) {
            return e.join("=");
          }).join("&")), e.iframeEnabled) return [{
            type: "iframe",
            url: o
          }];
        }
      };

      function b(e, t) {
        var r = h(e, [{
          size: [300, 250],
          s: 100
        }, {
          size: [728, 90],
          s: 95
        }, {
          size: [320, 50],
          s: 90
        }, {
          size: [160, 600],
          s: 88
        }, {
          size: [300, 600],
          s: 85
        }, {
          size: [300, 50],
          s: 80
        }, {
          size: [970, 250],
          s: 75
        }, {
          size: [970, 90],
          s: 60
        }]);

        switch (t) {
          case "w":
            return r[0][0] || 0;

          case "h":
            return r[0][1] || 0;

          case "size":
          default:
            return r;
        }
      }

      function h(e, r) {
        var t = e.filter(function (e) {
          return -1 === r.map(function (e) {
            return "".concat(e.size[0], "x").concat(e.size[1]);
          }).indexOf("".concat(e[0], "x").concat(e[1]));
        }),
            n = e.reduce(function (t, e) {
          return 0 === t.length ? (t.push(e), t) : (t.push(e), (t = (t = r.filter(function (e) {
            return -1 !== t.map(function (e) {
              return "".concat(e[0], "x").concat(e[1]);
            }).indexOf("".concat(e.size[0], "x").concat(e.size[1]));
          })).sort(function (e, t) {
            return t.s - e.s;
          })).map(function (e) {
            return e.size;
          }));
        }, []);
        return y([].concat(o(n), o(t)));
      }

      function y(r) {
        return r.filter(function (e, t) {
          return r.map(function (e) {
            return "".concat(e[0], "x").concat(e[1]);
          }).indexOf("".concat(e[0], "x").concat(e[1])) === t;
        });
      }

      function g(e, t, r, n) {
        for (var i = []; 0 !== e.length;) {
          5 <= e.length ? i.push(e.splice(0, 5)) : i.push(e.splice(0, e.length));
        }

        return i.map(function (e) {
          return t.imp = e, {
            method: "POST",
            url: n,
            data: JSON.stringify(t),
            bidderRequest: r
          };
        });
      }

      function v(t, e) {
        return i(e.bidderRequest.bids.filter(function (e) {
          return e.bidId === t;
        }), 1)[0];
      }

      function O(e) {
        return Array.isArray(e) && Array.isArray(e[0]) ? e[0] : e;
      }

      function x(e) {
        var t = e.sizes,
            r = {};
        return r.width = O(t)[0], r.height = O(t)[1], r;
      }

      Object(n.registerBidder)(m);
    }
  }, [305]);
  pbjsChunk([182], {
    337: function _(e, t, n) {
      e.exports = n(338);
    },
    338: function _(e, t, n) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), n.d(t, "adpodUtils", function () {
        return o;
      }), t.notifyTranslationModule = u;
      var r = n(56),
          i = n(13),
          o = {};

      function u(e) {
        e.call(this, "freewheel");
      }

      Object(i.a)("registerAdserver").before(u), Object(r.a)("freewheel", {
        getTargeting: function getTargeting(e) {
          return o.getTargeting(e);
        }
      }), Object(i.e)("adpod", o);
    }
  }, [337]);
  pbjsChunk([166], {
    373: function _(e, r, t) {
      e.exports = t(374);
    },
    374: function _(e, r, t) {
      Object.defineProperty(r, "__esModule", {
        value: !0
      }), t.d(r, "spec", function () {
        return O;
      });
      var l = t(0),
          y = t(2),
          b = t(3),
          i = t(12),
          a = t.n(i),
          n = t(375),
          s = t.n(n),
          o = t(1);

      function h(e) {
        return (h = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
          return _typeof4(e);
        } : function (e) {
          return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof4(e);
        })(e);
      }

      var d = [y.b, y.d],
          v = 100,
          g = 300,
          w = 3600,
          x = !0,
          I = {
        JPY: 1
      };

      function p(e) {
        var r = c(e);
        r.video = l.deepClone(e.params.video), r.video.w = e.params.size[0], r.video.h = e.params.size[1];
        var t = l.deepAccess(e, "mediaTypes.video.context");
        return t && ("instream" === t ? r.video.placement = 1 : "outstream" === t ? r.video.placement = 4 : l.logWarn("ix bidder params: video context '".concat(t, "' is not supported"))), r;
      }

      function c(e) {
        var r = {};
        return r.id = e.bidId, r.ext = {}, r.ext.siteID = e.params.siteId, !e.params.hasOwnProperty("id") || "string" != typeof e.params.id && "number" != typeof e.params.id ? r.ext.sid = "".concat(e.params.size[0], "x").concat(e.params.size[1]) : r.ext.sid = String(e.params.id), e.params.hasOwnProperty("bidFloor") && e.params.hasOwnProperty("bidFloorCur") && (r.bidfloor = e.params.bidFloor, r.bidfloorcur = e.params.bidFloorCur), r;
      }

      function u(e) {
        return Array.isArray(e) && 2 === e.length && s()(e[0]) && s()(e[1]);
      }

      function m(e, r) {
        if (u(e)) return e[0] === r[0] && e[1] === r[1];

        for (var t = 0; t < e.length; t++) {
          if (e[t][0] === r[0] && e[t][1] === r[1]) return 1;
        }
      }

      function P(r, e) {
        if (r) return a()(e, function (e) {
          return e.id === r;
        });
      }

      function f(e, r, t, i) {
        var a = [];

        if (window.headertag && "function" == typeof window.headertag.getIdentityInfo) {
          var n,
              s = window.headertag.getIdentityInfo();
          if (s && "object" === h(s)) for (var o in s) {
            !s.hasOwnProperty(o) || !(n = s[o]).responsePending && n.data && "object" === h(n.data) && Object.keys(n.data).length && a.push(n.data);
          }
        }

        var d,
            p = {};
        p.id = e[0].bidderRequestId, p.imp = t, p.site = {}, p.ext = {}, p.ext.source = "prebid", e[0].schain && (p.source = {
          ext: {
            schain: e[0].schain
          }
        }), 0 < a.length && (p.user = {}, p.user.eids = a), document.referrer && "" !== document.referrer && (p.site.ref = document.referrer), r && (r.gdprConsent && ((d = r.gdprConsent).hasOwnProperty("gdprApplies") && (p.regs = {
          ext: {
            gdpr: d.gdprApplies ? 1 : 0
          }
        }), d.hasOwnProperty("consentString") && (p.user = p.user || {}, p.user.ext = {
          consent: d.consentString || ""
        })), r.uspConsent && l.deepSetValue(p, "regs.ext.us_privacy", r.uspConsent), r.refererInfo && (p.site.page = r.refererInfo.referer));
        var c = {},
            u = b.b.getConfig("ix");

        if (u) {
          if ("object" === h(u.firstPartyData)) {
            var m = u.firstPartyData,
                f = "?";

            for (var y in m) {
              m.hasOwnProperty(y) && (f += "".concat(encodeURIComponent(y), "=").concat(encodeURIComponent(m[y]), "&"));
            }

            f = f.slice(0, -1), p.site.page += f;
          }

          "number" == typeof u.timeout && (c.t = u.timeout);
        }

        return c.s = e[0].params.siteId, c.v = i, c.r = JSON.stringify(p), c.ac = "j", c.sd = 1, 8.1 === i && (c.nf = 1), {
          method: "GET",
          url: "https://as-sec.casalemedia.com/cygnus",
          data: c
        };
      }

      var O = {
        code: "ix",
        supportedMediaTypes: d,
        isBidRequestValid: function isBidRequestValid(e) {
          if (!u(e.params.size)) return l.logError("ix bidder params: bid size has invalid format."), !1;
          if (!m(e.sizes, e.params.size)) return l.logError("ix bidder params: bid size is not included in ad unit sizes."), !1;
          if (e.hasOwnProperty("mediaType") && !l.contains(d, e.mediaType)) return !1;
          if (e.hasOwnProperty("mediaTypes") && !l.deepAccess(e, "mediaTypes.banner.sizes") && !l.deepAccess(e, "mediaTypes.video.playerSize")) return !1;
          if ("string" != typeof e.params.siteId && "number" != typeof e.params.siteId) return l.logError("ix bidder params: siteId must be string or number value."), !1;
          var r,
              t,
              i = e.params.hasOwnProperty("bidFloor"),
              a = e.params.hasOwnProperty("bidFloorCur");
          return !!(!i && !a || i && a && (r = e.params.bidFloor, t = e.params.bidFloorCur, Boolean("number" == typeof r && "string" == typeof t && t.match(/^[A-Z]{3}$/)))) || (l.logError("ix bidder params: bidFloor / bidFloorCur parameter has invalid format."), !1);
        },
        buildRequests: function buildRequests(e, r) {
          for (var t, i, a = [], n = [], s = [], o = null, d = 0; d < e.length; d++) {
            (o = e[d]).mediaType !== y.d && !l.deepAccess(o, "mediaTypes.video") || (o.mediaType === y.d || m(o.mediaTypes.video.playerSize, o.params.size) ? s.push(p(o)) : l.logError("Bid size is not included in video playerSize")), o.mediaType !== y.b && !l.deepAccess(o, "mediaTypes.banner") && (o.mediaType || o.mediaTypes) || n.push((i = void 0, (i = c(t = o)).banner = {}, i.banner.w = t.params.size[0], i.banner.h = t.params.size[1], i.banner.topframe = l.inIframe() ? 0 : 1, i));
          }

          return 0 < n.length && a.push(f(e, r, n, 7.2)), 0 < s.length && a.push(f(e, r, s, 8.1)), a;
        },
        interpretResponse: function interpretResponse(e, r) {
          var t = [];
          if (!e.hasOwnProperty("body") || !e.body.hasOwnProperty("seatbid")) return t;

          for (var i, a, n, s, o = e.body, d = o.seatbid, p = 0; p < d.length; p++) {
            if (d[p].hasOwnProperty("bid")) for (var c = d[p].bid, u = JSON.parse(r.data.r), m = 0; m < c.length; m++) {
              var f = P(c[m].impid, u.imp);
              i = c[m], a = o.cur, n = f, s = void 0, s = {}, I.hasOwnProperty(a) ? s.cpm = i.price / I[a] : s.cpm = i.price / v, s.requestId = i.impid, s.dealId = l.deepAccess(i, "ext.dealid"), s.netRevenue = x, s.currency = a, s.creativeId = i.hasOwnProperty("crid") ? i.crid : "-", l.deepAccess(i, "ext.vasturl") ? (s.vastUrl = i.ext.vasturl, s.width = n.video.w, s.height = n.video.h, s.mediaType = y.d, s.ttl = w) : (s.ad = i.adm, s.width = i.w, s.height = i.h, s.mediaType = y.b, s.ttl = g), s.meta = {}, s.meta.networkId = l.deepAccess(i, "ext.dspid"), s.meta.brandId = l.deepAccess(i, "ext.advbrandid"), s.meta.brandName = l.deepAccess(i, "ext.advbrand"), t.push(s);
            }
          }

          return t;
        },
        transformBidParams: function transformBidParams(e) {
          return l.convertTypes({
            siteID: "number"
          }, e);
        },
        getUserSyncs: function getUserSyncs(e) {
          return e.iframeEnabled ? [{
            type: "iframe",
            url: "https://js-sec.indexww.com/um/ixmatch.html"
          }] : [];
        }
      };
      Object(o.registerBidder)(O);
    }
  }, [373]);
  pbjsChunk([163], {
    384: function _(e, t, r) {
      e.exports = r(385);
    },
    385: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), r.d(t, "spec", function () {
        return l;
      });
      var s = r(0),
          d = r(3),
          n = r(1);

      function g() {
        return (g = Object.assign || function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var r = arguments[t];

            for (var n in r) {
              Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      var a,
          o,
          i,
          l = {
        code: "kargo",
        isBidRequestValid: function isBidRequestValid(e) {
          return !(!e || !e.params) && !!e.params.placementId;
        },
        buildRequests: function buildRequests(e, t) {
          var r,
              n = d.b.getConfig("currency"),
              a = n && n.adServerCurrency || "USD",
              o = {},
              i = {};
          s._each(e, function (e) {
            o[e.bidId] = e.params.placementId, i[e.bidId] = e.sizes;
          }), 0 < e.length && e[0].userId && e[0].userId.tdid && (r = e[0].userId.tdid);
          var c = g({}, {
            sessionId: l._getSessionId(),
            requestCount: l._getRequestCount(),
            timeout: t.timeout,
            currency: a,
            cpmGranularity: 1,
            timestamp: new Date().getTime(),
            cpmRange: {
              floor: 0,
              ceil: 20
            },
            bidIDs: o,
            bidSizes: i,
            prebidRawBidRequests: e
          }, l._getAllMetadata(r, t.uspConsent)),
              u = encodeURIComponent(JSON.stringify(c));
          return g({}, t, {
            method: "GET",
            url: "".concat("https://krk.kargo.com", "/api/v2/bid"),
            data: "json=".concat(u),
            currency: a
          });
        },
        interpretResponse: function interpretResponse(e, t) {
          var r = e.body,
              n = [];

          for (var a in r) {
            var o = r[a],
                i = void 0;
            o.metadata && o.metadata.landingPageDomain && (i = {
              clickUrl: o.metadata.landingPageDomain
            }), n.push({
              requestId: a,
              cpm: Number(o.cpm),
              width: o.width,
              height: o.height,
              ad: o.adm,
              ttl: 300,
              creativeId: o.id,
              dealId: o.targetingCustom,
              netRevenue: !0,
              currency: t.currency,
              meta: i
            });
          }

          return n;
        },
        getUserSyncs: function getUserSyncs(e) {
          var t = [],
              r = l._generateRandomUuid(),
              n = l._getClientId();

          if (e.iframeEnabled && r && n) for (var a = 0; a < 5; a++) {
            t.push({
              type: "iframe",
              url: "https://crb.kargo.com/api/v1/initsyncrnd/{UUID}?seed={SEED}&idx={INDEX}".replace("{UUID}", n).replace("{SEED}", r).replace("{INDEX}", a)
            });
          }
          return t;
        },
        _readCookie: function _readCookie(e) {
          if (!s.cookiesAreEnabled()) return null;

          for (var t = "".concat(e, "="), r = document.cookie.split(";"), n = 0; n < r.length; n++) {
            for (var a = r[n]; " " === a.charAt(0);) {
              a = a.substring(1, a.length);
            }

            if (0 === a.indexOf(t)) return a.substring(t.length, a.length);
          }

          return null;
        },
        _getCrbFromCookie: function _getCrbFromCookie() {
          try {
            var e = JSON.parse(decodeURIComponent(l._readCookie("krg_crb")));

            if (e && e.v) {
              var t = JSON.parse(atob(e.v));
              if (t) return t;
            }

            return {};
          } catch (e) {
            return {};
          }
        },
        _getCrbFromLocalStorage: function _getCrbFromLocalStorage() {
          try {
            return JSON.parse(atob(l._getLocalStorageSafely("krg_crb")));
          } catch (e) {
            return {};
          }
        },
        _getCrb: function _getCrb() {
          var e = l._getCrbFromLocalStorage();

          return Object.keys(e).length ? e : l._getCrbFromCookie();
        },
        _getKruxUserId: function _getKruxUserId() {
          return l._getLocalStorageSafely("kxkar_user");
        },
        _getKruxSegments: function _getKruxSegments() {
          return l._getLocalStorageSafely("kxkar_segs");
        },
        _getKrux: function _getKrux() {
          var e = l._getKruxSegments(),
              t = [];

          return e && (t = e.split(",")), {
            userID: l._getKruxUserId(),
            segments: t
          };
        },
        _getLocalStorageSafely: function _getLocalStorageSafely(e) {
          try {
            return s.getDataFromLocalStorage(e);
          } catch (e) {
            return null;
          }
        },
        _getUserIds: function _getUserIds(e, t) {
          var r = l._getCrb(),
              n = {
            kargoID: r.userId,
            clientID: r.clientId,
            crbIDs: r.syncIds || {},
            optOut: r.optOut,
            usp: t
          };

          return e && (n.tdID = e), n;
        },
        _getClientId: function _getClientId() {
          return l._getCrb().clientId;
        },
        _getAllMetadata: function _getAllMetadata(e, t) {
          return {
            userIDs: l._getUserIds(e, t),
            krux: l._getKrux(),
            pageURL: window.location.href,
            rawCRB: l._readCookie("krg_crb"),
            rawCRBLocalStorage: l._getLocalStorageSafely("krg_crb")
          };
        },
        _getSessionId: function _getSessionId() {
          return a = a || l._generateRandomUuid();
        },
        _getRequestCount: function _getRequestCount() {
          return o === window.location.pathname ? ++i : (o = window.location.pathname, i = 0);
        },
        _generateRandomUuid: function _generateRandomUuid() {
          try {
            var e = new Uint8Array(16);
            crypto.getRandomValues(e), e[6] = -177 & e[6] | 64, e[8] = -65 & e[8] | 128;
            var t = Array.prototype.map.call(new Uint8Array(e), function (e) {
              return ("00" + e.toString(16)).slice(-2);
            }).join("");
            return t.slice(0, 8) + "-" + t.slice(8, 12) + "-" + t.slice(12, 16) + "-" + t.slice(16, 20) + "-" + t.slice(20);
          } catch (e) {
            return "";
          }
        }
      };
      Object(n.registerBidder)(l);
    }
  }, [384]);
  pbjsChunk([130], {
    461: function _(e, t, n) {
      e.exports = n(462);
    },
    462: function _(e, t, n) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), n.d(t, "spec", function () {
        return h;
      });
      var c = n(3),
          r = n(1),
          d = n(0),
          s = n(2),
          o = n(9);

      function u(e, t) {
        return function (e) {
          if (Array.isArray(e)) return e;
        }(e) || function (e, t) {
          if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e))) return;
          var n = [],
              r = !0,
              a = !1,
              i = void 0;

          try {
            for (var s, o = e[Symbol.iterator](); !(r = (s = o.next()).done) && (n.push(s.value), !t || n.length !== t); r = !0) {
              ;
            }
          } catch (e) {
            a = !0, i = e;
          } finally {
            try {
              r || null == o["return"] || o["return"]();
            } finally {
              if (a) throw i;
            }
          }

          return n;
        }(e, t) || function (e, t) {
          if (!e) return;
          if ("string" == typeof e) return a(e, t);
          var n = Object.prototype.toString.call(e).slice(8, -1);
          "Object" === n && e.constructor && (n = e.constructor.name);
          if ("Map" === n || "Set" === n) return Array.from(e);
          if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return a(e, t);
        }(e, t) || function () {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function a(e, t) {
        (null == t || t > e.length) && (t = e.length);

        for (var n = 0, r = new Array(t); n < t; n++) {
          r[n] = e[n];
        }

        return r;
      }

      var i = [s.b, s.d],
          p = "hb_pb",
          m = "3.0.1",
          l = {
        idl_env: "lre",
        pubcid: "pubcid",
        tdid: "ttduuid",
        criteoId: "criteoid"
      },
          h = {
        code: "openx",
        supportedMediaTypes: i,
        isBidRequestValid: function isBidRequestValid(e) {
          var t = e.params.delDomain || e.params.platform;
          return d.deepAccess(e, "mediaTypes.banner") && t ? !!e.params.unit || 0 < d.deepAccess(e, "mediaTypes.banner.sizes.length") : !(!e.params.unit || !t);
        },
        buildRequests: function buildRequests(e, r) {
          if (0 === e.length) return [];
          var a = [],
              t = u(e.reduce(function (e, t) {
            var n;
            return n = t, d.deepAccess(n, "mediaTypes.video") && !d.deepAccess(n, "mediaTypes.banner") || n.mediaType === s.d ? e[0].push(t) : e[1].push(t), e;
          }, [[], []]), 2),
              n = t[0],
              i = t[1];
          return 0 < i.length && a.push(function (e, t) {
            var r = [],
                a = !1,
                n = f(e, t),
                i = d._map(e, function (e) {
              return e.params.unit;
            });

            n.aus = d._map(e, function (e) {
              return d.parseSizesInput(e.mediaTypes.banner.sizes).join(",");
            }).join("|"), n.divIds = d._map(e, function (e) {
              return encodeURIComponent(e.adUnitCode);
            }).join(","), i.some(function (e) {
              return e;
            }) && (n.auid = i.join(","));
            e.some(function (e) {
              return e.params.doNotTrack;
            }) && (n.ns = 1);
            !0 !== c.b.getConfig("coppa") && !e.some(function (e) {
              return e.params.coppa;
            }) || (n.tfcd = 1);
            e.forEach(function (t) {
              var e, n;
              t.params.customParams ? (e = d._map(Object.keys(t.params.customParams), function (e) {
                return function (e, t) {
                  var n = t[e];
                  d.isArray(n) && (n = n.join(","));
                  return (e.toLowerCase() + "=" + n.toLowerCase()).replace("+", ".").replace("/", "_");
                }(e, t.params.customParams);
              }), n = window.btoa(e.join("&")), a = !0, r.push(n)) : r.push("");
            }), a && (n.tps = r.join(","));
            var s = [],
                o = !1;
            e.forEach(function (e) {
              e.params.customFloor ? (s.push(Math.round(100 * e.params.customFloor) / 100 * 1e3), o = !0) : s.push(0);
            }), o && (n.aumfs = s.join(","));
            return {
              method: "GET",
              url: n.ph ? "https://u.openx.net/w/1.0/arj" : "https://".concat(e[0].params.delDomain, "/w/1.0/arj"),
              data: n,
              payload: {
                bids: e,
                startTime: new Date()
              }
            };
          }(i, r)), 0 < n.length && n.forEach(function (e) {
            var t, n;
            a.push({
              method: "GET",
              url: (n = function (e, t) {
                var n,
                    r,
                    a = f([e], t),
                    i = d.deepAccess(e, "params.video") || {},
                    s = d.deepAccess(e, "mediaTypes.video.context"),
                    o = d.deepAccess(e, "mediaTypes.video.playerSize");
                d.isArray(e.sizes) && 2 === e.sizes.length && !d.isArray(e.sizes[0]) ? (n = parseInt(e.sizes[0], 10), r = parseInt(e.sizes[1], 10)) : d.isArray(e.sizes) && d.isArray(e.sizes[0]) && 2 === e.sizes[0].length ? (n = parseInt(e.sizes[0][0], 10), r = parseInt(e.sizes[0][1], 10)) : d.isArray(o) && 2 === o.length && (n = parseInt(o[0], 10), r = parseInt(o[1], 10));
                Object.keys(i).forEach(function (e) {
                  "openrtb" === e ? (i[e].w = n || i[e].w, i[e].v = r || i[e].v, a[e] = JSON.stringify(i[e])) : e in a || "url" === e || (a[e] = i[e]);
                }), a.auid = e.params.unit, a.vwd = n || i.vwd, a.vht = r || i.vht, "outstream" === s && (a.vos = "101");
                i.mimes && (a.vmimes = i.mimes);
                return a;
              }(t = e, r)).ph ? "https://u.openx.net/v/1.0/avjp" : "https://".concat(t.params.delDomain, "/v/1.0/avjp"),
              data: n,
              payload: {
                bid: t,
                startTime: new Date()
              }
            });
          }), a;
        },
        interpretResponse: function interpretResponse(e, t) {
          var n = e.body;
          return ((/avjp$/.test(t.url) ? s.d : s.b) === s.d ? function (e, t) {
            var n = t.bid,
                r = (t.startTime, []);
            {
              var a, i;
              void 0 !== e && "" !== e.vastUrl && "" !== e.pub_rev && (a = Object(o.c)(e.vastUrl).search || {}, (i = {}).requestId = n.bidId, i.ttl = 300, i.netRevenue = !0, i.currency = e.currency, i.cpm = Number(e.pub_rev) / 1e3, i.width = e.width, i.height = e.height, i.creativeId = e.adid, i.vastUrl = e.vastUrl, i.mediaType = s.d, e.ph = a.ph, e.colo = a.colo, e.ts = a.ts, r.push(i));
            }
            return r;
          } : function (e, t) {
            for (var n = t.bids, r = (t.startTime, e.ads.ad), a = [], i = 0; i < r.length; i++) {
              var s,
                  o = r[i],
                  c = parseInt(o.idx, 10),
                  d = {};
              d.requestId = n[c].bidId, o.pub_rev && (d.cpm = Number(o.pub_rev) / 1e3, (s = o.creative[0]) && (d.width = s.width, d.height = s.height), d.creativeId = s.id, d.ad = o.html, o.deal_id && (d.dealId = o.deal_id), d.ttl = 300, d.netRevenue = !0, d.currency = o.currency, o.tbd && (d.tbd = o.tbd), d.ts = o.ts, d.meta = {}, o.brand_id && (d.meta.brandId = o.brand_id), o.adv_id && (d.meta.dspid = o.adv_id), a.push(d));
            }

            return a;
          })(n, t.payload);
        },
        getUserSyncs: function getUserSyncs(e, t, n, r) {
          if (e.iframeEnabled || e.pixelEnabled) return [{
            type: e.iframeEnabled ? "iframe" : "image",
            url: d.deepAccess(t, "0.body.ads.pixels") || d.deepAccess(t, "0.body.pixels") || function (e, t) {
              var n = [];
              e && (n.push("gdpr=" + (e.gdprApplies ? 1 : 0)), n.push("gdpr_consent=" + encodeURIComponent(e.consentString || "")));
              t && n.push("us_privacy=" + encodeURIComponent(t));
              return "".concat("https://u.openx.net/w/1.0/pd").concat(0 < n.length ? "?" + n.join("&") : "");
            }(n, r)
          }];
        },
        transformBidParams: function transformBidParams(e) {
          return d.convertTypes({
            unit: "string",
            customFloor: "number"
          }, e);
        }
      };

      function f(e, t) {
        var n,
            r,
            a,
            i,
            s = d.inIframe(),
            o = {
          ju: c.b.getConfig("pageUrl") || t.refererInfo.referer,
          ch: document.charSet || document.characterSet,
          res: "".concat(screen.width, "x").concat(screen.height, "x").concat(screen.colorDepth),
          ifr: s,
          tz: new Date().getTimezoneOffset(),
          tws: function (e) {
            var t,
                n,
                r,
                a = window,
                i = document,
                s = i.documentElement;

            if (e) {
              try {
                a = window.top, i = window.top.document;
              } catch (e) {
                return;
              }

              s = i.documentElement, r = i.body, t = a.innerWidth || s.clientWidth || r.clientWidth, n = a.innerHeight || s.clientHeight || r.clientHeight;
            } else s = i.documentElement, t = a.innerWidth || s.clientWidth, n = a.innerHeight || s.clientHeight;

            return "".concat(t, "x").concat(n);
          }(s),
          be: 1,
          bc: e[0].params.bc || "".concat(p, "_").concat(m),
          dddid: d._map(e, function (e) {
            return e.transactionId;
          }).join(","),
          nocache: new Date().getTime()
        };
        return e[0].params.platform && (o.ph = e[0].params.platform), t.gdprConsent && (void 0 !== (n = t.gdprConsent).consentString && (o.gdpr_consent = n.consentString), void 0 !== n.gdprApplies && (o.gdpr = n.gdprApplies ? 1 : 0), "iab" === c.b.getConfig("consentManagement.cmpApi") && (o.x_gdpr_f = 1)), t && t.uspConsent && (o.us_privacy = t.uspConsent), d.deepAccess(e[0], "crumbs.pubcid") && d.deepSetValue(e[0], "userId.pubcid", d.deepAccess(e[0], "crumbs.pubcid")), r = o, a = e[0].userId, d._each(a, function (e, t) {
          l.hasOwnProperty(t) && (r[l[t]] = e);
        }), o = r, e[0].schain && (o.schain = (i = e[0].schain, "".concat(i.ver, ",").concat(i.complete, "!").concat(function (e) {
          var n = ["asi", "sid", "hp", "rid", "name", "domain"];
          return e.map(function (t) {
            return n.map(function (e) {
              return t[e] || "";
            }).join(",");
          }).join("!");
        }(i.nodes)))), o;
      }

      Object(r.registerBidder)(h);
    }
  }, [461]);
  pbjsChunk([21], {
    481: function _(e, r, t) {
      e.exports = t(482);
    },
    482: function _(e, r, t) {
      Object.defineProperty(r, "__esModule", {
        value: !0
      }), r.resetSyncedStatus = function () {
        V = !1;
      }, r.PrebidServer = p;

      var i = t(77),
          y = t(24),
          m = t(0),
          h = t(5),
          S = (t.n(h), t(7)),
          x = t(3),
          j = t(2),
          A = t(23),
          O = t(1),
          n = t(8),
          w = t.n(n),
          a = t(11),
          k = t.n(a),
          s = t(483),
          E = t(4),
          c = t(12),
          _ = t.n(c);

      function C(e, r, t) {
        return r in e ? Object.defineProperty(e, r, {
          value: t,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : e[r] = t, e;
      }

      function I(e, r) {
        return function (e) {
          if (Array.isArray(e)) return e;
        }(e) || function (e, r) {
          if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e))) return;
          var t = [],
              i = !0,
              n = !1,
              a = void 0;

          try {
            for (var s, c = e[Symbol.iterator](); !(i = (s = c.next()).done) && (t.push(s.value), !r || t.length !== r); i = !0) {
              ;
            }
          } catch (e) {
            n = !0, a = e;
          } finally {
            try {
              i || null == c["return"] || c["return"]();
            } finally {
              if (n) throw a;
            }
          }

          return t;
        }(e, r) || function (e, r) {
          if (!e) return;
          if ("string" == typeof e) return d(e, r);
          var t = Object.prototype.toString.call(e).slice(8, -1);
          "Object" === t && e.constructor && (t = e.constructor.name);
          if ("Map" === t || "Set" === t) return Array.from(e);
          if ("Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return d(e, r);
        }(e, r) || function () {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function d(e, r) {
        (null == r || r > e.length) && (r = e.length);

        for (var t = 0, i = new Array(r); t < r; t++) {
          i[t] = e[t];
        }

        return i;
      }

      function T() {
        return (T = Object.assign || function (e) {
          for (var r = 1; r < arguments.length; r++) {
            var t = arguments[r];

            for (var i in t) {
              Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      function U(e) {
        return (U = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
          return _typeof4(e);
        } : function (e) {
          return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof4(e);
        })(e);
      }

      var R,
          P = x.b.getConfig,
          B = h.S2S.SRC,
          V = !1,
          o = {
        enabled: !1,
        timeout: 1e3,
        maxBids: 1,
        adapter: "prebidServer",
        adapterOptions: {},
        syncUrlModifier: {}
      };

      function q(e) {
        var r;
        0 !== e.length && ((r = e.pop()).no_cookie ? function (e, r, t, i) {
          {
            var n;
            R.syncUrlModifier && "function" == typeof R.syncUrlModifier[t] ? (n = R.syncUrlModifier[t](e, r, t), u(e, n, t, i)) : u(e, r, t, i);
          }
        }(r.usersync.type, r.usersync.url, r.bidder, m.bind.call(q, null, e)) : q(e));
      }

      function u(e, r, t, i) {
        r ? "image" === e || "redirect" === e ? (m.logMessage('Invoking image pixel user sync for bidder: "'.concat(t, '"')), m.triggerPixel(r, i)) : "iframe" == e ? (m.logMessage('Invoking iframe user sync for bidder: "'.concat(t, '"')), m.insertUserSyncIframe(r, i)) : (m.logError('User sync type "'.concat(e, '" not supported for bidder: "').concat(t, '"')), i()) : (m.logError('No sync url for bidder "'.concat(t, '": ').concat(r)), i());
      }

      function z(e) {
        var r = function (e) {
          var r = m.deepAccess(e, "bids.0.userId.digitrustid.data");
          if (r) return r;
          var t = x.b.getConfig("digiTrustId");
          return t && t.success && t.identity || null;
        }(0 < arguments.length && void 0 !== e ? e : {});

        return !r || r.privacy && r.privacy.optout ? null : {
          id: r.id,
          keyv: r.keyv
        };
      }

      x.b.setDefaults({
        s2sConfig: o
      }), P("s2sConfig", function (e) {
        return function (r) {
          if (r.defaultVendor) {
            var t = r.defaultVendor,
                i = Object.keys(r);
            if (!s.a[t]) return m.logError("Incorrect or unavailable prebid server default vendor option: " + t), !1;
            Object.keys(s.a[t]).forEach(function (e) {
              o[e] !== r[e] && k()(i, e) || (r[e] = s.a[t][e]);
            });
          }

          var n = Object.keys(r);
          0 < ["accountId", "bidders", "endpoint"].filter(function (e) {
            return !k()(n, e) && (m.logError(e + " missing in server to server config"), !0);
          }).length || (R = r);
        }(e.s2sConfig);
      });
      var N = {
        sponsoredBy: 1,
        body: 2,
        rating: 3,
        likes: 4,
        downloads: 5,
        price: 6,
        salePrice: 7,
        phone: 8,
        address: 9,
        body2: 10,
        cta: 12
      },
          M = Object.keys(N),
          D = {
        icon: 1,
        image: 3
      },
          J = {
        img: 1,
        js: 2
      };
      [N, D, {
        impression: 1,
        "viewable-mrc50": 2,
        "viewable-mrc100": 3,
        "viewable-video50": 4
      }, J].forEach(function (r) {
        Object.keys(r).forEach(function (e) {
          r[r[e]] = e;
        });
      });
      var X = {},
          H = {},
          K = {
        buildRequest: function buildRequest(e, p, r) {
          var l = [],
              b = {};

          if (r.forEach(function (r) {
            var e,
                c = Object(A.g)(m.deepAccess(r, "mediaTypes.native"));
            if (c) try {
              e = H[r.code] = Object.keys(c).reduce(function (e, r) {
                var t = c[r];

                function i(e) {
                  return T({
                    required: t.required ? 1 : 0
                  }, e ? m.cleanObj(e) : {});
                }

                switch (r) {
                  case "image":
                  case "icon":
                    var n = D[r],
                        a = m.cleanObj({
                      type: n,
                      w: m.deepAccess(t, "sizes.0"),
                      h: m.deepAccess(t, "sizes.1"),
                      wmin: m.deepAccess(t, "aspect_ratios.0.min_width"),
                      hmin: m.deepAccess(t, "aspect_ratios.0.min_height")
                    });
                    if (!(a.w && a.h || a.hmin && a.wmin)) throw "invalid img sizes (must provide sizes or min_height & min_width if using aspect_ratios)";
                    Array.isArray(t.aspect_ratios) && (a.ext = {
                      aspectratios: t.aspect_ratios.map(function (e) {
                        return "".concat(e.ratio_width, ":").concat(e.ratio_height);
                      })
                    }), e.push(i({
                      img: a
                    }));
                    break;

                  case "title":
                    if (!t.len) throw "invalid title.len";
                    e.push(i({
                      title: {
                        len: t.len
                      }
                    }));
                    break;

                  default:
                    var s = N[r];
                    s && e.push(i({
                      data: {
                        type: s,
                        len: t.len
                      }
                    }));
                }

                return e;
              }, []);
            } catch (e) {
              m.logError("error creating native request: " + String(e));
            }
            var t = m.deepAccess(r, "mediaTypes.video"),
                i = m.deepAccess(r, "mediaTypes.banner");
            r.bids.forEach(function (e) {
              X["".concat(r.code).concat(e.bidder)] = e.bid_id, S["default"].aliasRegistry[e.bidder] && (b[e.bidder] = S["default"].aliasRegistry[e.bidder]);
            });
            var n,
                a = {};
            if (i && i.sizes && (n = m.parseSizesInput(i.sizes).map(function (e) {
              var r = I(e.split("x"), 2),
                  t = r[0],
                  i = r[1];
              return {
                w: parseInt(t, 10),
                h: parseInt(i, 10)
              };
            }), a.banner = {
              format: n
            }), m.isEmpty(t) || ("outstream" !== t.context || r.renderer ? a.video = t : m.logError("Outstream bid without renderer cannot be sent to Prebid Server.")), e) try {
              a["native"] = {
                request: JSON.stringify({
                  context: 1,
                  plcmttype: 1,
                  eventtrackers: [{
                    event: 1,
                    methods: [1]
                  }],
                  assets: e
                }),
                ver: "1.2"
              };
            } catch (e) {
              m.logError("error creating native request: " + String(e));
            }
            var s = r.bids.reduce(function (e, r) {
              var t = S["default"].bidderRegistry[r.bidder];
              return t && t.getSpec().transformBidParams && (r.params = t.getSpec().transformBidParams(r.params, !0)), e[r.bidder] = R.adapterOptions && R.adapterOptions[r.bidder] ? T({}, r.params, R.adapterOptions[r.bidder]) : r.params, e;
            }, {}),
                d = {
              id: r.code,
              ext: s,
              secure: R.secure
            },
                o = m.deepAccess(r, "fpd.context.pbAdSlot");
            "string" == typeof o && o && m.deepSetValue(d, "ext.context.data.adslot", o), T(d, a);

            var u = _()(p[0].bids, function (e) {
              return e.adUnitCode === r.code && e.storedAuctionResponse;
            });

            u && m.deepSetValue(d, "ext.prebid.storedauctionresponse.id", u.storedAuctionResponse.toString()), (d.banner || d.video || d["native"]) && l.push(d);
          }), l.length) {
            var t = {
              id: e.tid,
              source: {
                tid: e.tid
              },
              tmax: R.timeout,
              imp: l,
              test: P("debug") ? 1 : 0,
              ext: {
                prebid: {
                  targeting: {
                    includewinners: !0,
                    includebidderkeys: !1
                  }
                }
              }
            };
            R.extPrebid && "object" === U(R.extPrebid) && (t.ext.prebid = T(t.ext.prebid, R.extPrebid));
            var i,
                n,
                a = x.b.getConfig("currency.adServerCurrency");
            a && "string" == typeof a ? t.cur = [a] : Array.isArray(a) && a.length && (t.cur = [a[0]]), i = t, n = p[0].refererInfo.referer, i && ("object" === U(x.b.getConfig("app")) ? (i.app = x.b.getConfig("app"), i.app.publisher = {
              id: R.accountId
            }) : i.site = {
              publisher: {
                id: R.accountId
              },
              page: n
            }, "object" === U(x.b.getConfig("device")) && (i.device = x.b.getConfig("device")), i.device || (i.device = {}), i.device.w || (i.device.w = window.innerWidth), i.device.h || (i.device.h = window.innerHeight));
            var s = z(p && p[0]);
            s && m.deepSetValue(t, "user.ext.digitrust", s);
            var c = m.deepAccess(p, "0.bids.0.schain");
            c && (t.source.ext = {
              schain: c
            }), m.isEmpty(b) || (t.ext.prebid.aliases = b);
            var d,
                o = m.deepAccess(p, "0.bids.0.userIdAsEids");
            m.isArray(o) && 0 < o.length && m.deepSetValue(t, "user.ext.eids", o), p && (p[0].gdprConsent && ("boolean" == typeof p[0].gdprConsent.gdprApplies && (d = p[0].gdprConsent.gdprApplies ? 1 : 0), m.deepSetValue(t, "regs.ext.gdpr", d), m.deepSetValue(t, "user.ext.consent", p[0].gdprConsent.consentString)), p[0].uspConsent && m.deepSetValue(t, "regs.ext.us_privacy", p[0].uspConsent)), !0 === P("coppa") && m.deepSetValue(t, "regs.coppa", 1);
            var u,
                f,
                v,
                g = P("fpd") || {};
            return g.context && m.deepSetValue(t, "site.ext.data", g.context), g.user && m.deepSetValue(t, "user.ext.data", g.user), u = t, f = x.b.getBidderConfig(), (v = Object.keys(f).reduce(function (e, r) {
              var t,
                  i = f[r];
              return i.fpd && (t = {}, i.fpd.context && (t.site = i.fpd.context), i.fpd.user && (t.user = i.fpd.user), e.push({
                bidders: [r],
                config: {
                  fpd: t
                }
              })), e;
            }, [])).length && m.deepSetValue(u, "ext.prebid.bidderconfig", v), t;
          }

          m.logError("Request to Prebid Server rejected due to invalid media type(s) in adUnit.");
        },
        interpretResponse: function interpretResponse(f, v) {
          var g = [];
          return f.seatbid && f.seatbid.forEach(function (b) {
            (b.bid || []).forEach(function (e) {
              var r,
                  t = "".concat(e.impid).concat(b.seat);
              X[t] && (r = m.getBidRequest(X[t], v));
              var i = e.price,
                  n = 0 !== i ? h.STATUS.GOOD : h.STATUS.NO_BID,
                  a = Object(y.a)(n, r || {
                bidder: b.seat,
                src: B
              });
              a.cpm = i;
              var s = m.deepAccess(f, ["ext", "responsetimemillis", b.seat].join("."));
              r && s && (r.serverResponseTimeMs = s);
              var c,
                  d,
                  o,
                  u,
                  p,
                  l = m.deepAccess(e, "ext.prebid.targeting");
              l && "object" === U(l) && (a.adserverTargeting = l), a.seatBidId = e.id, m.deepAccess(e, "ext.prebid.type") === j.d ? (a.mediaType = j.d, c = r.sizes && r.sizes[0], a.playerHeight = c[0], a.playerWidth = c[1], e.ext.prebid.cache && "object" === U(e.ext.prebid.cache.vastXml) && e.ext.prebid.cache.vastXml.cacheId && e.ext.prebid.cache.vastXml.url ? (a.videoCacheKey = e.ext.prebid.cache.vastXml.cacheId, a.vastUrl = e.ext.prebid.cache.vastXml.url) : l && l.hb_uuid && l.hb_cache_host && l.hb_cache_path && (a.videoCacheKey = l.hb_uuid, a.vastUrl = "https://".concat(l.hb_cache_host).concat(l.hb_cache_path, "?uuid=").concat(l.hb_uuid)), e.adm && (a.vastXml = e.adm), !a.vastUrl && e.nurl && (a.vastUrl = e.nurl)) : m.deepAccess(e, "ext.prebid.type") === j.c ? (a.mediaType = j.c, o = "string" == typeof e.adm ? a.adm = JSON.parse(e.adm) : a.adm = e.adm, C(d = {}, J.img, o.imptrackers || []), C(d, J.js, o.jstracker ? [o.jstracker] : []), u = d, o.eventtrackers && o.eventtrackers.forEach(function (e) {
                switch (e.method) {
                  case J.img:
                    u[J.img].push(e.url);
                    break;

                  case J.js:
                    u[J.js].push(e.url);
                }
              }), m.isPlainObject(o) && Array.isArray(o.assets) ? (p = H[r.adUnitCode], a["native"] = m.cleanObj(o.assets.reduce(function (r, t) {
                var i = p[t.id];
                return m.isPlainObject(t.img) ? r[i.img.type ? D[i.img.type] : "image"] = m.pick(t.img, ["url", "w as width", "h as height"]) : m.isPlainObject(t.title) ? r.title = t.title.text : m.isPlainObject(t.data) && M.forEach(function (e) {
                  N[e] === i.data.type && (r[e] = t.data.value);
                }), r;
              }, m.cleanObj({
                clickUrl: o.link,
                clickTrackers: m.deepAccess(o, "link.clicktrackers"),
                impressionTrackers: u[J.img],
                javascriptTrackers: u[J.js]
              })))) : m.logError("prebid server native response contained no assets")) : e.adm && e.nurl ? (a.ad = e.adm, a.ad += m.createTrackPixelHtml(decodeURIComponent(e.nurl))) : e.adm ? a.ad = e.adm : e.nurl && (a.adUrl = e.nurl), a.width = e.w, a.height = e.h, e.dealid && (a.dealId = e.dealid), a.requestId = r.bidId || r.bid_Id, a.creative_id = e.crid, a.creativeId = e.crid, e.burl && (a.burl = e.burl), a.currency = f.cur ? f.cur : "USD", a.ttl = e.ttl ? e.ttl : 60, a.netRevenue = !e.netRevenue || e.netRevenue, g.push({
                adUnit: e.impid,
                bid: a
              });
            });
          }), g;
        }
      };

      function p() {
        var e = new i.a("prebidServer");
        return e.callBids = function (e, r, t, i, n) {
          var a,
              s,
              c,
              d,
              o,
              u,
              p,
              l,
              b,
              f = m.deepClone(e.ad_units).filter(function (e) {
            return e.mediaTypes && (e.mediaTypes["native"] || e.mediaTypes.banner && e.mediaTypes.banner.sizes || e.mediaTypes.video && e.mediaTypes.video.playerSize);
          }),
              v = f.map(function (e) {
            return e.bids.map(function (e) {
              return e.bidder;
            }).filter(m.uniques);
          }).reduce(m.flatten).filter(m.uniques);
          R && R.syncEndpoint && (Array.isArray(r) && 0 < r.length && (a = r[0].gdprConsent, s = r[0].uspConsent), c = R.bidders.map(function (e) {
            return S["default"].aliasRegistry[e] || e;
          }).filter(function (e, r, t) {
            return t.indexOf(e) === r;
          }), d = c, o = a, u = s, V || (V = !0, p = {
            uuid: m.generateUUID(),
            bidders: d,
            account: R.accountId
          }, l = R.userSyncLimit, m.isNumber(l) && 0 < l && (p.limit = l), o && (void 0 !== o.consentString && (p.gdpr = o.gdprApplies ? 1 : 0), !1 !== o.gdprApplies && (p.gdpr_consent = o.consentString)), u && (p.us_privacy = u), b = JSON.stringify(p), Object(E.a)(R.syncEndpoint, function (e) {
            try {
              q((e = JSON.parse(e)).bidder_status);
            } catch (e) {
              m.logError(e);
            }
          }, b, {
            contentType: "text/plain",
            withCredentials: !0
          })));
          var g = K.buildRequest(e, r, f),
              y = g && JSON.stringify(g);
          g && y && n(R.endpoint, {
            success: function success(e) {
              return function (e, r, i, n, t) {
                var a;

                try {
                  a = JSON.parse(e), K.interpretResponse(a, i, r).forEach(function (e) {
                    var r = e.adUnit,
                        t = e.bid;
                    Object(O.isValid)(r, t, i) && n(r, t);
                  }), i.forEach(function (e) {
                    return w.a.emit(h.EVENTS.BIDDER_DONE, e);
                  });
                } catch (e) {
                  m.logError(e);
                }

                (!a || a.status && k()(a.status, "Error")) && m.logError("error parsing response: ", a.status);
                t(), function (e) {
                  e.forEach(function (e) {
                    var r = S["default"].getBidAdapter(e);
                    r && r.registerSyncs && r.registerSyncs([]);
                  });
                }(r);
              }(e, v, r, t, i);
            },
            error: i
          }, y, {
            contentType: "text/plain",
            withCredentials: !0
          });
        }, T(this, {
          callBids: e.callBids,
          setBidderCode: e.setBidderCode,
          type: B
        });
      }

      S["default"].registerBidAdapter(new p(), "prebidServer");
    },
    483: function _(e, r, t) {
      t.d(r, "a", function () {
        return i;
      });
      var i = {
        appnexus: {
          adapter: "prebidServer",
          enabled: !0,
          endpoint: "https://prebid.adnxs.com/pbs/v1/openrtb2/auction",
          syncEndpoint: "https://prebid.adnxs.com/pbs/v1/cookie_sync",
          timeout: 1e3
        },
        rubicon: {
          adapter: "prebidServer",
          enabled: !0,
          endpoint: "https://prebid-server.rubiconproject.com/openrtb2/auction",
          syncEndpoint: "https://prebid-server.rubiconproject.com/cookie_sync",
          timeout: 500
        }
      };
    }
  }, [481]);
  pbjsChunk([100], {
    540: function _(e, r, t) {
      e.exports = t(541);
    },
    541: function _(e, r, t) {
      Object.defineProperty(r, "__esModule", {
        value: !0
      }), t.d(r, "FASTLANE_ENDPOINT", function () {
        return o;
      }), t.d(r, "VIDEO_ENDPOINT", function () {
        return l;
      }), t.d(r, "SYNC_ENDPOINT", function () {
        return a;
      }), t.d(r, "spec", function () {
        return x;
      }), r.hasVideoMediaType = c, r.masSizeOrdering = S, r.determineRubiconVideoSizeId = C, r.getPriceGranularity = j, r.hasValidVideoParams = k, r.hasValidSupplyChainParams = T, r.encodeParam = w, r.resetUserSync = function () {
        R = !1;
      };
      var m = t(0),
          i = t(1),
          g = t(3),
          u = t(2);

      function v(e, r) {
        return function (e) {
          if (Array.isArray(e)) return e;
        }(e) || function (e, r) {
          if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e))) return;
          var t = [],
              i = !0,
              n = !1,
              o = void 0;

          try {
            for (var a, s = e[Symbol.iterator](); !(i = (a = s.next()).done) && (t.push(a.value), !r || t.length !== r); i = !0) {
              ;
            }
          } catch (e) {
            n = !0, o = e;
          } finally {
            try {
              i || null == s["return"] || s["return"]();
            } finally {
              if (n) throw o;
            }
          }

          return t;
        }(e, r) || function (e, r) {
          if (!e) return;
          if ("string" == typeof e) return n(e, r);
          var t = Object.prototype.toString.call(e).slice(8, -1);
          "Object" === t && e.constructor && (t = e.constructor.name);
          if ("Map" === t || "Set" === t) return Array.from(e);
          if ("Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return n(e, r);
        }(e, r) || function () {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function n(e, r) {
        (null == r || r > e.length) && (r = e.length);

        for (var t = 0, i = new Array(r); t < r; t++) {
          i[t] = e[t];
        }

        return i;
      }

      function b() {
        return (b = Object.assign || function (e) {
          for (var r = 1; r < arguments.length; r++) {
            var t = arguments[r];

            for (var i in t) {
              Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
            }
          }

          return e;
        }).apply(this, arguments);
      }

      function p(e, r, t) {
        return r in e ? Object.defineProperty(e, r, {
          value: t,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : e[r] = t, e;
      }

      function y(e) {
        return (y = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
          return _typeof4(e);
        } : function (e) {
          return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof4(e);
        })(e);
      }

      var o = "https://fastlane.rubiconproject.com/a/api/fastlane.json",
          l = "https://prebid-server.rubiconproject.com/openrtb2/auction",
          a = "https://eus.rubiconproject.com/usync.html",
          d = {
        FASTLANE: {
          id: "dt.id",
          keyv: "dt.keyv",
          pref: "dt.pref"
        },
        PREBID_SERVER: {
          id: "id",
          keyv: "keyv"
        }
      },
          f = {
        1: "468x60",
        2: "728x90",
        5: "120x90",
        8: "120x600",
        9: "160x600",
        10: "300x600",
        13: "200x200",
        14: "250x250",
        15: "300x250",
        16: "336x280",
        17: "240x400",
        19: "300x100",
        31: "980x120",
        32: "250x360",
        33: "180x500",
        35: "980x150",
        37: "468x400",
        38: "930x180",
        39: "750x100",
        40: "750x200",
        41: "750x300",
        42: "2x4",
        43: "320x50",
        44: "300x50",
        48: "300x300",
        53: "1024x768",
        54: "300x1050",
        55: "970x90",
        57: "970x250",
        58: "1000x90",
        59: "320x80",
        60: "320x150",
        61: "1000x1000",
        64: "580x500",
        65: "640x480",
        66: "930x600",
        67: "320x480",
        68: "1800x1000",
        72: "320x320",
        73: "320x160",
        78: "980x240",
        79: "980x300",
        80: "980x400",
        83: "480x300",
        94: "970x310",
        96: "970x210",
        101: "480x320",
        102: "768x1024",
        103: "480x280",
        105: "250x800",
        108: "320x240",
        113: "1000x300",
        117: "320x100",
        125: "800x250",
        126: "200x600",
        144: "980x600",
        145: "980x150",
        152: "1000x250",
        156: "640x320",
        159: "320x250",
        179: "250x600",
        195: "600x300",
        198: "640x360",
        199: "640x200",
        213: "1030x590",
        214: "980x360",
        221: "1x1",
        229: "320x180",
        232: "580x400",
        234: "6x6",
        251: "2x2",
        257: "400x600",
        264: "970x1000",
        265: "1920x1080",
        274: "1800x200",
        278: "320x500",
        282: "320x400",
        288: "640x380"
      };

      m._each(f, function (e, r) {
        return f[e] = r;
      });

      var x = {
        code: "rubicon",
        supportedMediaTypes: [u.b, u.d],
        isBidRequestValid: function isBidRequestValid(e) {
          if ("object" !== y(e.params)) return !1;

          for (var r = 0, t = ["accountId", "siteId", "zoneId"]; r < t.length; r++) {
            if (e.params[t[r]] = parseInt(e.params[t[r]]), isNaN(e.params[t[r]])) return m.logError("Rubicon: wrong format of accountId or siteId or zoneId."), !1;
          }

          var i = A(e, !0);
          return !!i && ("video" !== i || k(e));
        },
        buildRequests: function buildRequests(e, c) {
          var n,
              r = e.filter(function (e) {
            return "video" === A(e);
          }).map(function (e) {
            e.startTime = new Date().getTime();
            var r = {
              id: e.transactionId,
              test: g.b.getConfig("debug") ? 1 : 0,
              cur: ["USD"],
              source: {
                tid: e.transactionId
              },
              tmax: g.b.getConfig("TTL") || 1e3,
              imp: [{
                exp: 300,
                id: e.adUnitCode,
                secure: 1,
                ext: p({}, e.bidder, e.params),
                video: m.deepAccess(e, "mediaTypes.video") || {}
              }],
              ext: {
                prebid: {
                  cache: {
                    vastxml: {
                      returnCreative: !1
                    }
                  },
                  targeting: {
                    includewinners: !0,
                    includebidderkeys: !1,
                    pricegranularity: j(g.b)
                  }
                }
              }
            };
            "rubicon" !== e.bidder && (r.ext.prebid.aliases = p({}, e.bidder, "rubicon"));
            var t = parseFloat(m.deepAccess(e, "params.floor"));
            isNaN(t) || (r.imp[0].bidfloor = t), r.imp[0].ext[e.bidder].video.size_id = C(e), function (r, t, e) {
              if (!r) return;
              "object" === y(g.b.getConfig("app")) ? r.app = g.b.getConfig("app") : r.site = {
                page: _(t, e)
              };
              "object" === y(g.b.getConfig("device")) && (r.device = g.b.getConfig("device"));
              t.params.video.language && ["site", "device"].forEach(function (e) {
                r[e] && (r[e].content = b({
                  language: t.params.video.language
                }, r[e].content));
              });
            }(r, e, c), function (e, r) {
              "object" === y(e.imp[0].video) && void 0 === e.imp[0].video.skip && (e.imp[0].video.skip = r.params.video.skip);
              "object" === y(e.imp[0].video) && void 0 === e.imp[0].video.skipafter && (e.imp[0].video.skipafter = r.params.video.skipdelay);
              "object" === y(e.imp[0].video) && void 0 === e.imp[0].video.pos && ("atf" === r.params.position ? e.imp[0].video.pos = 1 : "btf" === r.params.position && (e.imp[0].video.pos = 3));
              var t = I(r, "video");
              e.imp[0].video.w = t[0], e.imp[0].video.h = t[1];
            }(r, e);
            var i,
                n = h(e, "PREBID_SERVER");
            n && m.deepSetValue(r, "user.ext.digitrust", n), c.gdprConsent && ("boolean" == typeof c.gdprConsent.gdprApplies && (i = c.gdprConsent.gdprApplies ? 1 : 0), m.deepSetValue(r, "regs.ext.gdpr", i), m.deepSetValue(r, "user.ext.consent", c.gdprConsent.consentString)), c.uspConsent && m.deepSetValue(r, "regs.ext.us_privacy", c.uspConsent), e.userId && "object" === y(e.userId) && (e.userId.tdid || e.userId.pubcid || e.userId.lipb || e.userId.idl_env) && (m.deepSetValue(r, "user.ext.eids", []), e.userId.tdid && r.user.ext.eids.push({
              source: "adserver.org",
              uids: [{
                id: e.userId.tdid,
                ext: {
                  rtiPartner: "TDID"
                }
              }]
            }), e.userId.pubcid && r.user.ext.eids.push({
              source: "pubcommon",
              uids: [{
                id: e.userId.pubcid
              }]
            }), e.userId.lipb && e.userId.lipb.lipbid && (r.user.ext.eids.push({
              source: "liveintent.com",
              uids: [{
                id: e.userId.lipb.lipbid
              }]
            }), r.user.ext.tpid = {
              source: "liveintent.com",
              uid: e.userId.lipb.lipbid
            }, Array.isArray(e.userId.lipb.segments) && e.userId.lipb.segments.length && m.deepSetValue(r, "rp.target.LIseg", e.userId.lipb.segments)), e.userId.idl_env && r.user.ext.eids.push({
              source: "liveramp.com",
              uids: [{
                id: e.userId.idl_env
              }]
            })), !0 === g.b.getConfig("coppa") && m.deepSetValue(r, "regs.coppa", 1), e.schain && T(e.schain) && m.deepSetValue(r, "source.ext.schain", e.schain);
            var o,
                a = b({}, e.params.inventory, g.b.getConfig("fpd.context")),
                s = b({}, e.params.visitor, g.b.getConfig("fpd.user"));
            m.isEmpty(a) && m.isEmpty(s) || (o = {
              bidders: [c.bidderCode],
              config: {
                fpd: {}
              }
            }, m.isEmpty(a) || (o.config.fpd.site = a), m.isEmpty(s) || (o.config.fpd.user = s), m.deepSetValue(r, "ext.prebid.bidderconfig.0", o));
            var d = m.deepAccess(e, "fpd.context.pbAdSlot");
            return "string" == typeof d && d && m.deepSetValue(r.imp[0].ext, "context.data.adslot", d), e.storedAuctionResponse && m.deepSetValue(r.imp[0], "ext.prebid.storedauctionresponse.id", e.storedAuctionResponse.toString()), {
              method: "POST",
              url: l,
              data: r,
              bidRequest: e
            };
          });
          return !0 !== g.b.getConfig("rubicon.singleRequest") ? r.concat(e.filter(function (e) {
            return "banner" === A(e);
          }).map(function (e) {
            var i = x.createSlotParams(e, c);
            return {
              method: "GET",
              url: o,
              data: x.getOrderedParams(i).reduce(function (e, r) {
                var t = i[r];
                return m.isStr(t) && "" !== t || m.isNumber(t) ? "".concat(e).concat(w(r, t), "&") : e;
              }, "") + "slots=1&rand=".concat(Math.random()),
              bidRequest: e
            };
          })) : (n = e.filter(function (e) {
            return "banner" === A(e);
          }).reduce(function (e, r) {
            return (e[r.params.siteId] = e[r.params.siteId] || []).push(r), e;
          }, {}), r.concat(Object.keys(n).reduce(function (r, e) {
            var t, i;
            return t = n[e], i = 10, t.map(function (e, r) {
              return r % i == 0 ? t.slice(r, r + i) : null;
            }).filter(function (e) {
              return e;
            }).forEach(function (e) {
              var i = x.combineSlotUrlParams(e.map(function (e) {
                return x.createSlotParams(e, c);
              }));
              r.push({
                method: "GET",
                url: o,
                data: x.getOrderedParams(i).reduce(function (e, r) {
                  var t = i[r];
                  return m.isStr(t) && "" !== t || m.isNumber(t) ? "".concat(e).concat(w(r, t), "&") : e;
                }, "") + "slots=".concat(e.length, "&rand=").concat(Math.random()),
                bidRequest: e
              });
            }), r;
          }, [])));
        },
        getOrderedParams: function getOrderedParams(e) {
          var r = /^tg_v/,
              t = /^tg_i/,
              i = ["account_id", "site_id", "zone_id", "size_id", "alt_size_ids", "p_pos", "gdpr", "gdpr_consent", "us_privacy", "rp_schain", "tpid_tdid", "tpid_liveintent.com", "tg_v.LIseg", "dt.id", "dt.keyv", "dt.pref", "rf", "p_geo.latitude", "p_geo.longitude", "kw"].concat(Object.keys(e).filter(function (e) {
            return r.test(e);
          })).concat(Object.keys(e).filter(function (e) {
            return t.test(e);
          })).concat(["tk_flint", "x_source.tid", "x_source.pchain", "p_screen_res", "rp_floor", "rp_secure", "tk_user_key"]);
          return i.concat(Object.keys(e).filter(function (e) {
            return -1 === i.indexOf(e);
          }));
        },
        combineSlotUrlParams: function combineSlotUrlParams(n) {
          if (1 === n.length) return n[0];
          var i = n.reduce(function (r, t, i) {
            return Object.keys(t).forEach(function (e) {
              r.hasOwnProperty(e) || (r[e] = new Array(n.length)), r[e].splice(i, 1, t[e]);
            }), r;
          }, {}),
              o = new RegExp("^([^;]*)(;\\1)+$");
          return Object.keys(i).forEach(function (e) {
            var r = i[e].join(";"),
                t = r.match(o);
            i[e] = t ? t[1] : r;
          }), i;
        },
        createSlotParams: function createSlotParams(e, r) {
          e.startTime = new Date().getTime();
          var t = e.params,
              i = I(e, "banner"),
              n = v(t.latLong || [], 2),
              o = n[0],
              a = n[1],
              s = g.b.getConfig("rubicon.int_type"),
              d = {
            account_id: t.accountId,
            site_id: t.siteId,
            zone_id: t.zoneId,
            size_id: i[0],
            alt_size_ids: i.slice(1).join(",") || void 0,
            rp_floor: .01 < (t.floor = parseFloat(t.floor)) ? t.floor : .01,
            rp_secure: "1",
            tk_flint: "".concat(s || "pbjs_lite", "_v3.13.0-pre"),
            "x_source.tid": e.transactionId,
            "x_source.pchain": t.pchain,
            p_screen_res: [window.screen.width, window.screen.height].join("x"),
            tk_user_key: t.userId,
            "p_geo.latitude": isNaN(parseFloat(o)) ? void 0 : parseFloat(o).toFixed(4),
            "p_geo.longitude": isNaN(parseFloat(a)) ? void 0 : parseFloat(a).toFixed(4),
            "tg_fl.eid": e.code,
            rf: _(e, r)
          };
          d.p_pos = "atf" === t.position || "btf" === t.position ? t.position : "", e.userId && (e.userId.tdid && (d.tpid_tdid = e.userId.tdid), e.userId.lipb && e.userId.lipb.lipbid && (d["tpid_liveintent.com"] = e.userId.lipb.lipbid, Array.isArray(e.userId.lipb.segments) && e.userId.lipb.segments.length && (d["tg_v.LIseg"] = e.userId.lipb.segments.join(","))), e.userId.idl_env && (d["tpid_liveramp.com"] = e.userId.idl_env)), r.gdprConsent && ("boolean" == typeof r.gdprConsent.gdprApplies && (d.gdpr = Number(r.gdprConsent.gdprApplies)), d.gdpr_consent = r.gdprConsent.consentString), r.uspConsent && (d.us_privacy = encodeURIComponent(r.uspConsent));
          var c = b({}, t.visitor, g.b.getConfig("fpd.user"));
          Object.keys(c).forEach(function (e) {
            null != c[e] && "keywords" !== e && (d["tg_v.".concat(e)] = "object" !== y(c[e]) || Array.isArray(c[e]) ? c[e].toString() : JSON.stringify(c[e]));
          });
          var u = b({}, t.inventory, g.b.getConfig("fpd.context"));
          Object.keys(u).forEach(function (e) {
            null != u[e] && "keywords" !== e && (d["tg_i.".concat(e)] = "object" !== y(u[e]) || Array.isArray(u[e]) ? u[e].toString() : JSON.stringify(u[e]));
          });
          var p = (t.keywords || []).concat(m.deepAccess(g.b.getConfig("fpd.user"), "keywords") || [], m.deepAccess(g.b.getConfig("fpd.context"), "keywords") || []);
          d.kw = p.length ? p.join(",") : "";
          var l = m.deepAccess(e, "fpd.context.pbAdSlot");
          "string" == typeof l && l && (d["tg_i.dfp_ad_unit_code"] = l.replace(/^\/+/, ""));
          var f = h(e, "FASTLANE");
          return b(d, f), !0 === g.b.getConfig("coppa") && (d.coppa = 1), e.schain && T(e.schain) && (d.rp_schain = x.serializeSupplyChain(e.schain)), d;
        },
        serializeSupplyChain: function serializeSupplyChain(e) {
          if (!T(e)) return "";
          var r = e.ver,
              t = e.complete,
              i = e.nodes;
          return "".concat(r, ",").concat(t, "!").concat(x.serializeSupplyChainNodes(i));
        },
        serializeSupplyChainNodes: function serializeSupplyChainNodes(e) {
          var t = ["asi", "sid", "hp", "rid", "name", "domain"];
          return e.map(function (r) {
            return t.map(function (e) {
              return encodeURIComponent(r[e] || "");
            }).join(",");
          }).join("!");
        },
        interpretResponse: function interpretResponse(d, e) {
          var c = e.bidRequest;
          if (!(d = d.body) || "object" !== y(d)) return [];

          if (d.seatbid) {
            var r = m.deepAccess(d, "ext.errors.rubicon");
            Array.isArray(r) && 0 < r.length && m.logWarn("Rubicon: Error in video response");
            var o = [];
            return d.seatbid.forEach(function (n) {
              (n.bid || []).forEach(function (e) {
                var r = {
                  requestId: c.bidId,
                  currency: d.cur || "USD",
                  creativeId: e.crid,
                  cpm: e.price || 0,
                  bidderCode: n.seat,
                  ttl: 300,
                  netRevenue: !1 !== g.b.getConfig("rubicon.netRevenue"),
                  width: e.w || m.deepAccess(c, "mediaTypes.video.w") || m.deepAccess(c, "params.video.playerWidth"),
                  height: e.h || m.deepAccess(c, "mediaTypes.video.h") || m.deepAccess(c, "params.video.playerHeight")
                };
                e.id && (r.seatBidId = e.id), e.dealid && (r.dealId = e.dealid);
                var t,
                    i = m.deepAccess(d, "ext.responsetimemillis.rubicon");
                c && i && (c.serverResponseTimeMs = i), m.deepAccess(e, "ext.prebid.type") === u.d ? (r.mediaType = u.d, (t = m.deepAccess(e, "ext.prebid.targeting")) && "object" === y(t) && (r.adserverTargeting = t), e.ext.prebid.cache && "object" === y(e.ext.prebid.cache.vastXml) && e.ext.prebid.cache.vastXml.cacheId && e.ext.prebid.cache.vastXml.url ? (r.videoCacheKey = e.ext.prebid.cache.vastXml.cacheId, r.vastUrl = e.ext.prebid.cache.vastXml.url) : t && t.hb_uuid && t.hb_cache_host && t.hb_cache_path && (r.videoCacheKey = t.hb_uuid, r.vastUrl = "https://".concat(t.hb_cache_host).concat(t.hb_cache_path, "?uuid=").concat(t.hb_uuid)), e.adm && (r.vastXml = e.adm), e.nurl && (r.vastUrl = e.nurl), !r.vastUrl && e.nurl && (r.vastUrl = e.nurl)) : m.logWarn("Rubicon: video response received non-video media type"), o.push(r);
              });
            }), o;
          }

          var t = d.ads;
          return "object" !== y(c) || Array.isArray(c) || "video" !== A(c) || "object" !== y(t) || (t = t[c.adUnitCode]), !Array.isArray(t) || t.length < 1 ? [] : t.reduce(function (e, r, t) {
            if ("ok" !== r.status) return e;
            var i,
                n,
                o,
                a,
                s = Array.isArray(c) ? c[t] : c;
            return s && "object" === y(s) ? (i = {
              requestId: s.bidId,
              currency: "USD",
              creativeId: r.creative_id || "".concat(r.network || "", "-").concat(r.advertiser || ""),
              cpm: r.cpm || 0,
              dealId: r.deal,
              ttl: 300,
              netRevenue: !1 !== g.b.getConfig("rubicon.netRevenue"),
              rubicon: {
                advertiserId: r.advertiser,
                networkId: r.network
              },
              meta: {
                advertiserId: r.advertiser,
                networkId: r.network
              }
            }, r.creative_type && (i.mediaType = r.creative_type), r.creative_type === u.d ? (i.width = s.params.video.playerWidth, i.height = s.params.video.playerHeight, i.vastUrl = r.creative_depot_url, i.impression_id = r.impression_id, i.videoCacheKey = r.impression_id) : (i.ad = (o = r.script, a = r.impression_id, "<html>\n<head><script type='text/javascript'>inDapIF=true;<\/script></head>\n<body style='margin : 0; padding: 0;'>\n\x3c!-- Rubicon Project Ad Tag --\x3e\n<div data-rp-impression-id='".concat(a, "'>\n<script type='text/javascript'>").concat(o, "<\/script>\n</div>\n</body>\n</html>")), n = v(f[r.size_id].split("x").map(function (e) {
              return Number(e);
            }), 2), i.width = n[0], i.height = n[1]), i.rubiconTargeting = (Array.isArray(r.targeting) ? r.targeting : []).reduce(function (e, r) {
              return e[r.key] = r.values[0], e;
            }, {
              rpfl_elemid: s.adUnitCode
            }), e.push(i)) : m.logError("Rubicon: bidRequest undefined at index position:".concat(t), c, d), e;
          }, []).sort(function (e, r) {
            return (r.cpm || 0) - (e.cpm || 0);
          });
        },
        getUserSyncs: function getUserSyncs(e, r, t, i) {
          if (!R && e.iframeEnabled) {
            var n = "";
            return t && "string" == typeof t.consentString && ("boolean" == typeof t.gdprApplies ? n += "?gdpr=".concat(Number(t.gdprApplies), "&gdpr_consent=").concat(t.consentString) : n += "?gdpr_consent=".concat(t.consentString)), i && (n += "".concat(n ? "&" : "?", "us_privacy=").concat(encodeURIComponent(i))), R = !0, {
              type: "iframe",
              url: a + n
            };
          }
        },
        transformBidParams: function transformBidParams(e) {
          return m.convertTypes({
            accountId: "number",
            siteId: "number",
            zoneId: "number"
          }, e);
        }
      };

      function h(e, r) {
        var t,
            i = 0 < arguments.length && void 0 !== e ? e : {},
            n = 1 < arguments.length ? r : void 0;
        if (!n || !d[n]) return null;
        var o = d[n];

        var a = function () {
          var e = m.deepAccess(i, "userId.digitrustid.data");
          if (e) return e;
          var r = window.DigiTrust && (g.b.getConfig("digiTrustId") || window.DigiTrust.getUser({
            member: "T9QSFKPDN9"
          }));
          return r && r.success && r.identity || null;
        }();

        if (!a || a.privacy && a.privacy.optout) return null;
        var s = (p(t = {}, o.id, a.id), p(t, o.keyv, a.keyv), t);
        return o.pref && (s[o.pref] = 0), s;
      }

      function _(e, r) {
        var t = g.b.getConfig("pageUrl"),
            t = e.params.referrer ? e.params.referrer : t || r.refererInfo.referer;
        return e.params.secure ? t.replace(/^http:/i, "https:") : t;
      }

      function I(e, r) {
        var t = e.params;

        if ("video" === r) {
          var i = [];
          return t.video && t.video.playerWidth && t.video.playerHeight ? i = [t.video.playerWidth, t.video.playerHeight] : Array.isArray(m.deepAccess(e, "mediaTypes.video.playerSize")) && 1 === e.mediaTypes.video.playerSize.length ? i = e.mediaTypes.video.playerSize[0] : Array.isArray(e.sizes) && 0 < e.sizes.length && Array.isArray(e.sizes[0]) && 1 < e.sizes[0].length && (i = e.sizes[0]), i;
        }

        var n = [];
        return Array.isArray(t.sizes) ? n = t.sizes : void 0 !== m.deepAccess(e, "mediaTypes.banner.sizes") ? n = s(e.mediaTypes.banner.sizes) : Array.isArray(e.sizes) && 0 < e.sizes.length ? n = s(e.sizes) : m.logWarn("Rubicon: no sizes are setup or found"), S(n);
      }

      function s(e) {
        return m.parseSizesInput(e).reduce(function (e, r) {
          var t = parseInt(f[r], 10);
          return t && e.push(t), e;
        }, []);
      }

      function c(e) {
        return "object" === y(m.deepAccess(e, "params.video")) && void 0 !== m.deepAccess(e, "mediaTypes.".concat(u.d));
      }

      function A(e, r) {
        var t = 1 < arguments.length && void 0 !== r && r;
        return c(e) ? -1 === ["outstream", "instream"].indexOf(m.deepAccess(e, "mediaTypes.".concat(u.d, ".context"))) ? void (t && m.logError("Rubicon: mediaTypes.video.context must be outstream or instream")) : I(e, "video").length < 2 ? void (t && m.logError("Rubicon: could not determine the playerSize of the video")) : (t && m.logMessage("Rubicon: making video request for adUnit", e.adUnitCode), "video") : 0 === I(e, "banner").length ? void (t && m.logError("Rubicon: could not determine the sizes for banner request")) : (t && m.logMessage("Rubicon: making banner request for adUnit", e.adUnitCode), "banner");
      }

      function S(e) {
        var n = [15, 2, 9];
        return e.sort(function (e, r) {
          var t = n.indexOf(e),
              i = n.indexOf(r);
          return -1 < t || -1 < i ? -1 === t ? 1 : -1 === i ? -1 : t - i : e - r;
        });
      }

      function C(e) {
        var r = parseInt(m.deepAccess(e, "params.video.size_id"));
        return isNaN(r) ? "outstream" === m.deepAccess(e, "mediaTypes.".concat(u.d, ".context")) ? 203 : 201 : r;
      }

      function j(e) {
        return {
          ranges: {
            low: [{
              max: 5,
              increment: .5
            }],
            medium: [{
              max: 20,
              increment: .1
            }],
            high: [{
              max: 20,
              increment: .01
            }],
            auto: [{
              max: 5,
              increment: .05
            }, {
              min: 5,
              max: 10,
              increment: .1
            }, {
              min: 10,
              max: 20,
              increment: .5
            }],
            dense: [{
              max: 3,
              increment: .01
            }, {
              min: 3,
              max: 8,
              increment: .05
            }, {
              min: 8,
              max: 20,
              increment: .5
            }],
            custom: e.getConfig("customPriceBucket") && e.getConfig("customPriceBucket").buckets
          }[e.getConfig("priceGranularity")]
        };
      }

      function k(r) {
        var t = !0,
            e = Object.prototype.toString.call([]),
            i = Object.prototype.toString.call(0),
            n = {
          mimes: e,
          protocols: e,
          maxduration: i,
          linearity: i,
          api: e
        };
        return Object.keys(n).forEach(function (e) {
          Object.prototype.toString.call(m.deepAccess(r, "mediaTypes.video." + e)) !== n[e] && (t = !1, m.logError("Rubicon: mediaTypes.video." + e + " is required and must be of type: " + n[e]));
        }), t;
      }

      function T(e) {
        var r = !1,
            t = ["asi", "sid", "hp"];
        return e.nodes && ((r = e.nodes.reduce(function (e, r) {
          return e ? t.every(function (e) {
            return r[e];
          }) : e;
        }, !0)) || m.logError("Rubicon: required schain params missing")), r;
      }

      function w(e, r) {
        return "rp_schain" === e ? "rp_schain=".concat(r) : "".concat(e, "=").concat(encodeURIComponent(r));
      }

      var R = !1;
      Object(i.registerBidder)(x);
    }
  }, [540]);
  pbjsChunk([93], {
    558: function _(e, t, r) {
      e.exports = r(559);
    },
    559: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), r.d(t, "sharethroughInternal", function () {
        return s;
      }), r.d(t, "sharethroughAdapterSpec", function () {
        return c;
      });
      var n = r(1),
          i = r(0),
          o = "sharethrough",
          a = [1, 1],
          s = {
        b64EncodeUnicode: d,
        handleIframe: function handleIframe() {
          var e = !1;

          if (!window.lockedInFrame) {
            var t = document.createElement("script");
            t.src = "https://native.sharethrough.com/assets/sfp-set-targeting.js", t.type = "text/javascript";

            try {
              window.document.getElementsByTagName("body")[0].appendChild(t), e = !0;
            } catch (e) {
              i.logError("Trouble writing frame buster script, error details:", e);
            }
          }

          if (!(e ? window.top.STR && window.top.STR.Tag : window.STR && window.STR.Tag)) {
            var r = document.createElement("script");
            r.src = "https://native.sharethrough.com/assets/sfp.js", r.type = "text/javascript";

            try {
              e ? window.top.document.getElementsByTagName("body")[0].appendChild(r) : window.document.getElementsByTagName("body")[0].appendChild(r);
            } catch (e) {
              i.logError("Trouble writing sfp script, error details:", e);
            }
          }
        },
        isLockedInFrame: function isLockedInFrame() {
          window.lockedInFrame = !1;

          try {
            window.lockedInFrame = !window.top.document;
          } catch (e) {
            window.lockedInFrame = e instanceof DOMException;
          }
        },
        getProtocol: function getProtocol() {
          return document.location.protocol;
        }
      },
          c = {
        code: o,
        isBidRequestValid: function isBidRequestValid(e) {
          return !!e.params.pkey && e.bidder === o;
        },
        buildRequests: function buildRequests(e, n) {
          return e.map(function (e) {
            var t = {
              placement_key: e.params.pkey,
              bidId: e.bidId,
              consent_required: !1,
              instant_play_capable: function () {
                var e = navigator.userAgent;
                if (!e) return !1;
                var t = /Android/i.test(e),
                    r = /iPhone|iPad|iPod/i.test(e),
                    n = parseInt((/Chrome\/([0-9]+)/.exec(e) || [0, 0])[1]),
                    i = parseInt((/CriOS\/([0-9]+)/.exec(e) || [0, 0])[1]),
                    o = parseInt((/Version\/([0-9]+)/.exec(e) || [0, 0])[1]);
                return !!(t && 53 <= n || r && (10 <= o || 53 <= i) || !t && !r);
              }(),
              hbSource: "prebid",
              hbVersion: "3.13.0-pre",
              strVersion: "3.2.1"
            },
                r = s.getProtocol().indexOf("http") < 0;
            return t.secure = r || -1 < s.getProtocol().indexOf("https"), n && n.gdprConsent && n.gdprConsent.consentString && (t.consent_string = n.gdprConsent.consentString), n && n.gdprConsent && (t.consent_required = !!n.gdprConsent.gdprApplies), n && n.uspConsent && (t.us_privacy = n.uspConsent), e.userId && e.userId.tdid && (t.ttduid = e.userId.tdid), e.schain && (t.schain = JSON.stringify(e.schain)), e.bidfloor && (t.bidfloor = parseFloat(e.bidfloor)), {
              method: "GET",
              url: "https://btlr.sharethrough.com/WYu2BXv1/v1",
              data: t,
              strData: {
                skipIframeBusting: e.params.iframe,
                iframeSize: e.params.iframeSize,
                sizes: e.sizes
              }
            };
          });
        },
        interpretResponse: function interpretResponse(e, t) {
          var r = e.body;
          if (!r || !r.creatives || !r.creatives.length) return [];
          var n = r.creatives[0],
              i = a;

          function o(e) {
            return e[0] * e[1];
          }

          return (t.strData.iframeSize || t.strData.sizes.length) && (i = t.strData.iframeSize ? t.strData.iframeSize : t.strData.sizes.reduce(function (e, t) {
            return o(t) > o(e) ? t : e;
          })), [{
            requestId: t.data.bidId,
            width: i[0],
            height: i[1],
            cpm: n.cpm,
            creativeId: n.creative.creative_key,
            dealId: n.creative.deal_id,
            currency: "USD",
            netRevenue: !0,
            ttl: 360,
            ad: function (e, t) {
              var r = "str_response_".concat(t.data.bidId),
                  n = '\n    <div data-str-native-key="'.concat(t.data.placement_key, '" data-stx-response-name="').concat(r, '">\n    </div>\n    <script>var ').concat(r, ' = "').concat(d(JSON.stringify(e)), '"<\/script>\n  ');
              t.strData.skipIframeBusting ? n += '<script src="https://native.sharethrough.com/assets/sfp.js"><\/script>' : n += "\n      <script>\n        (".concat(s.isLockedInFrame.toString(), ")()\n      <\/script>\n      <script>\n        (").concat(s.handleIframe.toString(), ")()\n      <\/script>");
              return n;
            }(r, t)
          }];
        },
        getUserSyncs: function getUserSyncs(e, t, r, n) {
          var i = n ? "&us_privacy=".concat(n) : "",
              o = [];
          return e.pixelEnabled && 0 < t.length && t[0].body && t[0].body.cookieSyncUrls && t[0].body.cookieSyncUrls.forEach(function (e) {
            o.push({
              type: "image",
              url: e + i
            });
          }), o;
        },
        onTimeout: function onTimeout() {},
        onBidWon: function onBidWon() {},
        onSetTargeting: function onSetTargeting() {}
      };

      function d(e) {
        return btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g, function (e, t) {
          return String.fromCharCode("0x" + t);
        }));
      }

      Object(n.registerBidder)(c);
    }
  }, [558]);
  pbjsChunk([67], {
    620: function _(r, e, t) {
      r.exports = t(621);
    },
    621: function _(r, e, t) {
      Object.defineProperty(e, "__esModule", {
        value: !0
      }), t.d(e, "tripleliftAdapterSpec", function () {
        return s;
      });
      var n = t(2),
          i = t(1),
          o = t(0),
          u = t(3);

      function p(r) {
        return function (r) {
          if (Array.isArray(r)) return d(r);
        }(r) || function (r) {
          if ("undefined" != typeof Symbol && Symbol.iterator in Object(r)) return Array.from(r);
        }(r) || function (r, e) {
          if (!r) return;
          if ("string" == typeof r) return d(r, e);
          var t = Object.prototype.toString.call(r).slice(8, -1);
          "Object" === t && r.constructor && (t = r.constructor.name);
          if ("Map" === t || "Set" === t) return Array.from(r);
          if ("Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return d(r, e);
        }(r) || function () {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }

      function d(r, e) {
        (null == e || e > r.length) && (e = r.length);

        for (var t = 0, n = new Array(e); t < e; t++) {
          n[t] = r[t];
        }

        return n;
      }

      var a = !0,
          c = null,
          s = {
        code: "triplelift",
        supportedMediaTypes: [n.b],
        isBidRequestValid: function isBidRequestValid(r) {
          return void 0 !== r.params.inventoryCode;
        },
        buildRequests: function buildRequests(r, e) {
          var t,
              n = "https://tlx.3lift.com/header/auction?",
              i = function (r) {
            var e = {},
                t = r[0].schain;
            e.imp = r.map(function (r, e) {
              return {
                id: e,
                tagid: r.params.inventoryCode,
                floor: r.params.floor,
                banner: {
                  format: r.sizes.filter(l).map(function (r) {
                    return {
                      w: r[0],
                      h: r[1]
                    };
                  })
                }
              };
            });
            var n = [].concat(p(function (r) {
              return f(r, "tdid", "adserver.org", "TDID");
            }(r)), p(function (r) {
              return f(r, "idl_env", "liveramp.com", "idl");
            }(r)), p(function (r) {
              return f(r, "criteoId", "criteo.com", "criteoId");
            }(r)));
            0 < n.length && (e.user = {
              ext: {
                eids: n
              }
            });
            t && (e.ext = {
              schain: t
            });
            return e;
          }(r);

          return n = o.tryAppendQueryString(n, "lib", "prebid"), n = o.tryAppendQueryString(n, "v", "3.13.0-pre"), e && e.refererInfo && (t = e.refererInfo.referer, n = o.tryAppendQueryString(n, "referrer", t)), e && e.timeout && (n = o.tryAppendQueryString(n, "tmax", e.timeout)), e && e.gdprConsent && (void 0 !== e.gdprConsent.gdprApplies && (a = e.gdprConsent.gdprApplies, n = o.tryAppendQueryString(n, "gdpr", a.toString())), void 0 !== e.gdprConsent.consentString && (c = e.gdprConsent.consentString, n = o.tryAppendQueryString(n, "cmp_cs", c))), e && e.uspConsent && (n = o.tryAppendQueryString(n, "us_privacy", e.uspConsent)), !0 === u.b.getConfig("coppa") && (n = o.tryAppendQueryString(n, "coppa", !0)), n.lastIndexOf("&") === n.length - 1 && (n = n.substring(0, n.length - 1)), o.logMessage("tlCall request built: " + n), {
            method: "POST",
            url: n,
            data: i,
            bidderRequest: e
          };
        },
        interpretResponse: function interpretResponse(r, e) {
          var t = e.bidderRequest;
          return (r.body.bids || []).map(function (r) {
            return function (r, e) {
              var t = {},
                  n = e.width || 1,
                  i = e.height || 1,
                  u = e.deal_id || "",
                  o = e.crid || "";
              0 != e.cpm && e.ad && (t = {
                requestId: r.bids[e.imp_id].bidId,
                cpm: e.cpm,
                width: n,
                height: i,
                netRevenue: !0,
                ad: e.ad,
                creativeId: o,
                dealId: u,
                currency: "USD",
                ttl: 33
              });
              return t;
            }(t, r);
          });
        },
        getUserSyncs: function getUserSyncs(r, e, t, n) {
          var i = function (r) {
            if (!r) return;
            if (r.iframeEnabled) return "iframe";
            if (r.pixelEnabled) return "image";
          }(r);

          if (i) {
            var u = "https://eb2.3lift.com/sync?";
            return "image" === i && (u = o.tryAppendQueryString(u, "px", 1), u = o.tryAppendQueryString(u, "src", "prebid")), null !== c && (u = o.tryAppendQueryString(u, "gdpr", a), u = o.tryAppendQueryString(u, "cmp_cs", c)), n && (u = o.tryAppendQueryString(u, "us_privacy", n)), [{
              type: i,
              url: u
            }];
          }
        }
      };

      function f(r, e, t, n) {
        return r.map((o = e, function (r) {
          return r && r.userId && r.userId[o];
        })).filter(function (r) {
          return !!r;
        }).map((i = t, u = n, function (r) {
          return {
            source: i,
            uids: [{
              id: r,
              ext: {
                rtiPartner: u
              }
            }]
          };
        }));
        var i, u, o;
      }

      function l(r) {
        return 2 === r.length && "number" == typeof r[0] && "number" == typeof r[1];
      }

      Object(i.registerBidder)(s);
    }
  }, [620]);
  pbjsChunk([66], {
    622: function _(e, r, t) {
      e.exports = t(623);
    },
    623: function _(e, r, t) {
      Object.defineProperty(r, "__esModule", {
        value: !0
      }), t.d(r, "spec", function () {
        return v;
      });
      var m = t(0),
          s = t(1),
          o = t(10),
          c = t(2),
          f = "Bid from response has no auid parameter - ",
          l = "Bid from response has no adm parameter - ",
          p = "Array of bid objects is empty",
          g = "Can't find in requested bids the bid with auid - ",
          u = "Seatbid array from response has empty item",
          y = "Response is empty",
          b = "Response has empty seatbid array",
          h = "Seatbid from response has no array of bid objects - ",
          v = {
        code: "trustx",
        supportedMediaTypes: [c.b, c.d],
        isBidRequestValid: function isBidRequestValid(e) {
          return !!e.params.uid;
        },
        buildRequests: function buildRequests(e, r) {
          var a,
              o,
              p = [],
              u = {},
              c = {},
              f = {},
              l = "net";
          (e || []).forEach(function (e) {
            "gross" === e.params.priceType && (l = "gross"), o = e.bidderRequestId;
            var r = e.params.uid,
                t = e.adUnitCode;
            p.push(r);
            var s,
                n = m.parseSizesInput(e.sizes);
            a || m.isEmpty(e.params.keywords) || (0 < (s = m.transformBidderParamKeywords(e.params.keywords)).length && s.forEach(E), a = s), c[r] || (c[r] = {});
            var d = c[r];
            d[t] ? d[t].bids.push(e) : d[t] = {
              adUnitCode: t,
              bids: [e],
              parents: []
            };
            var i = d[t];
            n.forEach(function (e) {
              f[e] = !0, u[r] || (u[r] = {}), u[r][e] ? u[r][e].push(i) : u[r][e] = [i], i.parents.push({
                parent: u[r],
                key: e,
                uid: r
              });
            });
          });
          var t = {
            pt: l,
            auids: p.join(","),
            sizes: m.getKeys(f).join(","),
            r: o,
            wrapperType: "Prebid_js",
            wrapperVersion: "3.13.0-pre"
          };
          return a && (t.keywords = JSON.stringify(a)), r && (r.refererInfo && r.refererInfo.referer && (t.u = r.refererInfo.referer), r.timeout && (t.wtimeout = r.timeout), r.gdprConsent && (r.gdprConsent.consentString && (t.gdpr_consent = r.gdprConsent.consentString), t.gdpr_applies = "boolean" == typeof r.gdprConsent.gdprApplies ? Number(r.gdprConsent.gdprApplies) : 1), r.uspConsent && (t.us_privacy = r.uspConsent)), {
            method: "GET",
            url: "https://sofia.trustx.org/hb",
            data: m.parseQueryStringParameters(t).replace(/\&$/, ""),
            bidsMap: u
          };
        },
        interpretResponse: function interpretResponse(e, r, t) {
          var s = 2 < arguments.length && void 0 !== t ? t : o.a;
          e = e && e.body;
          var n,
              d = [],
              i = r.bidsMap,
              a = r.data.pt;
          return e ? e.seatbid && !e.seatbid.length && (n = b) : n = y, !n && e.seatbid && e.seatbid.forEach(function (e) {
            !function (e, d, r, t, s) {
              if (!e) return;
              var n;
              e.auid || (n = f + JSON.stringify(e));
              {
                var i, a, o, p, u;
                e.adm ? (i = d[e.auid]) ? (a = "".concat(e.w, "x").concat(e.h), i[a] && (o = i[a][0], p = o.bids.shift(), u = {
                  requestId: p.bidId,
                  bidderCode: v.code,
                  cpm: e.price,
                  width: e.w,
                  height: e.h,
                  creativeId: e.auid,
                  currency: "USD",
                  netRevenue: "gross" !== r,
                  ttl: 360,
                  dealId: e.dealid
                }, "video" === e.content_type ? (u.vastXml = e.adm, u.mediaType = c.d, u.adResponse = {
                  content: u.vastXml
                }, p.renderer || p.mediaTypes && p.mediaTypes.video && "outstream" !== p.mediaTypes.video.context || (u.renderer = function (e, r) {
                  var t = r.install({
                    id: e.id,
                    url: e.url,
                    loaded: !1
                  });

                  try {
                    t.setRender(w);
                  } catch (e) {
                    m.logWarn("Prebid Error calling setRender on renderer", e);
                  }

                  return t;
                }({
                  id: p.bidId,
                  url: "https://acdn.adnxs.com/video/outstream/ANOutstreamVideo.js"
                }, s))) : (u.ad = e.adm, u.mediaType = c.b), t.push(u), o.bids.length || o.parents.forEach(function (e) {
                  var r = e.parent,
                      t = e.key,
                      s = e.uid,
                      n = r[t].indexOf(o);
                  -1 < n && r[t].splice(n, 1), r[t].length || (delete r[t], m.getKeys(r).length || delete d[s]);
                }))) : n = g + e.auid : n = l + JSON.stringify(e);
              }
              n && m.logError(n);
            }(function (e) {
              e ? e.bid ? e.bid[0] || m.logError(p) : m.logError(h + JSON.stringify(e)) : m.logError(u);
              return e && e.bid && e.bid[0];
            }(e), i, a, d, s);
          }), n && m.logError(n), d;
        },
        getUserSyncs: function getUserSyncs(e) {
          if (e.pixelEnabled) return [{
            type: "image",
            url: "https://sofia.trustx.org/push_sync"
          }];
        }
      };

      function E(e) {
        var r;
        r = e.value, m.isArray(r) && 0 < r.length && "" === e.value[0] && delete e.value;
      }

      function w(e) {
        e.renderer.push(function () {
          window.ANOutstreamVideo.renderAd({
            targetId: e.adUnitCode,
            adResponse: e.adResponse
          });
        });
      }

      Object(s.registerBidder)(v);
    }
  }, [622]);
  pbjs.processQueue();
  /*
      Prebid Module - Version 4.0.25
      @4.0.0:  - Initialization Update for GDPR/CCPA
      @4.0.1:  - Fix for missing call to register module
      @4.0.4:  - brandCategoryExclusion Fixes
      @4.0.5:  - isIntl fix
      @4.0.6:  - Page-Level filtering
      @4.0.7:  - Monetized Slot filtering
      @4.0.8:  - GDPR Consent Settings
      @4.0.9:  - Native Fixes
      @4.0.10: - AppNexus InvCode Fixes
      @4.0.11: - Pangaea Member ID Fix
      @4.0.12: - Pricing Granularity Fix
      @4.0.13: - Midroll AdUnitCode Fix
      @4.0.14: - Midroll Targeting Return Fix
      @4.0.15: - Options Structure Update
      @4.0.16: - Bid Targeting Reliability
      @4.0.17: - Prebid 3.13 update
      @4.0.18: - Added SEND_ALL_BIDS to Options
      @4.0.19: - Prebid 3.24 update
      @4.0.20: - fixed googletag undefined error
      @4.0.21: - added try catches to bids back handlers to prevent crashes
      @4.0.22: - Added Triplelift
      @4.0.23: - wrapping try catch on everything
      @4.0.24: - Added Kargo and DistrictM adapters
      @4.0.25: - OptanonLaoded timing fix
      @4.0.26: - Removed DESKTOP from Kargo
       ------------------------------------------------------
      GDPR Status: Blocked
      CCPA Status: Blocked
   */

  var MODULE_NAME = 'Prebid Module';
  var MODULE_VERSION = 'v4.0.26';
  var mergeDeep = window.AdFuelUtils.mergeDeep;
  var isIntl = window.AdFuelUtils.isIntl;
  var IsMobile = window.AdFuelUtils.isMobile;
  var getConsent = window.AdFuelUtils.getConsent;
  var getUserConsentRegion = window.AdFuelUtils.getUserConsentRegion;
  var getURLParam = window.AdFuelUtils.getURLParam;
  var getLogger = window.AdFuelUtils.getLogger;
  var addEvent = window.AdFuelUtils.addEvent;
  var pbLogger;
  var initEventSet = false;
  var libraryConfigured = false;
  var RUBICON_SIZE_MAPPING = {
    '728x90': 2,
    '160x600': 9,
    '300x600': 10,
    '300x250': 15,
    '320x50': 43,
    '970x90': 55,
    '970x250': 57
  };
  var PREBID_VIDEO_TARGETING = {
    hb_uuid: '',
    hb_bidder: '',
    hb_adid: '',
    hb_pb: '',
    hb_size: '',
    hb_source: ''
  };
  var PREBID_VIDEO_REFRESHED_TARGETING = {
    hb_uuid: '',
    hb_bidder: '',
    hb_adid: '',
    hb_pb: '',
    hb_size: '',
    hb_source: ''
  };
  var PREBID_MIDROLL_VIDEO_TARGETING = {
    hb_pb_cat_dur: [],
    hb_cache_id: ''
  };
  var REQUESTED_AD_UNITS = {
    banner: [],
    "native": []
  };
  var BUILT_AD_UNITS = [];
  var CONFIGURATION = {
    BIDDERS: {
      CLIENT: {
        DOM: [],
        INTL: []
      },
      NATIVE: {
        DOM: [],
        INTL: []
      },
      S2S: {
        DOM: [],
        INTL: []
      }
    },
    TIMEOUTS: {
      DISPLAY: {
        DESKTOP: 1150,
        MOBILE: 750
      },
      VIDEO: {
        DEFAULT: 500,
        MIDROLL: 750,
        REFRESH: 1000
      }
    },
    VENDOR: {
      APPNEXUS: {
        ACCOUNT_ID: {
          DOM: 0,
          INTL: 0
        }
      },
      CRITEO: {},
      IX: {
        SITE_ID: {
          DOM: {
            DESKTOP: {},
            MOBILE: {}
          },
          INTL: {
            DESKTOP: {},
            MOBILE: {}
          }
        }
      },
      OPENX: {
        UNIT_MAPPING: {
          DOM: {
            DESKTOP: {},
            MOBILE: {}
          },
          INTL: {
            DESKTOP: {},
            MOBILE: {}
          }
        }
      },
      PANGAEA: {
        ACCOUNT_ID: {
          DOM: 0,
          INTL: 0
        }
      },
      RUBICON: {
        ACCOUNT_ID: {
          DOM: 0,
          INTL: 0
        },
        SITE_ID: {
          DOM: {
            DESKTOP: 0,
            MOBILE: 0
          },
          INTL: {
            DESKTOP: 0,
            MOBILE: 0
          }
        },
        ZONE_MAPPING: {
          DOM: {
            DESKTOP: {
              HP: {},
              ROS: {}
            },
            MOBILE: {}
          },
          INTL: {
            DESKTOP: {
              HP: {},
              ROS: {}
            },
            MOBILE: {}
          }
        }
      },
      SHARETHROUGH: {
        UNIT_MAPPING: {
          DOM: {
            DESKTOP: {},
            MOBILE: {}
          },
          INTL: {
            DESKTOP: {},
            MOBILE: {}
          }
        }
      },
      TRUSTX: {
        UID: {
          DOM: {
            DESKTOP: {},
            MOBILE: {}
          },
          INTL: {
            DESKTOP: {},
            MOBILE: {}
          }
        }
      },
      TRIPLELIFT: {
        MAPPINGS: {
          DOM: {
            DESKTOP: {},
            MOBILE: {}
          },
          INTL: {
            DESKTOP: {},
            MOBILE: {}
          }
        }
      },
      KARGO: {
        MAPPINGS: {
          DOM: {
            DESKTOP: {},
            MOBILE: {}
          },
          INTL: {
            DESKTOP: {},
            MOBILE: {}
          }
        }
      },
      DISTRICTM: {
        PID: {
          DOM: 0,
          INTL: 0
        }
      }
    },
    SEND_ALL_BIDS: {
      DOM: true,
      INTL: true
    }
  };
  var APPROVED_BIDDERS = {
    CLIENT: {
      DOM: ['appnexus', 'rubicon', 'criteo', 'ix', 'trustx', 'triplelift', 'kargo', 'districtm'],
      INTL: ['appnexus', 'pangaea', 'ix', 'rubicon', 'sharethrough', 'criteo', 'trustx']
    },
    NATIVE: {
      DOM: ['appnexus'],
      INTL: ['appnexus', 'pangaea']
    },
    S2S: {
      DOM: ['ix'],
      INTL: ['pangaea', 'sharethrough', 'ix']
    }
  };
  var REQUIRED_CONFIGURATION_KEYS = ['BIDDERS'];
  var bidMocks = {
    appnexus: {
      bidder: 'appnexus',
      params: {
        invCode: '',
        member: isIntl() ? CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.DOM,
        reserve: 0.01
      }
    },
    criteo: {
      bidder: 'criteo',
      params: {
        networkId: 4157
      }
    },
    pangaea: {
      bidder: 'pangaea',
      params: {
        invCode: '',
        member: isIntl() ? CONFIGURATION.VENDOR.PANGAEA.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.PANGAEA.ACCOUNT_ID.DOM,
        reserve: 0.01
      }
    },
    ix: {
      bidder: 'ix',
      params: {
        siteId: '',
        size: []
      }
    },
    openx: {
      bidder: 'openx',
      params: {
        unit: '',
        delDomain: 'turnereu1-d.openx.net',
        customParams: {}
      }
    },
    triplelift: {
      bidder: 'triplelift',
      params: {
        inventoryCode: ''
      }
    },
    rubicon: {
      bidder: 'rubicon',
      // Fastlane (US and EU) and AppNexus (EU ONLY)
      params: {
        accountId: isIntl() ? CONFIGURATION.VENDOR.RUBICON.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.RUBICON.ACCOUNT_ID.DOM,
        // Toggle based on location
        siteId: 26792,
        // Get From Mapping
        zoneId: 231942,
        // Get From Mapping
        position: 'btf' // Parse from Div Id

      }
    },
    sharethrough: {
      bidder: 'sharethrough',
      params: {
        pkey: ''
      }
    },
    trustx: {
      bidder: 'trustx',
      params: {
        uid: 0
      }
    },
    kargo: {
      bidder: 'kargo',
      params: {
        placementId: 0
      }
    },
    districtm: {
      bidder: 'districtm',
      params: {
        placementId: 0
      }
    }
  };

  var validateConfiguration = function validateConfiguration(config) {
    try {
      var errors = [];
      var status = true;
      var finalApprovedBidders = mergeDeep(APPROVED_BIDDERS, config.APPROVED_BIDDERS); // Validate required keys

      REQUIRED_CONFIGURATION_KEYS.forEach(function (key) {
        if (!config[key]) {
          errors.push("MISSING REQUIRED CONFIGURATION KEY: ".concat(key));
          status = false;
        }
      });
      pbLogger.log('Configured Vendors: ', config.VENDOR); // Validate Bidders

      var configuredBidderTypes = Object.keys(config.BIDDERS);
      pbLogger.log('Configured Bidder Types: ', configuredBidderTypes);
      configuredBidderTypes.forEach(function (bidderType) {
        pbLogger.log('Bidder Type: ', bidderType);
        var configuredLocationBidders = Object.keys(config.BIDDERS[bidderType]);
        pbLogger.log('Configured Bidder Type Locations: ', configuredLocationBidders);
        configuredLocationBidders.forEach(function (location) {
          var configuredBidders = config.BIDDERS[bidderType][location];
          pbLogger.log('Configured Bidders: ', configuredBidders);
          configuredBidders.forEach(function (bidder) {
            pbLogger.log('Bidder: ', bidder);

            if (finalApprovedBidders[bidderType][location].indexOf(bidder) < 0) {
              errors.push("INVALID ".concat(bidderType, " BIDDER: ").concat(bidder));
              status = false;
            }

            if (!config.VENDOR[bidder.toUpperCase()]) {
              errors.push("NO CONFIGURATION PROVIDED FOR VENDOR: ".concat(bidder));
              status = false;
            }
          });
        });
      });
      var response = {
        status: status,
        errors: errors
      };

      if (response.status !== false) {
        var finalConfig = mergeDeep(CONFIGURATION, config);
        response.config = finalConfig;
        CONFIGURATION = finalConfig;
      }

      return response;
    } catch (err) {
      console.log('err on validateConfiguration: ', err);
    }
  };

  var getVideoBids = function getVideoBids(slotName, timeout, targeting) {
    try {
      return new Promise(function (resolve) {
        pbLogger.log('Building Video AdUnit...');
        slotName = slotName || 'cnn_homepage_video1';
        timeout = timeout || CONFIGURATION.TIMEOUTS.VIDEO.DEFAULT;
        var videoBid = {
          code: 'video1',
          mediaTypes: {
            video: {
              context: 'instream',
              playerSize: [640, 480]
            }
          },
          bids: [{
            bidder: 'appnexus',
            params: {
              invCode: slotName,
              member: isIntl() ? CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.DOM,
              video: {
                skippable: true,
                playback_methods: ['auto_play_sound_off']
              }
            }
          }]
        };
        pbLogger.log('Adding Video AdUnit: ', videoBid);
        window.pbjs.que.push(function () {
          if (BUILT_AD_UNITS.indexOf(videoBid.code) >= 0) {
            pbLogger.log('Removing Video Ad Unit: ', videoBid.code);
            window.pbjs.removeAdUnit(videoBid.code);
            BUILT_AD_UNITS.splice(BUILT_AD_UNITS.indexOf(videoBid.code), 1);
          }

          pbLogger.log('Adding Video Ad Unit: ', videoBid.code);
          window.pbjs.addAdUnits(videoBid);
          BUILT_AD_UNITS.push(videoBid.code);
          pbLogger.log('Requesting Video Bids...', videoBid);

          var videoBidsBackHandler = function videoBidsBackHandler(bids, timedOut) {
            try {
              var highestCmpBids = window.pbjs.getHighestCpmBids(['video1']);
              var uuid = '';
              var targetBid = highestCmpBids[0];
              highestCmpBids.forEach(function (bid) {
                pbLogger.log("Found highest cmp bid for 'video'...");

                if (bid.videoCacheKey && uuid !== '') {
                  pbLogger.log('Returning Video Cache Key...');
                  uuid = targetBid.videoCacheKey;
                }
              });
              pbLogger.log('Received Bids...');
              PREBID_VIDEO_TARGETING = window.pbjs.getAdserverTargeting().video1;

              if (uuid !== '') {
                PREBID_VIDEO_TARGETING.hb_uuid = uuid;
              }

              resolve(PREBID_VIDEO_TARGETING);
            } catch (err) {
              pbLogger.warn("Could not get highest cmp bid for 'video1'...", err);
              resolve(err);
            }
          };

          window.pbjs.setConfig({
            adpod: {
              brandCategoryExclusion: false
            }
          });
          window.pbjs.requestBids({
            adUnitCodes: ['video1'],
            bidsBackHandler: videoBidsBackHandler,
            timeout: timeout
          });
        });
      });
    } catch (err) {
      console.log('err on getVideoBids: ', err);
    }
  };

  var getRefreshedVideoBids = function getRefreshedVideoBids(slotName, timeout, targeting) {
    try {
      return new Promise(function (resolve) {
        slotName = slotName || 'cnn_homepage_video1';
        timeout = timeout || CONFIGURATION.TIMEOUTS.VIDEO.REFRESH;
        pbLogger.log('Building Video AdUnit...');
        var videoBid = {
          code: 'video2',
          mediaTypes: {
            video: {
              context: 'instream',
              playerSize: [640, 480]
            }
          },
          bids: [{
            bidder: 'appnexus',
            params: {
              invCode: slotName,
              member: isIntl() ? CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.DOM,
              video: {
                skippable: true,
                playback_methods: ['auto_play_sound_off']
              }
            }
          }]
        };
        window.pbjs.que.push(function () {
          if (BUILT_AD_UNITS.indexOf(videoBid.code) >= 0) {
            pbLogger.log('Removing Video Ad Unit: ', videoBid.code);
            window.pbjs.removeAdUnit(videoBid.code);
            BUILT_AD_UNITS.splice(BUILT_AD_UNITS.indexOf(videoBid.code), 1);
          }

          pbLogger.log('Adding Video Ad Unit: ', videoBid.code);
          window.pbjs.addAdUnits(videoBid);
          BUILT_AD_UNITS.push(videoBid.code);
          pbLogger.log('Requesting Video Bids...', videoBid);

          var videoBidsBackHandler = function videoBidsBackHandler(bids, timedOut) {
            try {
              var highestCmpBids = window.pbjs.getHighestCpmBids(['video2']);
              var targetBid = highestCmpBids[0];
              var uuid = '';
              highestCmpBids.forEach(function (bid) {
                pbLogger.log("Found highest cmp bid for 'video'...");

                if (bid.videoCacheKey && uuid === '') {
                  pbLogger.log('Returning Video Cache Key...');
                  uuid = targetBid.videoCacheKey;
                }
              });
              pbLogger.log('Received Bids...');
              PREBID_VIDEO_REFRESHED_TARGETING = window.pbjs.getAdserverTargeting().video2;

              if (uuid !== '') {
                PREBID_VIDEO_REFRESHED_TARGETING.hb_uuid = uuid;
              }

              resolve(PREBID_VIDEO_REFRESHED_TARGETING);
            } catch (err) {
              pbLogger.warn("Could not get highest cmp bid for 'video2'...", err);
              resolve(err);
            }
          };

          window.pbjs.setConfig({
            adpod: {
              brandCategoryExclusion: false
            }
          });
          window.pbjs.requestBids({
            adUnitCodes: ['video1'],
            bidsBackHandler: videoBidsBackHandler,
            timeout: timeout
          });
        });
      });
    } catch (err) {
      console.log('err on getRefreshedVideoBids: ', err);
    }
  };

  var getMidRollVideoBids = function getMidRollVideoBids() {
    var slotName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'cnn_homepage_midroll';
    var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CONFIGURATION.TIMEOUTS.VIDEO.MIDROLL;
    var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 30;
    var durationRange = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [30];
    var playerSize = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [640, 480];
    var minDuration = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 30;

    try {
      return new Promise(function (resolve) {
        var videoBids = [];
        var x = 1;
        var codes = []; // while (x < 6) {

        var code = "midroll".concat(window.AdFuelUtils.generateCacheBuster());
        codes.push(code);
        var videoBid = {
          code: code,
          mediaTypes: {
            video: {
              context: 'adpod',
              playerSize: playerSize,
              adPodDurationSec: duration,
              durationRangeSec: durationRange
            }
          },
          bids: [{
            bidder: 'appnexus',
            params: {
              invCode: x > 1 ? "".concat(slotName, "_").concat(x) : slotName,
              member: isIntl() ? CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.DOM,
              video: {
                skippable: false,
                playback_methods: ['auto_play_sound_on']
              }
            }
          }]
        };
        videoBids.push(videoBid); //   x++
        // }

        pbLogger.log('Building Video AdUnit...');
        pbLogger.log('Adding Video AdUnits: ', videoBids);

        var innerFunc = function innerFunc() {
          if (BUILT_AD_UNITS.indexOf(videoBids[0].code) >= 0) {
            pbLogger.log('Removing Video Ad Unit: ', videoBids[0].code);
            BUILT_AD_UNITS.splice(BUILT_AD_UNITS.indexOf(videoBids[0].code), 1);
            window.pbjs.removeAdUnit(videoBids[0].code);
          }

          pbLogger.log('Adding Video Ad Unit: ', videoBids[0].code);
          videoBids.forEach(function (videoBid) {
            window.pbjs.addAdUnits(videoBid);
          });
          BUILT_AD_UNITS.push(videoBids[0].code);
          pbLogger.log('Requesting Video Bids...', videoBids);

          var videoBidsBackHandler = function videoBidsBackHandler(bids, timedOut) {
            try {
              var BidTargeting = JSON.parse(JSON.stringify(PREBID_MIDROLL_VIDEO_TARGETING));
              pbLogger.log('Calling pbjs.adServers.freewheel.getTargeting...');
              window.pbjs.adServers.freewheel.getTargeting({
                codes: codes,
                callback: function callback(err, targeting) {
                  if (err) {
                    pbLogger.error('Freewheel Targeting Error: ', err);
                    resolve(err);
                  }

                  pbLogger.log('FreewheelTargeting: ', targeting);
                  codes.forEach(function (code) {
                    if (Array.isArray(targeting[code])) {
                      targeting[code].forEach(function (target) {
                        Object.keys(target).forEach(function (key) {
                          if (Array.isArray(BidTargeting[key])) {
                            BidTargeting[key].push(target[key]);
                          } else if (typeof BidTargeting[key] !== 'undefined') {
                            BidTargeting[key] = target[key];
                          }
                        });
                      });
                    }

                    pbLogger.log('Interim Targeting: ', JSON.parse(JSON.stringify(BidTargeting)));
                  });
                  pbLogger.log('Final Targeting: ', BidTargeting);
                  resolve(BidTargeting);
                }
              });
            } catch (err) {
              pbLogger.warn('failed to get video ad for getMidRollVideoBids', err);
              resolve(err);
            }
          };

          window.pbjs.setConfig({
            adpod: {
              brandCategoryExclusion: true,
              prioritizeDeals: true,
              dealTier: {
                appnexus: {
                  prefix: 'tier',
                  minDealTier: 6
                }
              }
            }
          });
          window.pbjs.requestBids({
            adUnitCodes: codes,
            bidsBackHandler: videoBidsBackHandler,
            timeout: timeout
          });
        };

        pbLogger.log('LibraryConfigured: ', libraryConfigured);

        if (libraryConfigured) {
          window.pbjs.que.push(innerFunc);
        }
      });
    } catch (err) {
      console.log('err on getMidRollVideoBids: ', err);
    }
  };

  var buildPrebidAdUnits = function buildPrebidAdUnits(asset) {
    try {
      var adUnits = [];
      var nativeAdUnits = [];
      asset.forEach(function (slot) {
        if (slot.rktr_ad_id) {
          var bannerAdUnitMock = {
            code: '',
            mediaTypes: {
              banner: {
                sizes: []
              }
            },
            bids: []
          };
          var nativeMediaType = {
            title: {
              required: true,
              len: 80
            },
            body: {
              required: true
            },
            image: {
              required: true,
              aspect_ratios: [{
                min_width: 300,
                min_height: 225,
                ratio_width: 4,
                ratio_height: 3
              }]
            },
            sponsoredBy: {
              required: true
            },
            clickUrl: {
              required: true
            },
            icon: {
              required: true,
              aspect_ratios: [{
                min_width: 15,
                min_height: 15,
                ratio_width: 1,
                ratio_height: 1
              }]
            },
            cta: {
              required: false
            }
          };

          if (!slot.monetization) {
            slot.monetization = {
              isMonetized: true,
              filteredSizes: slot.sizes
            };
          }

          if (slot.monetization.isMonetized) {
            var sizeMapArray = [];

            for (var sIndex = 0; sIndex < slot.monetization.filteredSizes.length; sIndex++) {
              sizeMapArray.push(RUBICON_SIZE_MAPPING[slot.monetization.filteredSizes[sIndex].join('x')]);
            }

            var adUnitArray = slot.rktr_ad_id.toLowerCase().split('/');
            var criteoPubSubId = adUnitArray[0] + (adUnitArray[1] ? '_' + adUnitArray[1] : '');
            var invCodeArray = slot.rktr_ad_id.split('/');
            var invCode = invCodeArray[0].toLowerCase() + (invCodeArray[1] ? '_' + invCodeArray[1].toLowerCase() : '');
            var posValue = '';
            var position = 'atf';
            var slotTargets = slot.targeting || [];

            for (var tIndex = 0; tIndex < slotTargets.length; tIndex++) {
              var target = slotTargets[tIndex];

              if (target[0] === 'pos') {
                if (Array.isArray(target[1])) {
                  posValue = target[1][0];
                  position = target[1][0].split('_')[1];
                } else {
                  posValue = target[1];
                  position = target[1].split('_')[1];
                }
              }
            }

            var isHomepage = slot.rktr_ad_id.indexOf('/homepage') >= 0 || slot.rktr_ad_id.indexOf('/business/landing') >= 0;
            bannerAdUnitMock.code = slot.originalElementId || slot.rktr_slot_id;
            bannerAdUnitMock.mediaTypes.banner.sizes = slot.monetization.filteredSizes.map(function (fSize) {
              return fSize.map(function (size) {
                return parseInt(size, 10);
              });
            });
            posValue = JSON.parse(JSON.stringify(posValue)).replace(/"/g, '');
            pbLogger.log('POS: ', posValue);
            var BIDDERS = isIntl() ? CONFIGURATION.BIDDERS.CLIENT.INTL : CONFIGURATION.BIDDERS.CLIENT.DOM;
            pbLogger.log('Bidders: ', BIDDERS);
            BIDDERS.forEach(function (bidder) {
              pbLogger.log('Bidder: ', bidder);
              var bannerBidMock = Object.assign({}, bidMocks[bidder]);
              bannerAdUnitMock.code = slot.originalElementId || slot.rktr_slot_id;

              switch (bidder) {
                case 'appnexus':
                  bannerBidMock.params.invCode = invCode + '_' + posValue;
                  bannerBidMock.params.member = isIntl() ? CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.DOM;

                  if (window.CNN && window.CNN.cep_topics) {
                    bannerBidMock.params.keywords = window.CNN.cep_topics;
                  }

                  pbLogger.log('Pushing AppNexus Bid: ', bannerBidMock);

                  if (CONFIGURATION.BIDDERS.NATIVE[isIntl() ? 'INTL' : 'DOM'].indexOf(bidder) >= 0) {
                    bannerAdUnitMock.mediaTypes["native"] = nativeMediaType;
                  }

                  bannerAdUnitMock.bids.push(JSON.parse(JSON.stringify(bannerBidMock)));
                  break;

                case 'criteo':
                  if (CONFIGURATION.BIDDERS.NATIVE[isIntl() ? 'INTL' : 'DOM'].indexOf(bidder) >= 0) {
                    bannerAdUnitMock.mediaTypes["native"] = nativeMediaType;
                  }

                  bannerBidMock.params.networkId = isIntl() ? CONFIGURATION.VENDOR.CRITEO.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.CRITEO.ACCOUNT_ID.DOM;
                  bannerBidMock.params.publisherSubId = "".concat(criteoPubSubId, "_").concat(slot.rktr_slot_id);
                  bannerAdUnitMock.bids.push(JSON.parse(JSON.stringify(bannerBidMock)));
                  break;

                case 'pangaea':
                  bannerBidMock.params.invCode = invCode + '_' + posValue;
                  bannerBidMock.params.member = isIntl() ? CONFIGURATION.VENDOR.PANGAEA.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.PANGAEA.ACCOUNT_ID.DOM;
                  pbLogger.log('Pushing Pangaea Bid: ', bannerBidMock);

                  if (CONFIGURATION.BIDDERS.NATIVE[isIntl() ? 'INTL' : 'DOM'].indexOf(bidder) >= 0) {
                    bannerAdUnitMock.mediaTypes["native"] = nativeMediaType;
                  }

                  bannerAdUnitMock.bids.push(JSON.parse(JSON.stringify(bannerBidMock)));
                  break;

                case 'rubicon':
                  bannerBidMock.params.siteId = isIntl() ? IsMobile.any ? CONFIGURATION.VENDOR.RUBICON.SITE_ID.INTL.MOBILE : CONFIGURATION.VENDOR.RUBICON.SITE_ID.INTL.DESKTOP : IsMobile.any ? CONFIGURATION.VENDOR.RUBICON.SITE_ID.DOM.MOBILE : CONFIGURATION.VENDOR.RUBICON.SITE_ID.DOM.DESKTOP;

                  if (IsMobile.any) {
                    if (isHomepage) {
                      bannerBidMock.params.zoneId = isIntl() ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.MOBILE.HP[position] ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.MOBILE.HP[position] : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.MOBILE.HP : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.MOBILE.HP[position] ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.MOBILE.HP[position] : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.MOBILE.HP;
                    } else {
                      bannerBidMock.params.zoneId = isIntl() ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.MOBILE.ROS[position] ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.MOBILE.ROS[position] : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.MOBILE.ROS : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.MOBILE.ROS[position] ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.MOBILE.ROS[position] : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.MOBILE.ROS;
                    }
                  } else {
                    if (isHomepage) {
                      bannerBidMock.params.zoneId = isIntl() ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.DESKTOP.HP[position] ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.DESKTOP.HP[position] : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.DESKTOP.HP : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.DESKTOP.HP[position] ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.DESKTOP.HP[position] : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.DESKTOP.HP;
                    } else {
                      bannerBidMock.params.zoneId = isIntl() ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.DESKTOP.ROS[position] ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.DESKTOP.ROS[position] : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.INTL.DESKTOP.ROS : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.DESKTOP.ROS[position] ? CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.DESKTOP.ROS[position] : CONFIGURATION.VENDOR.RUBICON.ZONE_MAPPING.DOM.DESKTOP.ROS;
                    }
                  }

                  bannerBidMock.params.position = position;
                  bannerBidMock.params.sizes = sizeMapArray;
                  pbLogger.log('Pushing Rubicon Bid: ', bannerBidMock);

                  if (CONFIGURATION.BIDDERS.NATIVE[isIntl() ? 'INTL' : 'DOM'].indexOf(bidder) >= 0) {
                    bannerAdUnitMock.mediaTypes["native"] = nativeMediaType;
                  }

                  bannerAdUnitMock.bids.push(JSON.parse(JSON.stringify(bannerBidMock)));
                  break;

                case 'ix':
                  slot.monetization.filteredSizes.forEach(function (fSize) {
                    var ixBidMock = {
                      bidder: 'ix',
                      params: {
                        siteId: '',
                        size: []
                      }
                    };
                    var formattedSize = fSize.join('x');
                    fSize = fSize.map(function (size) {
                      return parseInt(size, 10);
                    });
                    pbLogger.log('IX IsMobile: ', window.AdFuelUtils.isMobile.any);
                    pbLogger.log('IX IsIntl: ', window.AdFuelUtils.isIntl());
                    pbLogger.log('IX Position: ', position);
                    pbLogger.log('IX Size: ', formattedSize);
                    pbLogger.log('IX SiteId: ', window.AdFuelUtils.isMobile.any ? window.AdFuelUtils.isIntl() ? CONFIGURATION.VENDOR.IX.SITE_ID.INTL.MOBILE : CONFIGURATION.VENDOR.IX.SITE_ID.DOM.MOBILE : window.AdFuelUtils.isIntl() ? CONFIGURATION.VENDOR.IX.SITE_ID.INTL.DESKTOP : CONFIGURATION.VENDOR.IX.SITE_ID.DOM.DESKTOP);
                    pbLogger.log('IX Selected SiteId: ', window.AdFuelUtils.isMobile.any ? window.AdFuelUtils.isIntl() ? CONFIGURATION.VENDOR.IX.SITE_ID.INTL.MOBILE[position][formattedSize] : CONFIGURATION.VENDOR.IX.SITE_ID.DOM.MOBILE[position][formattedSize] : window.AdFuelUtils.isIntl() ? CONFIGURATION.VENDOR.IX.SITE_ID.INTL.DESKTOP[position][formattedSize] : CONFIGURATION.VENDOR.IX.SITE_ID.DOM.DESKTOP[position][formattedSize]);
                    ixBidMock.params.siteId = IsMobile.any ? isIntl() ? CONFIGURATION.VENDOR.IX.SITE_ID.INTL.MOBILE[position][formattedSize] || '' : CONFIGURATION.VENDOR.IX.SITE_ID.DOM.MOBILE[position][formattedSize] || '' : isIntl() ? CONFIGURATION.VENDOR.IX.SITE_ID.INTL.DESKTOP[position][formattedSize] || '' : CONFIGURATION.VENDOR.IX.SITE_ID.DOM.DESKTOP[position][formattedSize] || '';
                    ixBidMock.params.size = JSON.parse(JSON.stringify(fSize));

                    if (ixBidMock.params.siteId !== '') {
                      pbLogger.log('Pushing IX Bid: ', ixBidMock);

                      if (CONFIGURATION.BIDDERS.NATIVE[isIntl() ? 'INTL' : 'DOM'].indexOf(bidder) >= 0) {
                        bannerAdUnitMock.mediaTypes["native"] = nativeMediaType;
                      }

                      bannerAdUnitMock.bids.push(JSON.parse(JSON.stringify(ixBidMock)));
                    }
                  });
                  break;

                case 'trustx':
                  slot.monetization.filteredSizes.forEach(function (fSize) {
                    var formattedSize = fSize.join('x');
                    var trustxBidMock = {
                      bidder: 'trustx',
                      params: {
                        uid: 0
                      }
                    };
                    pbLogger.log('TRUSTX IsMobile: ', window.AdFuelUtils.isMobile.any);
                    pbLogger.log('TRUSTX IsIntl: ', window.AdFuelUtils.isIntl());
                    pbLogger.log('TRUSTX Position: ', position);
                    pbLogger.log('TRUSTX Size: ', formattedSize);
                    pbLogger.log('TRUSTX UIDs: ', window.AdFuelUtils.isMobile.any ? window.AdFuelUtils.isIntl() ? CONFIGURATION.VENDOR.TRUSTX.UID.INTL.MOBILE : CONFIGURATION.VENDOR.TRUSTX.UID.DOM.MOBILE : window.AdFuelUtils.isIntl() ? CONFIGURATION.VENDOR.TRUSTX.UID.INTL.DESKTOP : CONFIGURATION.VENDOR.TRUSTX.UID.DOM.DESKTOP);
                    pbLogger.log('TRUSTX Selected UID: ', window.AdFuelUtils.isMobile.any ? window.AdFuelUtils.isIntl() ? CONFIGURATION.VENDOR.TRUSTX.UID.INTL.MOBILE[position][formattedSize] : CONFIGURATION.VENDOR.TRUSTX.UID.DOM.MOBILE[position][formattedSize] : window.AdFuelUtils.isIntl() ? CONFIGURATION.VENDOR.TRUSTX.UID.INTL.DESKTOP[position][formattedSize] : CONFIGURATION.VENDOR.TRUSTX.UID.DOM.DESKTOP[position][formattedSize]);
                    trustxBidMock.params.uid = window.AdFuelUtils.isMobile.any ? window.AdFuelUtils.isIntl() ? CONFIGURATION.VENDOR.TRUSTX.UID.INTL.MOBILE[position][formattedSize] || '' : CONFIGURATION.VENDOR.TRUSTX.UID.DOM.MOBILE[position][formattedSize] || '' : window.AdFuelUtils.isIntl() ? CONFIGURATION.VENDOR.TRUSTX.UID.INTL.DESKTOP[position][formattedSize] || '' : CONFIGURATION.VENDOR.TRUSTX.UID.DOM.DESKTOP[position][formattedSize] || '';

                    if (trustxBidMock.params.uid !== '') {
                      pbLogger.log('Pushing TRUSTX Bid: ', trustxBidMock);

                      if (CONFIGURATION.BIDDERS.NATIVE[isIntl() ? 'INTL' : 'DOM'].indexOf(bidder) >= 0) {
                        bannerAdUnitMock.mediaTypes["native"] = nativeMediaType;
                      }

                      bannerAdUnitMock.bids.push(JSON.parse(JSON.stringify(trustxBidMock)));
                    }
                  });
                  break;

                case 'triplelift':
                  bannerAdUnitMock.mediaTypes.banner.sizes.forEach(function (filteredSize) {
                    var tripleLiftBidMock = {
                      bidder: 'triplelift',
                      params: {
                        inventoryCode: ''
                      }
                    };
                    var formattedSize = filteredSize.join('x');
                    tripleLiftBidMock.params.inventoryCode = IsMobile.any ? isIntl() ? CONFIGURATION.VENDOR.TRIPLELIFT.MAPPINGS.INTL.MOBILE[formattedSize] : CONFIGURATION.VENDOR.TRIPLELIFT.MAPPINGS.DOM.MOBILE[formattedSize] : isIntl() ? CONFIGURATION.VENDOR.TRIPLELIFT.MAPPINGS.INTL.DESKTOP[formattedSize] : CONFIGURATION.VENDOR.TRIPLELIFT.MAPPINGS.DOM.DESKTOP[formattedSize];
                    var exists = false;
                    bannerAdUnitMock.bids.forEach(function (bid) {
                      if (bid.bidder === 'triplelift') {
                        if (bid.params.inventoryCode === tripleLiftBidMock.params.inventoryCode) {
                          exists = true;
                        }

                        exists = true;
                      }
                    });

                    if (!exists) {
                      pbLogger.log('Pushing TripleLift Bid: ', tripleLiftBidMock);

                      if (CONFIGURATION.BIDDERS.NATIVE[isIntl() ? 'INTL' : 'DOM'].indexOf(bidder) >= 0) {
                        bannerAdUnitMock.mediaTypes["native"] = nativeMediaType;
                      }

                      bannerAdUnitMock.bids.push(JSON.parse(JSON.stringify(tripleLiftBidMock)));
                    }
                  });
                  break;

                case 'kargo':
                  bannerAdUnitMock.mediaTypes.banner.sizes.forEach(function (filteredSize) {
                    var kargoBidMock = {
                      bidder: 'kargo',
                      params: {
                        placementId: ''
                      }
                    };
                    var formattedSize = filteredSize.join('x');
                    kargoBidMock.params.placementId = isIntl() ? CONFIGURATION.VENDOR.KARGO.MAPPINGS.INTL.MOBILE[formattedSize] : CONFIGURATION.VENDOR.KARGO.MAPPINGS.DOM.MOBILE[formattedSize];
                    var exists = false;
                    bannerAdUnitMock.bids.forEach(function (bid) {
                      if (bid.bidder === 'kargo') {
                        exists = true;
                      }
                    });

                    if (!exists && IsMobile.any) {
                      pbLogger.log('Pushing Kargo Bid: ', kargoBidMock);

                      if (CONFIGURATION.BIDDERS.NATIVE[isIntl() ? 'INTL' : 'DOM'].indexOf(bidder) >= 0) {
                        bannerAdUnitMock.mediaTypes["native"] = nativeMediaType;
                      }

                      bannerAdUnitMock.bids.push(JSON.parse(JSON.stringify(kargoBidMock)));
                    }
                  });
                  break;

                case 'districtm':
                  bidMocks.districtm.params.placementId = isIntl() ? CONFIGURATION.VENDOR.DISTRICTM.PID.INTL : CONFIGURATION.VENDOR.DISTRICTM.PID.DOM;
                  pbLogger.log('Pushing DistrictM Bid: ', bidMocks.districtm);
                  bannerAdUnitMock.bids.push(JSON.parse(JSON.stringify(bidMocks.districtm)));
                  break;

                case 'sharethrough':
                  bannerAdUnitMock.mediaTypes.banner.sizes.forEach(function (filteredSize) {
                    var sharethroughBidMock = bannerBidMock;
                    var formattedSize = filteredSize.join('x');
                    sharethroughBidMock.params.pkey = IsMobile.any ? isIntl() ? CONFIGURATION.VENDOR.SHARETHROUGH.UNIT_MAPPING.INTL.MOBILE[formattedSize] : CONFIGURATION.VENDOR.SHARETHROUGH.UNIT_MAPPING.DOM.MOBILE[formattedSize] : isIntl() ? CONFIGURATION.VENDOR.SHARETHROUGH.UNIT_MAPPING.INTL.DESKTOP[formattedSize] : CONFIGURATION.VENDOR.SHARETHROUGH.UNIT_MAPPING.DOM.DESKTOP[formattedSize];
                    var exists = false;
                    bannerAdUnitMock.bids.forEach(function (bid) {
                      if (bid.bidder === 'sharethrough') {
                        if (bid.params.pkey === sharethroughBidMock.params.pkey) {
                          exists = true;
                        }
                      }
                    });

                    if (!exists && sharethroughBidMock.params.pkey && sharethroughBidMock.params.pkey !== '') {
                      pbLogger.log("Pushing Sharethrough Bid for ".concat(bannerAdUnitMock.code), sharethroughBidMock, slot);

                      if (CONFIGURATION.BIDDERS.NATIVE[isIntl() ? 'INTL' : 'DOM'].indexOf(bidder) >= 0) {
                        bannerAdUnitMock.mediaTypes["native"] = nativeMediaType;
                      }

                      bannerAdUnitMock.bids.push(JSON.parse(JSON.stringify(sharethroughBidMock)));
                    }
                  });
                  break;

                default:
                  break;
              }
            });
            pbLogger.log('Banner Ad Unit: ', bannerAdUnitMock);
            pbLogger.log('Built Ad Units: ', BUILT_AD_UNITS);

            if (BUILT_AD_UNITS.indexOf(JSON.parse(JSON.stringify(bannerAdUnitMock.code))) < 0) {
              BUILT_AD_UNITS.push(JSON.parse(JSON.stringify(bannerAdUnitMock.code)));
              adUnits.push(JSON.parse(JSON.stringify(bannerAdUnitMock)));
            } else {
              nativeAdUnits.push(JSON.parse(JSON.stringify(bannerAdUnitMock)));
            }
          }
        }
      });
      pbLogger.log('Built Ad Units: ', JSON.parse(JSON.stringify({
        banner: adUnits,
        "native": nativeAdUnits
      })));
      return {
        banner: adUnits,
        "native": nativeAdUnits
      };
    } catch (err) {
      console.log('err on buildPrebidAdUnits: ', err);
    }
  };

  var preQueueCallback = function preQueueCallback(asset) {
    try {
      var preQueuePromise = new Promise(function (resolve) {
        var callbackExecuted = false;

        if (asset.length > 0) {
          var adUnits = buildPrebidAdUnits(asset);
          var bannerAdUnits = adUnits.banner.filter(function (adUnit) {
            return adUnit.bids.length > 0 && REQUESTED_AD_UNITS.banner.indexOf(adUnit) === -1;
          });

          var pbQueueFunction = function pbQueueFunction() {
            if (bannerAdUnits.length > 0) {
              pbLogger.log('Adding Banner Ad Units...', JSON.parse(JSON.stringify(bannerAdUnits)));
              window.pbjs.addAdUnits(JSON.parse(JSON.stringify(bannerAdUnits)));
              bannerAdUnits.forEach(function (bau) {
                REQUESTED_AD_UNITS.banner.push(bau);
              });
            }

            pbLogger.log('Requesting Bids...');
            var requestedSlots = asset.map(function (rockSlot) {
              return rockSlot.rktr_slot_id;
            });
            pbLogger.log('Requested slots...', requestedSlots);
            var slots = bannerAdUnits.map(function (adUnit) {
              pbLogger.log('Checking AdUnit: ', adUnit);
              return requestedSlots.indexOf(adUnit.code) >= 0 ? adUnit.code : null;
            }).filter(function (item) {
              return item !== null;
            });

            var bidsBackHandlerFunc = function bidsBackHandlerFunc(bids, timedOut) {
              try {
                window.googletag.cmd.push(function () {
                  pbLogger.log('SETTING TARGETING:', slots);
                  window.pbjs.setTargetingForGPTAsync(slots);

                  if (!callbackExecuted) {
                    callbackExecuted = true;
                    resolve(bids || window.pbjs.getAdserverTargeting());
                  }
                });
              } catch (err) {
                pbLogger.warn('failed to get display ad for preQueueCallback', err);
                resolve(err);
              }
            };

            pbLogger.log('Banner Ad Units: ', bannerAdUnits);
            pbLogger.log('Slots: ', slots);

            if (slots.length > 0) {
              window.pbjs.setConfig({
                adpod: {
                  brandCategoryExclusion: false
                }
              });
              pbLogger.log('REQUESTING TARGETING:', bannerAdUnits);
              window.pbjs.requestBids({
                adUnitCodes: bannerAdUnits.map(function (adUnit) {
                  return adUnit.code;
                }),
                timeout: IsMobile.any ? CONFIGURATION.TIMEOUTS.DISPLAY.MOBILE : CONFIGURATION.TIMEOUTS.DISPLAY.DESKTOP,
                bidsBackHandler: bidsBackHandlerFunc
              });
              bannerAdUnits.length = 0;
            } else {
              resolve({
                msg: 'No Slots'
              });
            }
          };

          window.pbjs.que.push(pbQueueFunction);
        } else {
          if (!callbackExecuted) {
            callbackExecuted = true;
            resolve({
              msg: 'No Registry'
            });
          }
        }
      });
      preQueuePromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      preQueuePromise.monetized = true;
      return preQueuePromise;
    } catch (err) {
      console.log('err on preQueueCallback: ', err);
    }
  };

  var preDispatchCallback = function preDispatchCallback(asset) {
    try {
      var preDispatchPromise = new Promise(function (resolve) {
        setGeoTargeting();
        resolve({
          msg: 'GeoTargeting Set'
        });
      });
      preDispatchPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      preDispatchPromise.monetized = true;
      return preDispatchPromise;
    } catch (err) {
      console.log('err on preDispatchCallback: ', err);
    }
  };

  var preRefreshCallback = function preRefreshCallback(asset) {
    try {
      var preRefreshPromise = new Promise(function (resolve) {
        var callbackExecuted = false;

        if (asset.length > 0) {
          var adUnits = buildPrebidAdUnits(asset);
          pbLogger.log('Pre-Refresh Asset: ', asset);
          var refreshedPageSlots = asset.map(function (pageSlot) {
            pbLogger.log('Page Slot: ', pageSlot, pageSlot.rktr_slot_id);
            return pageSlot.rktr_slot_id;
          });
          pbLogger.log('Refreshed Page Slots: ', refreshedPageSlots);

          if (adUnits.banner.length > 0 || adUnits["native"].length > 0) {
            var adUnitCodes = adUnits.banner.map(function (adUnit) {
              return adUnit.code;
            });

            if (adUnitCodes.length <= 0) {
              adUnitCodes = adUnits["native"].map(function (adUnit) {
                return adUnit.code;
              });
            }

            window.pbjs.setConfig({
              adpod: {
                brandCategoryExclusion: false
              }
            });
            pbLogger.log('Requesting Bids...', adUnitCodes);
            window.pbjs.requestBids({
              adUnitCodes: adUnitCodes,
              timeout: IsMobile.any ? CONFIGURATION.TIMEOUTS.DISPLAY.MOBILE : CONFIGURATION.TIMEOUTS.DISPLAY.DESKTOP,
              bidsBackHandler: function bidsBackHandler(bids, timedOut) {
                try {
                  pbLogger.log('GOT BIDS: ', bids, adUnitCodes);
                  window.googletag.cmd.push(function () {
                    window.pbjs.setTargetingForGPTAsync(adUnitCodes);

                    if (!callbackExecuted) {
                      callbackExecuted = true;
                      resolve(bids || window.pbjs.getAdserverTargeting());
                    }
                  });
                } catch (err) {
                  pbLogger.warn('failed to get display ad for preRefreshCallback', err);
                  resolve(err);
                }
              }
            });
          } else {
            pbLogger.log('No Ad Units to Refresh.', adUnits);

            if (!callbackExecuted) {
              callbackExecuted = true;
              resolve({
                msg: 'No Ad Units'
              });
            }
          }
        } else {
          if (!callbackExecuted) {
            callbackExecuted = true;
            resolve({
              msg: 'No Slots'
            });
          }
        }
      });
      preRefreshPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      preRefreshPromise.monetized = true;
      return preRefreshPromise;
    } catch (err) {
      console.log('err on preRefreshCallback: ', err);
    }
  };

  var destroySlotsCallback = function destroySlotsCallback(slotIds) {
    try {
      var destroySlotsPromise = new Promise(function (resolve) {
        var rAU = Object.assign({}, REQUESTED_AD_UNITS);
        var bAU = [].concat(BUILT_AD_UNITS);
        slotIds.forEach(function (slotId) {
          rAU.banner.forEach(function (adUnit, index) {
            pbLogger.log('rAU AdUnit: ', adUnit);

            if (adUnit.code === slotId) {
              pbLogger.log('Destroying Slot Requested Record: ', slotId);
              REQUESTED_AD_UNITS.banner.splice(index, 1);
            }
          });
          bAU.forEach(function (adUnit, index) {
            pbLogger.log('bAU AdUnit: ', adUnit);

            if (adUnit === slotId) {
              pbLogger.log('Destroying Slot Built Record: ', slotId);
              BUILT_AD_UNITS.splice(index, 1);
            }
          });
          pbLogger.log('Removing Ad Unit from PBJS: ', slotId);
          window.pbjs.removeAdUnit(slotId);
        });
        resolve({
          msg: 'Slots Destroyed'
        });
      });
      destroySlotsPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return destroySlotsPromise;
    } catch (err) {
      console.log('err on destroySlotsCallback: ', err);
    }
  };

  var setGeoTargeting = function setGeoTargeting(forceIntl) {
    try {
      var setGeoTarget = function setGeoTarget() {
        pbLogger.log('Setting GeoTargeting... ', isIntl() || forceIntl);

        if (isIntl()) {
          pbLogger.log('Setting Geo Target: EU');

          if (window.AdFuel) {
            window.AdFuel.addPageLevelTarget('hbg', 'EU');
          } else {
            window.googletag.pubads().setTargeting('hbg', 'EU');
          }
        } else if (forceIntl) {
          pbLogger.log('Setting Geo Target: EU');

          if (window.AdFuel) {
            window.AdFuel.addPageLevelTarget('hbg', 'EU');
          } else {
            window.googletag.pubads().setTargeting('hbg', 'EU');
          }
        } else {
          pbLogger.log('Setting Geo Target: US');

          if (window.AdFuel) {
            window.AdFuel.addPageLevelTarget('hbg', 'US');
          } else {
            window.googletag.pubads().setTargeting('hbg', 'US');
          }
        }
      };

      if (window.googletag && window.googletag.apiReady) {
        setGeoTarget();
      } else {
        window.googletag.cmd.push(setGeoTarget);
      }
    } catch (err) {
      console.log('err on setGeoTargeting: ', err);
    }
  };

  var registerModuleWithAdFuel = function registerModuleWithAdFuel() {
    try {
      pbLogger.log('Registering ' + MODULE_NAME + ' module with AdFuel', CONFIGURATION);
      window.AdFuel.registerModule(MODULE_NAME, {
        preQueueCallback: preQueueCallback,
        preDispatchCallback: preDispatchCallback,
        preRefreshCallback: preRefreshCallback,
        destroySlotsCallback: destroySlotsCallback
      }, MODULE_VERSION, CONFIGURATION, true);
    } catch (err) {
      console.log('err on registerModuleWithAdFuel: ', err);
    }
  };

  var configurePrebidLibrary = function configurePrebidLibrary(prebidConfig, initConfig) {
    try {
      if (!libraryConfigured) {
        window.pbjs = window.pbjs || {};
        window.pbjs.que = window.pbjs.que || [];
        libraryConfigured = true;
        bidMocks.appnexus.params.member = isIntl() ? CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.APPNEXUS.ACCOUNT_ID.DOM;
        bidMocks.pangaea.params.member = isIntl() ? CONFIGURATION.VENDOR.PANGAEA.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.PANGAEA.ACCOUNT_ID.DOM;
        bidMocks.rubicon.params.accountId = isIntl() ? CONFIGURATION.VENDOR.RUBICON.ACCOUNT_ID.INTL : CONFIGURATION.VENDOR.RUBICON.ACCOUNT_ID.DOM;
        var displayPriceBuckets = {
          buckets: [{
            precision: 2,
            min: 0,
            max: 5,
            increment: 0.01
          }, {
            precision: 2,
            min: 5,
            max: 30,
            increment: 0.05
          }, {
            precision: 2,
            min: 30,
            max: isIntl() ? 50 : 115,
            increment: 1.0
          }]
        };
        var videoPriceBuckets = {
          buckets: [{
            precision: 2,
            min: 4,
            max: 50,
            increment: 1
          }, {
            precision: 2,
            min: 50,
            max: 100,
            increment: 5
          }]
        };
        var mediaTypePriceBuckets = {
          banner: displayPriceBuckets,
          video: videoPriceBuckets,
          "native": displayPriceBuckets
        };
        var priceBuckets = {
          buckets: [{
            precision: 2,
            min: 0,
            max: 5,
            increment: 0.01
          }, {
            precision: 2,
            min: 5,
            max: 30,
            increment: 0.05
          }, {
            precision: 2,
            min: 30,
            max: isIntl() ? 50 : 115,
            increment: 1.0
          }]
        };
        var sendAllBids = isIntl() ? prebidConfig.SEND_ALL_BIDS.INTL : prebidConfig.SEND_ALL_BIDS.DOM;

        var innerFunc = function innerFunc() {
          var checkConsent = typeof initConfig.USER_CONSENT !== 'undefined' ? initConfig.USER_CONSENT.ENABLED === true : false;
          var prebidConfigObject = {
            priceGranularity: priceBuckets,
            mediaTypePriceGranularity: mediaTypePriceBuckets,
            enableSendAllBids: sendAllBids,
            sendNativeTargetingKeys: false,
            bidderTimeout: IsMobile.any ? prebidConfig.TIMEOUTS.DISPLAY.MOBILE : prebidConfig.TIMEOUTS.DISPLAY.DESKTOP,
            cache: {
              url: 'https://prebid.adnxs.com/pbc/v1/cache'
            },
            adpod: {
              brandCategoryExclusion: true,
              prioritizeDeals: true,
              dealTier: {
                appnexus: {
                  prefix: 'tier',
                  minDealTier: 6
                }
              }
            },
            userSync: {
              filterSettings: {
                iframe: {
                  bidders: '*',
                  // '*' means all bidders
                  filter: 'include'
                }
              }
            }
          };
          var s2sBidders = prebidConfig.BIDDERS.S2S[isIntl() ? 'INTL' : 'DOM'];
          pbLogger.log('Fire S2S: ', s2sBidders.length > 0);

          if (s2sBidders.length > 0) {
            prebidConfigObject.s2sConfig = {
              accountId: 'f7c6e556-48f6-4b8c-9fb6-921c12c9362f',
              enabled: true,
              bidders: prebidConfig.BIDDERS.S2S[isIntl() ? 'INTL' : 'DOM'],
              timeout: IsMobile.any ? prebidConfig.TIMEOUTS.DISPLAY.MOBILE : prebidConfig.TIMEOUTS.DISPLAY.DESKTOP,
              adapter: 'prebidServer',
              endpoint: 'https://prebid.adnxs.com/pbs/v1/openrtb2/auction',
              syncEndpoint: 'https://prebid.adnxs.com/pbs/v1/cookie_sync'
            };
          }

          var bidderSettings = {
            appnexus: {
              suppressEmptyKeys: true,
              adserverTargeting: [{
                key: 'hb_appnexus_tier',
                val: function val(bidResponse) {
                  if (bidResponse.appnexus.dealPriority != null) {
                    return bidResponse.appnexus.dealPriority;
                  }
                }
              }]
            }
          };

          if (!isIntl() && sendAllBids) {
            bidderSettings.rubicon = {
              alwaysUseBid: true,
              suppressEmptyKeys: true,
              adserverTargeting: [{
                key: 'hb_db_rubicon',
                val: function val(bidResponse) {
                  var keyvalue;

                  if (bidResponse.adserverTargeting && bidResponse.adserverTargeting['rpfl_' + (isIntl() ? prebidConfig.VENDOR.RUBICON.ACCOUNT_ID.INTL : prebidConfig.VENDOR.RUBICON.ACCOUNT_ID.DOM)]) {
                    keyvalue = bidResponse.adserverTargeting['rpfl_' + (isIntl() ? prebidConfig.VENDOR.RUBICON.ACCOUNT_ID.INTL : prebidConfig.VENDOR.RUBICON.ACCOUNT_ID.DOM)];
                  } else if (bidResponse.rubiconTargeting && bidResponse.rubiconTargeting['rpfl_' + (isIntl() ? prebidConfig.VENDOR.RUBICON.ACCOUNT_ID.INTL : prebidConfig.VENDOR.RUBICON.ACCOUNT_ID.DOM)]) {
                    keyvalue = bidResponse.rubiconTargeting['rpfl_' + (isIntl() ? prebidConfig.VENDOR.RUBICON.ACCOUNT_ID.INTL : prebidConfig.VENDOR.RUBICON.ACCOUNT_ID.DOM)];
                  } else {
                    return;
                  }

                  var dealTier = keyvalue.substring(keyvalue.indexOf('_') + 1);
                  return dealTier;
                }
              }]
            };
          }

          Object.keys(bidMocks).forEach(function (bidder) {
            pbLogger.log("Setting sendStandardTargeting for ".concat(bidder, " to ").concat(!sendAllBids));
            bidderSettings[bidder] = bidderSettings[bidder] || {};
            bidderSettings[bidder].sendStandardTargeting = !sendAllBids;
          });

          if (checkConsent) {
            var consentGranted = getConsent();
            var consentRegion = getUserConsentRegion();
            pbLogger.log('Checking for GDPR Consent...');

            if (consentGranted || consentRegion === 'gdpr') {
              if (consentRegion === 'gdpr') {
                pbLogger.log('Setting consentManagement config...');
                prebidConfigObject.consentManagement = {
                  cmpApi: 'iab',
                  timeout: 750,
                  allowAuctionWithoutConsent: false
                };
              }

              pbLogger.log('Setting config...', prebidConfigObject);
              window.pbjs.setConfig(prebidConfigObject);
              pbLogger.log('Setting Bidder Settings...', bidderSettings);
              window.pbjs.bidderSettings = bidderSettings;
              pbLogger.log('Adding alias for Pangaea...');
              window.pbjs.aliasBidder('appnexus', 'pangaea');
              pbLogger.log('Adding alias for DistrictM...');
              window.pbjs.aliasBidder('appnexus', 'districtm');
            }
          } else {
            pbLogger.log('Skipping User Consent Check...');
            pbLogger.log('Setting config...', prebidConfigObject);
            window.pbjs.setConfig(prebidConfigObject);
            pbLogger.log('Setting Bidder Settings...', bidderSettings);
            window.pbjs.bidderSettings = bidderSettings;
            pbLogger.log('Adding alias for Pangaea...');
            window.pbjs.aliasBidder('appnexus', 'pangaea');
            pbLogger.log('Adding alias for DistrictM...');
            window.pbjs.aliasBidder('appnexus', 'districtm');
          }
        };

        window.pbjs.que.push(innerFunc);
        window.AdFuelVideoAPI = window.AdFuelVideoAPI || {};
        window.AdFuelVideoAPI.Prebid = window.PrebidVideoAPI = {
          getTargetingData: getVideoBids,
          getRefreshedTargetingData: getMidRollVideoBids,
          getPreRollTargetingData: getVideoBids,
          getMidRollTargetingData: getMidRollVideoBids,
          getRefreshedPreRollTargetingData: getRefreshedVideoBids,
          getRefreshedMidRollTargetingData: getMidRollVideoBids,
          __VERSION__: MODULE_VERSION
        };
        var timeoutOverride = getURLParam('mdt');

        if (timeoutOverride) {
          Object.keys(prebidConfig.TIMEOUTS).forEach(function (type) {
            Object.keys(prebidConfig.TIMEOUTS[type]).forEach(function (platform) {
              prebidConfig.TIMEOUTS[type][platform] = parseInt(timeoutOverride, 10);
            });
          });
          pbLogger.log('Overriding Max Duration Time: ', prebidConfig.TIMEOUTS);
        }
      }
    } catch (err) {
      console.log('err on configurePrebidLibrary: ', err);
    }
  };

  var init = function init(config) {
    try {
      var initPromise = new Promise(function (resolve) {
        pbLogger = getLogger(MODULE_NAME, MODULE_VERSION, 'prebid', 'color: #58f53f; padding: 2px', config.PREBID.DEBUG);
        var consentGranted = getConsent();
        var consentRegion = getUserConsentRegion();

        if (consentRegion === 'ccpa' && !consentGranted) {
          pbLogger.log('Preventing Initialization due to CCPA Restrictions.');
          resolve();
        } else {
          var validation = validateConfiguration(config.PREBID);

          if (validation.status) {
            pbLogger.log('Configuration Validated: ', config.PREBID);
            configurePrebidLibrary(CONFIGURATION, config);

            if (window.AdFuel && window.AdFuel.cmd) {
              // AdFuel loaded first
              window.AdFuel.cmd.push(registerModuleWithAdFuel);
            } else if (window.AdFuel && window.AdFuel.registerModule) {
              registerModuleWithAdFuel();
            } else {
              addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
            }
          } else {
            validation.errors.forEach(function (error) {
              pbLogger.error(error);
            });
          }

          resolve();
        }
      });
      initPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return initPromise;
    } catch (err) {
      console.log('err on init: ', err);
    }
  };

  try {
    if (window.AdFuelOptions) {
      if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
        var callInit = function callInit() {
          setTimeout(function () {
            if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
              if (window.WM.UserConsent.getRegion() === 'ccpa') {
                init(window.AdFuelOptions);
              } else {
                if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                  init(window.AdFuelOptions);
                } else {
                  addEvent(window, 'optanonLoaded', callInit);
                  initEventSet = true;
                }
              }
            }
          }, 100);
        };

        if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
          callInit();
        } else {
          addEvent(window, 'userConsentReady', callInit);
        }
      } else {
        init(window.AdFuelOptions);
      }
    }
  } catch (err) {
    console.log('err on start: ', err);
  }

  var index = {
    getTargetingData: getVideoBids,
    getRefreshedTargetingData: getMidRollVideoBids,
    getPreRollTargetingData: getVideoBids,
    getMidRollTargetingData: getMidRollVideoBids,
    getRefreshedPreRollTargetingData: getRefreshedVideoBids,
    getRefreshedMidRollTargetingData: getMidRollVideoBids,
    init: init,
    preQueueCallback: preQueueCallback,
    preDispatchCallback: preDispatchCallback,
    preRefreshCallback: preRefreshCallback,
    buildSlot: function buildSlot(slotData) {
      try {
        var buildPromise = new Promise(function (resolve) {
          preQueueCallback(slotData, resolve);
        });
        buildPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
        return buildPromise;
      } catch (err) {
        console.log('err on buildSlot: ', err);
      }
    },
    runAuction: function runAuction() {
      try {
        var auctionPromise = new Promise(function (resolve) {
          resolve();
        });
        auctionPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
        return auctionPromise;
      } catch (err) {
        console.log('err on runAuction: ', err);
      }
    },
    setTargeting: function setTargeting(slotData) {
      try {
        var targetingPromise = new Promise(function (resolve) {
          preDispatchCallback(slotData, resolve);
        });
        targetingPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
        return targetingPromise;
      } catch (err) {
        console.log('err on setTargeting: ', err);
      }
    },
    __VERSION__: MODULE_VERSION,
    __NAME__: MODULE_NAME
  };
  return index;
}); ////////////////////////////////////////////
// AD A9 for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.AmazonA9 = factory());
})(void 0, function () {
  'use strict';
  /*
    Amazon A9 Module - Version 4.0.18
    @4.0.0:  - Initialization Update for GDPR
    @4.0.1:  - Fix for init when SLOTNAMES.PREPEND_ADUNIT is false
    @4.0.2:  - Fix for unresolving promises
    @4.0.3:  - IsIntl Fix
    @4.0.4:  - Page-Level filtering
    @4.0.5:  - Monetized Slot filtering
    @4.0.6:  - Pre-roll before consent fix
    @4.0.7:  - Dupe request fix
    @4.0.8:  - Dupes correctly removed fix
    @4.0.9:  - refreshSlots clones bidSlots instead of builtSlots
    @4.0.10: - Fix for AdUnit Prepending
    @4.0.11: - True Fix for AdUnit Prepending
    @4.0.12: - Bug Fixes
    @4.0.13: - Bid Targeting Reliability
    @4.0.14: - hasVideo addition
    @4.0.15: - Manual Targeting
    @4.0.16: - OptanonLoaded Timing Fix
    @4.0.17: - CNNE Domestic Restriction
    @4.0.18: - CNNE Domestic Restriction FIXED
    -------------------------------------------------------------
    GDPR Status: Blocked
    CCPA Status: Blocked
  */

  var MODULE_NAME = 'Amazon A9 Module';
  var MODULE_VERSION = 'v4.0.18';
  var mergeDeep = window.AdFuelUtils.mergeDeep;
  var getLogger = window.AdFuelUtils.getLogger;
  var setIsIntl = window.AdFuelUtils.setIsIntl;
  var getURLParam = window.AdFuelUtils.getURLParam;
  var getUserConsentRegion = window.AdFuelUtils.getUserConsentRegion;
  var getConsent = window.AdFuelUtils.getConsent;
  var getConsentString = window.AdFuelUtils.getConsentString;
  var isIntl = window.AdFuelUtils.isIntl;
  var isCNNE = window.AdFuelUtils.isCNNE;
  var addEvent = window.AdFuelUtils.addEvent;
  var hasVideo = window.AdFuelUtils.hasVideo;
  var logger;
  var scriptIncluded = false;
  var scriptInitialized = false;
  var initEventSet = false;
  var CONFIGURATION = {
    ACCOUNT_IDS: {
      DOM: '3159',
      INTL: '3288'
    },
    TIMEOUTS: {
      DESKTOP: {
        DISPLAY: {
          INITIAL: 1150,
          REFRESH: 1150
        },
        VIDEO: {
          INITIAL: 500,
          REFRESH: 750,
          MIDROLL: 750
        }
      },
      MOBILE: {
        DISPLAY: {
          INITIAL: 750,
          REFRESH: 750
        },
        VIDEO: {
          INITIAL: 500,
          REFRESH: 750,
          MIDROLL: 750
        }
      }
    },
    SLOTNAMES: {
      PREROLL: 'aps-preroll',
      MIDROLL: 'aps-midroll',
      PREPEND_ADUNIT: false
    }
  };
  var blocked = false;
  var builtSlots = [];
  var refreshSlots = [];
  var defaultTimeout;
  var defaultRefreshTimeout;
  var siSection = '';

  var getTargetingData = function getTargetingData(timeout) {
    if (blocked) {
      logger.log('Blocked...');
      return new Promise(function (resolve) {
        return resolve({
          amznbid: '',
          amzniid: ''
        });
      });
    } else {
      timeout = timeout || defaultTimeout;
      var timeoutOverride = getURLParam('mdt');

      if (timeoutOverride) {
        timeout = timeoutOverride;
        logger.log('Overriding Max Duration Time: ', timeout);
      }

      var timeoutFunction = function timeoutFunction(resolve, reject) {
        window.targetingTimeoutId = setTimeout(function () {
          logger.log('getTargetingData timed out after ' + timeout + 'ms.');
          clearTimeout(window.targetingTimeoutId);
          reject('getTargetingData timed out after ' + timeout + 'ms.');
        }, timeout);
      };

      var wrappedFunction = function wrappedFunction(resolve) {
        logger.log('Getting Video targeting...');

        var innerFunction = function innerFunction(bids) {
          logger.log('Clearing Timeout: ', window.targetingTimeoutId);
          clearTimeout(window.targetingTimeoutId);
          var targetBid = {};
          logger.log('Pre-Roll Bids: ', bids);

          if (bids) {
            bids.forEach(function (bid) {
              if (bid.slotID.indexOf('aps-preroll') >= 0) {
                targetBid = bid;
              }
            });
          }

          var result = targetBid.targeting || {
            amznbid: '',
            amzniid: ''
          };
          logger.log('Returning Targeting: ', result);
          resolve(result);
        };

        window.A9VideoAPI._targetingPromise.then(function (bids) {
          resolve(innerFunction(bids));
        });
      };

      var wrappedCallback = new Promise(wrappedFunction);
      var timeoutCallback = new Promise(timeoutFunction); // Returns a race between the timeout and the passed in promise

      return Promise.race([timeoutCallback, wrappedCallback]);
    }
  };

  var getRefreshedTargetingData = function getRefreshedTargetingData(slotName, timeout) {
    if (blocked) {
      return new Promise(function (resolve) {
        return resolve({
          amznbid: '',
          amzniid: ''
        });
      });
    } else {
      timeout = timeout || defaultRefreshTimeout;
      slotName = slotName ? slotName + (window.AdFuelUtils.isMobile.phone ? '-mobile' : '') : window.AdFuelUtils.isMobile.phone ? 'aps-midroll-mobile' : 'aps-midroll';
      var timeoutOverride = getURLParam('mdt');
      var slotNameOverride = getURLParam('slotname');

      if (timeoutOverride) {
        timeout = timeoutOverride;
        logger.log('Overriding Max Duration Time: ', timeout);
      }

      if (slotNameOverride) {
        logger.log('Overriding Slot Name: ', slotName);
        slotName = slotNameOverride;
      }

      var timeoutFunction = function timeoutFunction(resolve, reject) {
        window.targetingTimeoutId = setTimeout(function () {
          logger.log('getRefreshedTargetingData timed out after ' + timeout + 'ms.');
          clearTimeout(window.targetingTimeoutId);
          reject('getRefreshedTargetingData timed out after ' + timeout + 'ms.');
        }, timeout);
      };

      var wrappedFunction = function wrappedFunction(resolve) {
        window.A9VideoAPI._refreshedTargetingPromise = new Promise(function (resolve) {
          window.apstag.fetchBids({
            params: {
              si_section: 'video'
            },
            slots: [{
              slotID: slotName,
              slotName: slotName,
              mediaType: 'video'
            }],
            timeout: timeout
          }, resolve);
        });

        var innerFunction = function innerFunction(bids) {
          clearTimeout(window.targetingTimeoutId);
          var targetBid = {};
          bids.forEach(function (bid) {
            if (bid.slotID === slotName) {
              targetBid = bid;
            }
          });
          var result = targetBid.targeting || {
            amznbid: '',
            amzniid: ''
          };
          logger.log('Returning Refreshed Targeting: ', result);
          resolve(result);
        };

        logger.log('Refreshing Video targeting...');

        window.A9VideoAPI._refreshedTargetingPromise.then(innerFunction);
      };

      var wrappedCallback = new Promise(wrappedFunction);
      var timeoutCallback = new Promise(timeoutFunction); // Returns a race between the timeout and the passed in promise

      return Promise.race([timeoutCallback, wrappedCallback]);
    }
  };

  var getPreRollTargetingData = function getPreRollTargetingData(timeout) {
    if (blocked) {
      logger.log('Blocked...');
      return new Promise(function (resolve) {
        return resolve({
          amznbid: '',
          amzniid: ''
        });
      });
    } else {
      timeout = timeout || defaultTimeout;
      var timeoutOverride = getURLParam('mdt');
      var slotNameOverride = getURLParam('slotname');
      var slotName = 'aps-preroll' + (window.AdFuelUtils.isMobile.phone ? '-mobile' : '');

      if (timeoutOverride) {
        timeout = timeoutOverride;
        logger.log('Overriding Max Duration Time: ', timeout);
      }

      if (slotNameOverride) {
        logger.log('Overriding Slot Name: ', slotName);
        slotName = slotNameOverride;
      }

      var timeoutFunction = function timeoutFunction(resolve, reject) {
        window.targetingTimeoutId = setTimeout(function () {
          logger.log('getTargetingData timed out after ' + timeout + 'ms.');
          clearTimeout(window.targetingTimeoutId);
          reject('getTargetingData timed out after ' + timeout + 'ms.');
        }, timeout);
      };

      var wrappedFunction = function wrappedFunction(resolve) {
        logger.log('Getting A9 Video targeting...');

        var innerFunction = function innerFunction(bids) {
          clearTimeout(window.targetingTimeoutId);
          var targetBid = {};
          logger.log('Bids: ', bids);
          bids.forEach(function forEachBid(bid) {
            if (bid.slotID === (slotNameOverride || (window.AdFuelUtils.isMobile.phone ? 'aps-preroll-mobile' : 'aps-preroll'))) {
              targetBid = bid;
            }
          });
          var result = targetBid.targeting || {
            amznbid: '',
            amzniid: ''
          };
          logger.log('Returning Targeting: ', result);
          return result;
        };

        if (window.A9VideoAPI._preRollTargetingPromise) {
          window.A9VideoAPI._preRollTargetingPromise.then(function (bids) {
            resolve(innerFunction(bids));
          });
        } else {
          window.apstag.fetchBids({
            params: {
              si_section: 'video'
            },
            slots: [{
              slotID: slotName,
              slotName: slotName,
              mediaType: 'video'
            }],
            timeout: timeout
          }, resolve);
        }
      };

      var wrappedCallback = new Promise(wrappedFunction);
      var timeoutCallback = new Promise(timeoutFunction); // Returns a race between the timeout and the passed in promise

      return Promise.race([timeoutCallback, wrappedCallback]);
    }
  };

  var getRefreshedPreRollTargetingData = function getRefreshedPreRollTargetingData(slotName, timeout) {
    if (blocked) {
      logger.log('Blocked...');
      return new Promise(function (resolve) {
        return resolve({
          amznbid: '',
          amzniid: ''
        });
      });
    } else {
      timeout = timeout || defaultRefreshTimeout;
      var timeoutOverride = getURLParam('mdt');
      var slotNameOverride = getURLParam('slotname');

      var _slotName = 'aps-preroll' + (window.AdFuelUtils.isMobile.phone ? '-mobile' : '');

      if (timeoutOverride) {
        timeout = timeoutOverride;
        logger.log('Overriding Max Duration Time: ', timeout);
      }

      if (slotNameOverride) {
        logger.log('Overriding Slot Name: ', slotNameOverride);
        _slotName = slotNameOverride;
      }

      var timeoutFunction = function timeoutFunction(resolve, reject) {
        window.targetingTimeoutId = setTimeout(function () {
          logger.log('getRefreshedTargetingData timed out after ' + timeout + 'ms.');
          clearTimeout(window.targetingTimeoutId);
          reject('getRefreshedTargetingData timed out after ' + timeout + 'ms.');
        }, timeout);
      };

      var wrappedFunction = function wrappedFunction(resolve) {
        window.A9VideoAPI._refreshedPreRollTargetingPromise = new Promise(function (resolve) {
          window.apstag.fetchBids({
            params: {
              si_section: 'video'
            },
            slots: [{
              slotID: _slotName,
              slotName: _slotName,
              mediaType: 'video'
            }],
            timeout: defaultRefreshTimeout
          }, resolve);
        });

        var innerFunction = function innerFunction(bids) {
          clearTimeout(window.targetingTimeoutId);
          var targetBid = {};
          bids.forEach(function forEachBid(bid) {
            if (bid.slotID === (slotNameOverride || (window.AdFuelUtils.isMobile.phone ? 'aps-midroll-mobile' : 'aps-midroll'))) {
              targetBid = bid;
            }
          });
          var result = targetBid.targeting || {
            amznbid: '',
            amzniid: ''
          };
          logger.log('Returning Targeting: ', result);
          resolve(result);
        };

        logger.log('Refreshing Video targeting...');

        window.A9VideoAPI._refreshedPreRollTargetingPromise.then(innerFunction);
      };

      var wrappedCallback = new Promise(wrappedFunction);
      var timeoutCallback = new Promise(timeoutFunction); // Returns a race between the timeout and the passed in promise

      return Promise.race([timeoutCallback, wrappedCallback]);
    }
  };

  var getMidRollTargetingData = function getMidRollTargetingData(slotName, timeout) {
    if (blocked) {
      return new Promise(function (resolve) {
        return resolve({
          amznbid: '',
          amzniid: ''
        });
      });
    } else {
      timeout = timeout || defaultRefreshTimeout;
      var timeoutOverride = getURLParam('mdt');
      var slotNameOverride = getURLParam('slotname');

      var _slotName2 = 'aps-midroll' + (window.AdFuelUtils.isMobile.phone ? '-mobile' : '');

      if (timeoutOverride) {
        timeout = timeoutOverride;
        logger.log('Overriding Max Duration Time: ', timeout);
      }

      if (slotNameOverride) {
        logger.log('Overriding Slot Name: ', slotNameOverride);
        _slotName2 = slotNameOverride;
      }

      var timeoutFunction = function timeoutFunction(resolve, reject) {
        window.targetingTimeoutId = setTimeout(function () {
          logger.log('getRefreshedTargetingData timed out after ' + timeout + 'ms.');
          clearTimeout(window.targetingTimeoutId);
          reject('getRefreshedTargetingData timed out after ' + timeout + 'ms.');
        }, timeout);
      };

      var wrappedFunction = function wrappedFunction(resolve) {
        window.A9VideoAPI._midRollTargetingPromise = new Promise(function (resolve) {
          window.apstag.fetchBids({
            params: {
              si_section: 'video'
            },
            slots: [{
              slotID: _slotName2,
              mediaType: 'video'
            }],
            timeout: defaultRefreshTimeout
          }, resolve);
        });

        var innerFunction = function innerFunction(bids) {
          clearTimeout(window.targetingTimeoutId);
          var targetBid = {};
          bids.forEach(function (bid) {
            if (bid.slotID === (slotNameOverride || (window.AdFuelUtils.isMobile.phone ? 'aps-midroll-mobile' : 'aps-midroll'))) {
              targetBid = bid;
            }
          });
          var result = targetBid.targeting || {
            amznbid: '',
            amzniid: ''
          };
          logger.log('Returning Targeting: ', result);
          resolve(result);
        };

        logger.log('Refreshing Video targeting...');

        window.A9VideoAPI._midRollTargetingPromise.then(innerFunction);
      };

      var wrappedCallback = new Promise(wrappedFunction);
      var timeoutCallback = new Promise(timeoutFunction); // Returns a race between the timeout and the passed in promise

      return Promise.race([timeoutCallback, wrappedCallback]);
    }
  };

  var getRefreshedMidRollTargetingData = function getRefreshedMidRollTargetingData(slotName, timeout) {
    if (blocked) {
      return new Promise(function (resolve) {
        return resolve({
          amznbid: '',
          amzniid: ''
        });
      });
    } else {
      timeout = timeout || defaultRefreshTimeout;
      var timeoutOverride = getURLParam('mdt');
      var slotNameOverride = getURLParam('slotname');

      var _slotName3 = 'aps-midroll' + (window.AdFuelUtils.isMobile.phone ? '-mobile' : '');

      if (timeoutOverride) {
        timeout = timeoutOverride;
        logger.log('Overriding Max Duration Time: ', timeout);
      }

      if (slotNameOverride) {
        logger.log('Overriding Slot Name: ', slotNameOverride);
        _slotName3 = slotNameOverride;
      }

      var timeoutFunction = function timeoutFunction(resolve, reject) {
        window.targetingTimeoutId = setTimeout(function () {
          logger.log('getRefreshedTargetingData timed out after ' + timeout + 'ms.');
          clearTimeout(window.targetingTimeoutId);
          reject('getRefreshedTargetingData timed out after ' + timeout + 'ms.');
        }, timeout);
      };

      var wrappedFunction = function wrappedFunction(resolve) {
        window.A9VideoAPI._refreshedMidRollTargetingPromise = new Promise(function (resolve) {
          window.apstag.fetchBids({
            params: {
              si_section: 'video'
            },
            slots: [{
              slotID: _slotName3,
              mediaType: 'video'
            }],
            timeout: defaultRefreshTimeout
          }, resolve);
        });

        var innerFunction = function innerFunction(bids) {
          clearTimeout(window.targetingTimeoutId);
          var targetBid = {};
          bids.forEach(function (bid) {
            if (bid.slotID === (slotNameOverride || (window.AdFuelUtils.isMobile.phone ? 'aps-midroll-mobile' : 'aps-midroll'))) {
              targetBid = bid;
            }
          });
          var result = targetBid.targeting || {
            amznbid: '',
            amzniid: ''
          };
          resolve(result);
        };

        logger.log('Refreshing Video targeting...');

        window.A9VideoAPI._refreshedMidRollTargetingPromise.then(innerFunction);
      };

      var wrappedCallback = new Promise(wrappedFunction);
      var timeoutCallback = new Promise(timeoutFunction); // Returns a race between the timeout and the passed in promise

      return Promise.race([timeoutCallback, wrappedCallback]);
    }
  };

  var preQueueCallback = function preQueueCallback(asset) {
    var preQueuePromise = new Promise(function (resolve) {
      var bidSlots = [];

      if (asset && asset.length > 0) {
        logger.time('Slot Building');

        for (var x = 0; x < asset.length; x++) {
          var slot = asset[x];

          if (slot.rktr_ad_id && slot.monetization) {
            if (slot.monetization.isMonetized) {
              if (siSection === '') {
                var adUnitArray = slot.rktr_ad_id.split('/');

                if (adUnitArray.length > 1 && adUnitArray[1] !== 'homepage') {
                  siSection = adUnitArray[0] + (adUnitArray[1] ? '/' + adUnitArray[1] : '');
                }
              }

              var slotId = slot.rktr_slot_id;
              var slotName = slotId;

              if (CONFIGURATION.SLOTNAMES.PREPEND_ADUNIT) {
                logger.log('Prepending Ad Unit To SlotName...');
                slotName = "".concat(slot.rktr_ad_id, "_").concat(slotId);
              }

              var obj = {
                slotID: slotId,
                slotName: slotName,
                sizes: slot.monetization.filteredSizes
              };
              logger.log('A9 Slot Object: ', obj);

              if (builtSlots.indexOf(obj.slotID) < 0) {
                bidSlots.push(obj);
                builtSlots.push(obj.slotID);
              }
            }
          }
        }

        logger.timeEnd('Slot Building');
      } else if (asset && typeof asset.rktr_ad_id !== 'undefined') {
        logger.time('Slot Building');
        var _slot = asset;

        if (_slot.monetization && _slot.monetization.isMonetized) {
          if (siSection === '') {
            var _adUnitArray = _slot.rktr_ad_id.split('/');

            if (_adUnitArray.length > 1 && _adUnitArray[1] !== 'homepage') {
              siSection = _adUnitArray[0] + (_adUnitArray[1] ? '/' + _adUnitArray[1] : '');
            }
          }

          var _slotId = _slot.rktr_slot_id;
          var _slotName4 = _slotId;

          if (CONFIGURATION.SLOTNAMES.PREPEND_ADUNIT) {
            logger.log('Prepending Ad Unit To Slot ID...');
            _slotName4 = "".concat(_slot.rktr_ad_id, "_").concat(_slotId);
          }

          var _obj = {
            slotID: _slotId,
            slotName: _slotName4,
            sizes: _slot.monetization.filteredSizes
          };
          logger.log('A9 Slot Object: ', _obj);

          if (builtSlots.indexOf(_obj.slotID) < 0) {
            bidSlots.push(_obj);
            builtSlots.push(_obj.slotID);
          }
        }

        logger.timeEnd('Slot Building');
      } else {
        resolve({
          msg: 'No Slots',
          asset: asset
        });
      }

      var processBids = function processBids(bids) {
        var manualBids = window.AdFuelUtils.getURLParam('manualA9');

        if (!manualBids) {
          logger.log('SETTING AUTOMATIC TARGETING...');
          window.apstag.setDisplayBids();
        } else {
          logger.log('SETTING MANUAL TARGETING: ', bids);
          bids.forEach(function (bid) {
            var slotId = bid.slotID;
            var targets = Object.keys(bid.targeting);
            logger.log('Setting targeting for slot: ', slotId);
            targets.forEach(function (target) {
              logger.log("Setting target [".concat(target, "] with value: ").concat(bid.targeting[target]));
              window.AdFuel.addSlotLevelTarget(slotId, target, bid.targeting[target]);
            });
          });
        }

        bidSlots.length = 0;
        resolve(bids || {
          msg: 'No Bids',
          asset: asset
        });
      };

      if (bidSlots.length > 0) {
        var fetchBidsConfig = {
          slots: bidSlots,
          timeout: window.AdFuelUtils.isMobile.any ? CONFIGURATION.TIMEOUTS.MOBILE.DISPLAY.INITIAL : CONFIGURATION.TIMEOUTS.DESKTOP.DISPLAY.INITIAL
        };

        if (siSection !== '') {
          fetchBidsConfig.params = {
            si_section: siSection
          };
        }

        logger.log('REQUESTING TARGETING:', fetchBidsConfig);
        window.apstag.fetchBids(fetchBidsConfig, processBids);
        refreshSlots = [].concat(_toConsumableArray(refreshSlots), bidSlots);
        logger.log('Setting refreshable slots to: ', refreshSlots);
      } else {
        logger.log('No valid slots.');
        resolve({
          msg: 'No monetization.',
          asset: asset
        });
      }
    });
    preQueuePromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    preQueuePromise.monetized = true;
    return preQueuePromise;
  };

  var preRefreshCallback = function preRefreshCallback(asset) {
    var preRefreshPromise = new Promise(function (resolve) {
      logger.time('Refreshing Bids');
      asset.forEach(function (slot) {
        if (siSection === '') {
          var adUnitArray = slot.rktr_ad_id.split('/');
          siSection = adUnitArray[0] + (adUnitArray[1] ? '/' + adUnitArray[1] : '');
        }
      });
      logger.log('Refresh Slots: ', refreshSlots);

      var removeDuplicateObjects = function removeDuplicateObjects(input) {
        var strings = input.map(function (item) {
          return JSON.stringify(item);
        });
        strings = _toConsumableArray(new Set(strings));
        var results = strings.map(function (item) {
          return JSON.parse(item);
        });
        return results;
      };

      var slotsToRefresh = removeDuplicateObjects(refreshSlots);
      var fetchBidsConfig = {
        slots: slotsToRefresh,
        timeout: window.AdFuelUtils.isMobile.any ? CONFIGURATION.TIMEOUTS.MOBILE.DISPLAY.REFRESH : CONFIGURATION.TIMEOUTS.DESKTOP.DISPLAY.REFRESH
      };

      if (siSection !== '') {
        fetchBidsConfig.params = {
          si_section: siSection
        };
      }

      if (slotsToRefresh.length > 0) {
        logger.log('Fetching Bids... ', fetchBidsConfig);
        window.apstag.fetchBids(fetchBidsConfig, function (bids) {
          logger.log('Setting Display Bids...');
          window.apstag.setDisplayBids();
          logger.timeEnd('Refreshing Bids');
          resolve({
            msg: 'refreshed slots',
            bids: bids
          });
        });
      } else {
        logger.log('No slots to refresh: ', asset, refreshSlots);
        logger.timeEnd('Refreshing Bids');
        resolve({
          msg: 'No slots to refresh'
        });
      }
    });
    preRefreshPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    preRefreshPromise.monetized = true;
    return preRefreshPromise;
  };

  var registerModuleWithAdFuel = function registerModuleWithAdFuel() {
    if (!blocked) {
      logger.log('Registering module with AdFuel');
      window.AdFuel.registerModule(MODULE_NAME, {
        preQueueCallback: preQueueCallback,
        preRefreshCallback: preRefreshCallback
      }, MODULE_VERSION, CONFIGURATION, true);
    } else {
      logger.log('A9 Module Registration is Blocked!', blocked);
    }
  };

  var configureA9Library = function configureA9Library(a9Config) {
    defaultTimeout = window.AdFuelUtils.isMobile.any ? CONFIGURATION.TIMEOUTS.MOBILE.VIDEO.INITIAL : CONFIGURATION.TIMEOUTS.DESKTOP.VIDEO.INITIAL;
    defaultRefreshTimeout = window.AdFuelUtils.isMobile.any ? CONFIGURATION.TIMEOUTS.MOBILE.VIDEO.REFRESH : CONFIGURATION.TIMEOUTS.DESKTOP.VIDEO.REFRESH;
    var consentRegion = getUserConsentRegion();

    if (consentRegion === 'ccpa' || consentRegion === 'gdpr') {
      logger.log('Checking User Consent...');
      var consentStatus = getConsent();
      logger.log('User Consent Granted: ', consentStatus);
      logger.log('Exposing AdFuelVideoAPI.A9 and A9VideoAPI');
      window.A9VideoAPI = {
        getTargetingData: getTargetingData,
        getRefreshedTargetingData: getRefreshedTargetingData,
        getPreRollTargetingData: getPreRollTargetingData,
        getMidRollTargetingData: getMidRollTargetingData,
        getRefreshedPreRollTargetingData: getRefreshedPreRollTargetingData,
        getRefreshedMidRollTargetingData: getRefreshedMidRollTargetingData,
        __VERSION__: MODULE_VERSION
      };
      var pubId = CONFIGURATION.ACCOUNT_IDS.DOM;

      if (isIntl()) {
        pubId = CONFIGURATION.ACCOUNT_IDS.INTL;
      }

      logger.log('Final Pub ID: ', pubId);
      var bidTimeout = window.AdFuelUtils.isMobile.any ? CONFIGURATION.TIMEOUTS.MOBILE.VIDEO.INITIAL : CONFIGURATION.TIMEOUTS.DESKTOP.VIDEO.INITIAL;
      var timeoutOverride = getURLParam('mdt');

      if (timeoutOverride) {
        bidTimeout = timeoutOverride;
        logger.log('Overriding Max Duration Time: ', bidTimeout);
      }

      var slotName = window.AdFuelUtils.isMobile.phone ? CONFIGURATION.SLOTNAMES.PREROLL + '-mobile' : CONFIGURATION.SLOTNAMES.PREROLL;
      var slotNameOverride = getURLParam('slotname');

      if (slotNameOverride) {
        slotName = slotNameOverride;
        logger.log('Overriding Slot Name: ', slotName);
      }

      var _a9Config = {
        pubID: pubId,
        adServer: 'googletag',
        videoAdServer: 'freeWheel',
        deals: true
      };

      if (!blocked && consentStatus) {
        if (consentRegion === 'gdpr') {
          logger.log('Enabling GDPR...');
          var consent = getConsentString();
          _a9Config.gdpr = {
            enabled: true,
            consent: consent
          };
        }

        if (!scriptIncluded) {
          scriptIncluded = true;

          (function (a9, a, p, s, t, A, g) {
            if (a[a9]) return;

            function q(c, r) {
              a[a9]._Q.push([c, r]);
            }

            a[a9] = {
              init: function init() {
                q('i', arguments);
              },
              fetchBids: function fetchBids() {
                q('f', arguments);
              },
              _Q: []
            };
            A = p.createElement(s);
            A.async = !0;
            A.src = t;
            g = p.getElementsByTagName(s)[0];
            g.parentNode.insertBefore(A, g);
          })('apstag', window, document, 'script', '//c.amazon-adsystem.com/aax2/apstag.js');
        }

        if (!scriptInitialized) {
          scriptInitialized = true;
          logger.log('Initializing APSTAG Library...');
          window.apstag.init(_a9Config);

          if (hasVideo()) {
            window.A9VideoAPI._preRollTargetingPromise = window.A9VideoAPI._targetingPromise = new Promise(function (resolve) {
              window.apstag.fetchBids({
                params: {
                  si_section: 'video'
                },
                slots: [{
                  slotID: slotName,
                  slotName: slotName,
                  mediaType: 'video'
                }],
                timeout: bidTimeout
              }, resolve);
            });
          } else {
            logger.log('No video tag found. Not sending automatic pre-roll request.');
            window.A9VideoAPI._preRollTargetingPromise = window.A9VideoAPI._targetingPromise = new Promise(function (resolve) {
              return resolve();
            });
          }

          if (window.AdFuel && window.AdFuel.cmd) {
            // AdFuel loaded first
            window.AdFuel.cmd.push(registerModuleWithAdFuel);
          } else if (window.AdFuel) {
            registerModuleWithAdFuel();
          } else {
            // wait for AdFuel to load
            addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
          }
        }
      } else {
        if (!consentStatus) logger.log('A9 is blocked due to GDPR restrictions.');
        blocked = true;
        logger.log('Exposing AdFuelVideoAPI.A9 and A9VideoAPI');
        window.AdFuelVideoAPI = window.AdFuelVideoAPI || {};
        window.AdFuelVideoAPI.A9 = window.A9VideoAPI = {
          getTargetingData: getTargetingData,
          getRefreshedTargetingData: getRefreshedTargetingData,
          getPreRollTargetingData: getPreRollTargetingData,
          getMidRollTargetingData: getMidRollTargetingData,
          getRefreshedPreRollTargetingData: getRefreshedPreRollTargetingData,
          getRefreshedMidRollTargetingData: getRefreshedMidRollTargetingData,
          __VERSION__: MODULE_VERSION
        };
      }
    } else {
      logger.log('Skipping User Consent Check...');
      logger.log('Exposing AdFuelVideoAPI.A9 and A9VideoAPI');
      window.AdFuelVideoAPI = window.AdFuelVideoAPI || {};
      window.AdFuelVideoAPI.A9 = window.A9VideoAPI = {
        getTargetingData: getTargetingData,
        getRefreshedTargetingData: getRefreshedTargetingData,
        getPreRollTargetingData: getPreRollTargetingData,
        getMidRollTargetingData: getMidRollTargetingData,
        getRefreshedPreRollTargetingData: getRefreshedPreRollTargetingData,
        getRefreshedMidRollTargetingData: getRefreshedMidRollTargetingData,
        __VERSION__: MODULE_VERSION
      };
      var _pubId = CONFIGURATION.ACCOUNT_IDS.DOM;

      if (isIntl()) {
        _pubId = CONFIGURATION.ACCOUNT_IDS.INTL;
      }

      logger.log('Final Pub ID: ', _pubId);
      var _bidTimeout = defaultTimeout;

      var _timeoutOverride = getURLParam('mdt');

      if (_timeoutOverride) {
        _bidTimeout = _timeoutOverride;
        logger.log('Overriding Max Duration Time: ', _bidTimeout);
      }

      var _slotName5 = window.AdFuelUtils.isMobile.phone ? 'aps-preroll-mobile' : 'aps-preroll';

      var _slotNameOverride = getURLParam('slotname');

      if (_slotNameOverride) {
        _slotName5 = _slotNameOverride;
        logger.log('Overriding Slot Name: ', _slotName5);
      }

      var _a9Config2 = {
        pubID: _pubId,
        adServer: 'googletag',
        videoAdServer: 'freeWheel',
        deals: true
      };

      if (!scriptIncluded) {
        scriptIncluded = true;

        (function (a9, a, p, s, t, A, g) {
          if (a[a9]) return;

          function q(c, r) {
            a[a9]._Q.push([c, r]);
          }

          a[a9] = {
            init: function init() {
              q('i', arguments);
            },
            fetchBids: function fetchBids() {
              q('f', arguments);
            },
            _Q: []
          };
          A = p.createElement(s);
          A.async = !0;
          A.src = t;
          g = p.getElementsByTagName(s)[0];
          g.parentNode.insertBefore(A, g);
        })('apstag', window, document, 'script', '//c.amazon-adsystem.com/aax2/apstag.js');
      }

      if (!scriptInitialized) {
        scriptInitialized = true;
        logger.log('Initializing APSTAG Library...');
        window.apstag.init(_a9Config2);

        if (hasVideo()) {
          window.A9VideoAPI._preRollTargetingPromise = window.A9VideoAPI._targetingPromise = new Promise(function (resolve) {
            window.apstag.fetchBids({
              params: {
                si_section: 'video'
              },
              slots: [{
                slotID: _slotName5,
                slotName: _slotName5,
                mediaType: 'video'
              }],
              timeout: _bidTimeout
            }, resolve);
          });
        } else {
          logger.log('No video tag found. Not sending automatic pre-roll request.');
          window.A9VideoAPI._preRollTargetingPromise = window.A9VideoAPI._targetingPromise = new Promise(function (resolve) {
            return resolve();
          });
        }

        if (window.AdFuel && window.AdFuel.cmd) {
          // AdFuel loaded first
          window.AdFuel.cmd.push(registerModuleWithAdFuel);
        } else if (window.AdFuel) {
          registerModuleWithAdFuel();
        } else {
          // wait for AdFuel to load
          addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
        }
      }
    }
  };

  var validateConfiguration = function validateConfiguration(config) {
    var errors = [];

    if (config.ACCOUNT_IDS) {
      Object.keys(CONFIGURATION.ACCOUNT_IDS).forEach(function (location) {
        logger.log('Config Account ID for Location: ', {
          location: location,
          config: config.ACCOUNT_IDS
        });

        if (!config.ACCOUNT_IDS[location]) {
          errors.push("Missing Account ID for Location: ".concat(location));
        }
      });
    }

    if (config.TIMEOUTS) {
      Object.keys(CONFIGURATION.TIMEOUTS).forEach(function (platform) {
        logger.log('Config Timeout for Platform: ', {
          platform: platform,
          config: config.TIMEOUTS
        });

        if (!config.TIMEOUTS[platform]) {
          errors.push("Missing Timeout Platform: ".concat(platform));
        }

        Object.keys(CONFIGURATION.TIMEOUTS[platform]).forEach(function (type) {
          logger.log('Config Timeout for Platform and Type: ', {
            platform: platform,
            type: type,
            config: config.TIMEOUTS
          });

          if (!config.TIMEOUTS[platform][type]) {
            errors.push("Missing Timeout Platform [".concat(platform, "] Type: ").concat(type));
          }
        });
      });
    }

    if (config.SLOTNAMES) {
      Object.keys(CONFIGURATION.SLOTNAMES).forEach(function (type) {
        logger.log('Config Slotname for Type: ', {
          type: type,
          config: config.SLOTNAMES
        });

        if (typeof config.SLOTNAMES[type] === 'undefined') {
          errors.push("Missing Slot Name Type: ".concat(type));
        }
      });
    }

    var response = {
      status: errors.length === 0,
      errors: errors
    };

    if (response.status) {
      CONFIGURATION = mergeDeep(CONFIGURATION, config);
      response.config = CONFIGURATION;
    }

    return response;
  };

  var init = function init(config) {
    logger = getLogger(MODULE_NAME, MODULE_VERSION, 'a9', 'color: #58f53f; padding: 2px', config.A9.DEBUG);
    setIsIntl && setIsIntl();
    var initPromise = new Promise(function (resolve, reject) {
      var consentRegion = getUserConsentRegion();
      var consentStatus = getConsent();

      if (consentRegion === 'ccpa' && !consentStatus) {
        logger.log('Preventing Initialization due to CCPA Restrictions.');
        return;
      } // Per CSD-2486, A domestic visitor to CNNE should not cause A9 to fire.


      if (!isIntl() && isCNNE()) {
        logger.log('Disabling A9 due to domestic restriction on CNN Español.');
        blocked = true;
      }

      logger.log('Initializing Module...', config);
      var validation = validateConfiguration(config.A9);
      logger.log('Config Validation: ', validation);

      if (validation.status) {
        configureA9Library();
        resolve({
          config: config
        });
      } else {
        validation.errors.forEach(function (error) {
          logger.error(error);
        });
        reject(validation.errors);
      }
    });
    initPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return initPromise;
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    getTargetingData: getTargetingData,
    getRefreshedTargetingData: getRefreshedTargetingData,
    getPreRollTargetingData: getPreRollTargetingData,
    getMidRollTargetingData: getMidRollTargetingData,
    getRefreshedPreRollTargetingData: getRefreshedPreRollTargetingData,
    getRefreshedMidRollTargetingData: getRefreshedMidRollTargetingData,
    preQueueCallback: preQueueCallback,
    preRefreshCallback: preRefreshCallback,
    registerModuleWithAdFuel: registerModuleWithAdFuel,
    init: init,
    __NAME__: MODULE_NAME,
    __VERSION__: MODULE_VERSION
  };
  return index;
}); ////////////////////////////////////////////
// Beemray for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.Beemray = factory());
})(void 0, function () {
  'use strict';
  /*
      Beemray Module - Version 4.0.2
      @4.0.0: - Initialization Update for GDPR v2.0
      @4.0.1: - Initialization process fix for non-Intl
      @4.0.2: - OptanonLoaded timing fix
       ------------------------------------------------------
      GDPR Status: Blocked
      CCPA Status: Blocked
  */

  var MODULE_NAME = 'Beemray Module';
  var MODULE_VERSION = 'v4.0.2';
  var getLogger = window.AdFuelUtils.getLogger;
  var isIntl = window.AdFuelUtils.isIntl;
  var getUserConsentRegion = window.AdFuelUtils.getUserConsentRegion;
  var getConsent = window.AdFuelUtils.getConsent;
  var addEvent = window.AdFuelUtils.addEvent;
  var consentTags = ['vendor', 'ads-person', 'geolocate'];
  var logger;
  var CUSTOMER_ID = '';
  var API_KEY = '';
  var scriptLoaded = false;
  var eventFired = false;
  var initEventSet = false;

  var includeBeemrayModule = function includeBeemrayModule(config, resolve) {
    if (!scriptLoaded) {
      window.beemray = window.beemray || {};
      CUSTOMER_ID = config.CUSTOMER_ID;
      API_KEY = config.API_KEY;
      logger.log('Including Library...');
      var source = 'https://v8-emea.sdk.beemray.com/content/websdk/' + API_KEY;
      var script = document.createElement('script');
      script.src = source;

      script.onload = function () {
        scriptLoaded = true;
        logger.log('Beemray is Loaded!');
        logger.log('Getting Beemray Results...');

        try {
          var eventTitle = 'dfpEvent';
          var endPointUrl = '/rest/event/web/plain';

          if (window.beemray && window.beemray.EventApi) {
            var event = window.beemray.EventApi.create(eventTitle, endPointUrl);
            var timeout = 1000;

            var eventFunc = function eventFunc(response) {
              eventFired = true;
              logger.log('Response: ', response);

              if (response === null) {
                if (resolve) resolve();
                return logger.log('Request Timeout or no Results.');
              }

              var targetIds = response.moments.map(function (moment) {
                return moment;
              });
              window.googletag.cmd.push(function () {
                logger.log('Setting Page-Level Targets: ', targetIds);
                window.googletag.pubads().setTargeting('beemray', targetIds);
              });
            };

            if (!eventFired) {
              logger.log('Sending WebAPI event...');
              event.send(eventFunc, timeout);
              eventFired = true;
              if (resolve) resolve();
            }
          } else {
            if (resolve) resolve();
          }
        } catch (err) {
          logger.error('Error sending WebAPI event...', err);
          resolve();
        }
      };

      document.head.appendChild(script);
    }
  };

  var registerModuleWithAdFuel = function registerModuleWithAdFuel(config) {
    logger.log('Registering Module...');
    window.AdFuel.registerModule(MODULE_NAME, {}, MODULE_VERSION, config);
  };

  var init = function init(config) {
    var initPromise = new Promise(function (resolve) {
      logger = getLogger(MODULE_NAME, MODULE_VERSION, 'beemray', 'color: #d2b000; padding: 2px', config.BEEMRAY.DEBUG);
      logger.log('Initializing Module...', config);
      var mainConfig = config.ADCELERATOR ? config.ADCELERATOR : config.ADFUEL;
      CUSTOMER_ID = config.BEEMRAY ? config.BEEMRAY.CUSTOMER_ID : '';
      API_KEY = config.BEEMRAY ? config.BEEMRAY.API_KEY : '';
      logger.log('Configuration: ', {
        CUSTOMER_ID: CUSTOMER_ID,
        API_KEY: API_KEY
      });
      window.beemray = window.beemray || {};

      if (isIntl() || mainConfig.EDITION && mainConfig.EDITION.toLowerCase() === 'international') {
        if (!CUSTOMER_ID || CUSTOMER_ID === '' || !API_KEY || API_KEY === '') {
          logger.log('Disabling Beemray due to no CUSTOMER_ID or API_KEY: ', {
            customer_id: CUSTOMER_ID,
            api_key: API_KEY
          });
          return resolve('Disabling Beemray due to no CUSTOMER_ID or API_KEY');
        } else {
          var consentRegion = getUserConsentRegion();
          var consentStatus = getConsent(consentTags);

          if (consentRegion === 'ccpa' || consentRegion === 'gdpr') {
            if (consentStatus) {
              includeBeemrayModule(config.BEEMRAY, resolve);

              if (window.AdFuel && window.AdFuel.cmd) {
                window.AdFuel.cmd.push(registerModuleWithAdFuel);
              } else if (window.AdFuel) {
                // AdFuel loaded first
                registerModuleWithAdFuel(config.BEEMRAY || {});
              } else {
                addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
              }
            }
          } else {
            includeBeemrayModule(config.BEEMRAY, resolve);

            if (window.AdFuel && window.AdFuel.cmd) {
              window.AdFuel.cmd.push(registerModuleWithAdFuel);
            } else if (window.AdFuel) {
              // AdFuel loaded first
              registerModuleWithAdFuel();
            } else {
              addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
            }
          }
        }
      } else {
        logger.log('Disabling Beemray due to user origin.  Not international.');
        return resolve('Disabling Beemray due to user origin.  Not international.');
      }
    });
    initPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return initPromise;
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    includeBeemrayModule: includeBeemrayModule,
    runAuction: function runAuction(slotData) {
      var auctionPromise = new Promise(function (resolve) {
        return resolve();
      });
      auctionPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return auctionPromise;
    },
    buildSlot: function buildSlot() {
      var buildPromise = new Promise(function (resolve) {
        return resolve();
      });
      buildPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return buildPromise;
    },
    setTargeting: function setTargeting() {
      var targetingPromise = new Promise(function (resolve) {
        return resolve();
      });
      targetingPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return targetingPromise;
    },
    registerModuleWithAdFuel: registerModuleWithAdFuel,
    init: init,
    __NAME__: MODULE_NAME,
    __VERSION__: MODULE_VERSION
  };
  return index;
}); ////////////////////////////////////////////
// Blockthrough for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.Blockthrough = factory());
})(void 0, function () {
  'use strict';
  /*
      Blockthrough Module - Version 4.0.1
      @4.0.0: - Initial CCPA Version
      @4.0.1: - OptanonLoaded timing fix
  */

  var MODULE_NAME = 'Blockthrough Module';
  var MODULE_VERSION = 'v4.0.1';
  var getLogger = window.AdFuelUtils.getLogger;
  var getConsent = window.AdFuelUtils.getConsent;
  var addEvent = window.AdFuelUtils.addEvent;
  var isIntl = window.AdFuelUtils.isIntl;
  var logger;
  var scriptLoaded = false;
  var initEventSet = false;

  var includeBlockthroughScript = function includeBlockthroughScript() {
    if (!scriptLoaded) {
      logger.log('Including Library...');
      scriptLoaded = true;
      var source = '//warnermediagroup-com.videoplayerhub.com/galleryloader.js';
      logger.log('Script source: ', source);
      var script = document.createElement('script');
      script.src = source;
      script.async = true;
      document.head.appendChild(script);
    }
  };

  var registerModuleWithAdFuel = function registerModuleWithAdFuel() {
    logger.log('Registering Module...');
    window.AdFuel.registerModule(MODULE_NAME, {
      preDispatchCallback: preDispatchCallback
    }, MODULE_VERSION, window.AdFuelOptions.BEEMRAY);
  };

  var preDispatchCallback = function preDispatchCallback(asset) {
    var preDispatchPromise = new Promise(function (resolve) {
      window.AdFuelUtils.isBlockerEnabled = window.BT ? window.BT.BLOCKER_ENABLED : false;
      window.AdFuelUtils.isReinsertionAllowed = window.BT ? window.BT.REINSERTION_ALLOWED : false;

      window.AdFuelUtils.getPermissionToReinsert = function (cb) {
        if (window.BT) {
          window.BT.getPermissionToReinsert(function (isPermitted) {
            if (isPermitted) {
              cb();
            }
          });
        }
      };

      resolve();
    });
    preDispatchPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return preDispatchPromise;
  };

  var init = function init(config) {
    logger = getLogger(MODULE_NAME, MODULE_VERSION, 'beemray', 'color: #d2b000; padding: 2px', config.BLOCKTHROUGH.DEBUG);
    logger.log('Initializing Module...');

    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var consentStatus = getConsent();

      if (consentStatus && !isIntl()) {
        includeBlockthroughScript();

        if (window.AdFuel && window.AdFuel.cmd) {
          window.AdFuel.cmd.push(registerModuleWithAdFuel);
        } else if (window.AdFuel) {
          // AdFuel loaded first
          registerModuleWithAdFuel();
        } else {
          addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
        }
      }
    } else {
      includeBlockthroughScript();

      if (window.AdFuel && window.AdFuel.cmd) {
        window.AdFuel.cmd.push(registerModuleWithAdFuel);
      } else if (window.AdFuel) {
        // AdFuel loaded first
        registerModuleWithAdFuel();
      } else {
        addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
      }
    }
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    init: init,
    preDispatchCallback: preDispatchCallback,
    registerModuleWithAdFuel: registerModuleWithAdFuel,
    __NAME__: MODULE_NAME,
    __VERSION__: MODULE_VERSION
  };
  return index;
}); ////////////////////////////////////////////
// CEP for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.CEP = factory());
})(void 0, function () {
  'use strict';

  var MODULE_NAME = 'CEP Module';
  var MODULE_VERSION = 'v4.0.3';
  var getLogger = window.AdFuelUtils.getLogger;
  var addEvent = window.AdFuelUtils.addEvent;
  var logger;
  var cepTags = {
    cep_brsf: [],
    cep_iabt: [],
    cep_sent: [],
    cep_tags: []
  };
  var site = '';
  var targetingSet = false;
  var initEventSet = false;

  var preQueueCallback = function preQueueCallback(asset, callback) {
    var preQueuePromise = new Promise(function (resolve) {
      // Make sure the asset array contains slots...
      logger.log('Asset: ', asset, asset.length);
      cepTags = window[site] && window[site].cep_topics ? window[site].cep_topics : cepTags;
      resolve(cepTags);
    });
    preQueuePromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return preQueuePromise;
  };

  var preDispatchCallback = function preDispatchCallback(asset) {
    var preDispatchPromise = new Promise(function (resolve) {
      if (!targetingSet) {
        targetingSet = true;
        var cepPassed = false;
        Object.keys(cepTags).forEach(function (key) {
          if (cepTags[key].length > 0) {
            logger.log('Adding CEP ' + key + ' Targeting: ', cepTags[key]);

            if (window.AdFuel) {
              window.AdFuel.addPageLevelTarget(key, cepTags[key]);
            } else {
              window.googletag.cmd.push(function () {
                window.googletag.pubads().setTargeting(key, cepTags[key]);
              });
            }

            resolve(cepTags);
            cepPassed = true;
          }
        });

        if (!cepPassed) {
          resolve('0');
          logger.log('No CEP targeting... adding CEP=0...');

          if (window.AdFuel) {
            window.AdFuel.addPageLevelTarget('cep', '0');
          } else {
            window.googletag.cmd.push(function () {
              window.googletag.pubads().setTargeting('cep', '0');
            });
          }
        }
      } else {
        resolve('CEP already set.');
      }
    });
    preDispatchPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return preDispatchPromise;
  };

  var registerModuleWithAdFuel = function registerModuleWithAdFuel(config) {
    logger.log('Registering module with AdFuel');
    window.AdFuel.registerModule(MODULE_NAME, {
      preQueueCallback: preQueueCallback,
      preDispatchCallback: preDispatchCallback
    }, MODULE_VERSION, config);
  };

  var init = function init(config) {
    var initPromise = new Promise(function (resolve) {
      logger = getLogger(MODULE_NAME, MODULE_VERSION, 'cep', 'color: #d2b000; padding: 2px', config.CEP.DEBUG);
      logger.log('Initializing Module...');
      site = config.ADFUEL ? config.ADFUEL.SITE_OBJECT : config.ADCELERATOR.SITE_OBJECT || '';

      if (window.AdFuel && window.AdFuel.cmd) {
        // AdFuel loaded first
        window.AdFuel.cmd.push(function () {
          registerModuleWithAdFuel(config.CEP);
        });
      } else if (window.AdFuel) {
        registerModuleWithAdFuel();
      } else {
        addEvent(document, 'AdFuelCreated', function () {
          registerModuleWithAdFuel(config.CEP);
        });
      }

      resolve();
    });
    initPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return initPromise;
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    buildSlot: function buildSlot(slotData) {
      var buildPromise = new Promise(function (resolve) {
        preQueueCallback(slotData);
      });
      buildPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return buildPromise;
    },
    runAuction: function runAuction() {
      var auctionPromise = new Promise(function (resolve) {
        return resolve();
      });
      auctionPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return auctionPromise;
    },
    setTargeting: function setTargeting(slotData) {
      var targetingPromise = new Promise(function (resolve) {
        preDispatchCallback();
      });
      targetingPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return targetingPromise;
    },
    preQueueCallback: preQueueCallback,
    preDispatchCallback: preDispatchCallback,
    registerModuleWithAdFuel: registerModuleWithAdFuel,
    init: init,
    __NAME__: MODULE_NAME,
    __VERSION__: MODULE_VERSION
  };
  return index;
}); ////////////////////////////////////////////
// CreativeReview for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.CEP = factory());
})(void 0, function () {
  'use strict';
  /* global XMLHttpRequest, Blob, FormData, FileReader */

  var MODULE_NAME = 'Creative Review Module';
  var MODULE_VERSION = 'v4.0.1';
  var getViewport = window.AdFuelUtils.getViewport;
  var getBrowser = window.AdFuelUtils.getBrowser;
  var IsMobile = window.AdFuelUtils.isMobile;
  var cdnRoot = window.AdFuelUtils.cdnRoot;
  var addEvent = window.AdFuelUtils.addEvent;
  var performance = window.AdFuelUtils.performance;
  var getLogger = window.AdFuelUtils.getLogger;
  var logger;
  var initEventSet = false;

  var checkHash = function checkHash() {
    if (window.location.hash.indexOf('doh') >= 0) {
      if (toolRendered) {
        _renderTool();
      }

      _renderTool();
    } else if (toolRendered) {
      _renderTool();
    }
  };

  var siteConfig = null;
  var deviceInfo = null;
  var locationInfo = null;

  var setDevice = function setDevice() {
    if (deviceInfo !== null) {
      return deviceInfo;
    }

    logger.time('Getting Device Information');
    var viewport = getViewport();
    deviceInfo = {
      availHeight: window.screen.availHeight,
      availLeft: window.screen.availLeft,
      availTop: window.screen.availTop,
      availWidth: window.screen.availWidth,
      colorDepth: window.screen.colorDepth,
      height: window.screen.height,
      orientation: {
        angle: window.screen.orientation ? window.screen.orientation.angle : 0,
        onchange: window.screen.orientation ? window.screen.orientation.onchange : null,
        type: window.screen.orientation ? window.screen.orientation.type : null
      },
      pixelDepth: window.screen.pixelDepth,
      width: window.screen.width,
      os: window.navigator.platform ? window.navigator.platform : 'Unknown',
      browser: getBrowser(),
      "class": 'Desktop',
      viewport: viewport.join('x')
    };

    if (IsMobile.amazon.device) {
      deviceInfo.os = 'Amazon';

      if (IsMobile.amazon.phone) {
        deviceInfo["class"] = 'Phone';
      }

      if (IsMobile.amazon.tablet) {
        deviceInfo["class"] = 'Tablet';
      }
    }

    if (IsMobile.android.device) {
      deviceInfo.os = 'Android';

      if (IsMobile.android.phone) {
        deviceInfo["class"] = 'Phone';
      }

      if (IsMobile.android.tablet) {
        deviceInfo["class"] = 'Tablet';
      }
    }

    if (IsMobile.apple.device) {
      deviceInfo.os = 'iOS';

      if (IsMobile.apple.ipod) {
        deviceInfo["class"] = 'iPod';
      }

      if (IsMobile.apple.phone) {
        deviceInfo["class"] = 'Phone';
      }

      if (IsMobile.apple.tablet) {
        deviceInfo["class"] = 'Tablet';
      }
    }

    if (IsMobile.windows.device) {
      deviceInfo.os = 'Windows';

      if (IsMobile.windows.phone) {
        deviceInfo["class"] = 'Phone';
      }

      if (IsMobile.windows.tablet) {
        deviceInfo["class"] = 'Tablet';
      }
    }

    if (IsMobile.other.blackberry) {
      deviceInfo.os = 'Blackberry';
      deviceInfo["class"] = 'Phone';
    }

    if (IsMobile.other.blackberry10) {
      deviceInfo.os = 'Blackberry10';
      deviceInfo["class"] = 'Phone';
    }

    if (IsMobile.other.chrome) {
      deviceInfo.os = 'Chrome';
      deviceInfo["class"] = 'Phone';
    }

    if (IsMobile.other.firefox) {
      deviceInfo.os = 'Firefox';
      deviceInfo["class"] = 'Phone';
    }

    if (IsMobile.other.opera) {
      deviceInfo.os = 'Opera';
      deviceInfo["class"] = 'Phone';
    }

    logger.timeEnd('Getting Device Information');
    return deviceInfo;
  };

  var setConfig = function setConfig(config) {
    logger.log('Setting Site Config: ', config);
    siteConfig = config;
  }; // var hostname = document.location.hostname;


  var fileUploadOK = window.File && window.FileReader && window.FileList && window.Blob;
  var toolRendered = false;
  var _appliedTargeting = [];
  var sites = ['', 'Adult Swim', 'Bleacher Report', 'Cartoon Network', 'CNN', 'CNN Arabic', 'CNN Espanol', 'CNN International', 'CNN Money', 'ELEAGUE', 'Great Big Story', 'HLN', 'NBA', 'NBA International', 'NCAA', 'PGA', 'Ryder Cup', 'TBS', 'TCM', 'Team Coco', 'TNT', 'TruTV'];
  var firstPanelElements = [{
    type: 'inputText',
    name: 'Name',
    value: '',
    label: 'Your Name',
    required: true
  }, {
    type: 'inputEmail',
    name: 'Email',
    value: '',
    label: 'Your Email',
    required: true
  }, {
    type: 'fileUpload',
    name: 'Screenshot',
    value: '',
    label: 'Upload Screenshot',
    required: false
  }];
  var secondPanelElements = [{
    type: 'listLabel',
    name: 'Reason',
    label: 'Issue Being Reported',
    required: false
  }, {
    type: 'list',
    name: 'Issue(s)',
    required: false,
    items: [{
      type: 'checkbox',
      name: 'Issue',
      value: 'block list violation',
      label: 'Ad violates block list',
      required: false
    }, {
      type: 'checkbox',
      name: 'Issue',
      value: 'video plays in display ad',
      label: 'Video plays in ad',
      required: false
    }, {
      type: 'checkbox',
      name: 'Issue',
      value: 'ad disrupts content',
      label: 'Ad disrupts content',
      required: false
    }, {
      type: 'checkbox',
      name: 'Issue',
      value: 'ad incorrectly sized',
      label: 'Ad incorrectly sized',
      required: false
    }, {
      type: 'checkbox',
      name: 'Issue',
      value: 'download initiated',
      label: 'Ad initiates download',
      required: false
    }, {
      type: 'checkbox',
      name: 'Issue',
      value: 'blank ad',
      label: 'Blank ad',
      required: false
    }, {
      type: 'checkbox',
      name: 'Issue',
      value: 'low quality',
      label: 'Low-quality ad',
      required: false
    }, {
      type: 'checkbox',
      name: 'Issue',
      value: 'audio auto-starts',
      label: 'Audio auto-starts',
      required: false
    }, {
      type: 'checkbox',
      name: 'Issue',
      value: 'broken ad',
      label: 'Broken ad',
      required: false
    }]
  }];
  var thirdPanelElements = [{
    type: 'select',
    name: 'Brand',
    label: 'Affected Brand',
    required: true,
    options: sites
  }, {
    type: 'textarea',
    name: 'Comments',
    label: 'Issue Description',
    required: true
  }];
  var head = document.getElementsByTagName('head')[0];
  var body = document.getElementsByTagName('body')[0];

  var checkbox = function checkbox(name, value, text) {
    var el = document.createElement('div');
    var cb = document.createElement('input');
    cb.type = 'checkbox';
    cb.name = name;
    cb.id = name + '_' + value;
    cb.style["float"] = 'left';
    cb.style['margin-right'] = '2px';
    cb.style.position = 'relative';
    cb.style.top = '3px';
    cb.value = value;
    var lab = document.createElement('div');
    lab.style.width = 'calc(100% - 18px)';
    lab.appendChild(document.createTextNode(text));
    el.appendChild(cb);
    el.appendChild(lab);
    return el;
  };

  var element = function element(name, text, className) {
    var el = document.createElement(name);
    el.innerHTML = text;
    el.className = className;
    return el;
  };

  var button = function button(item) {
    var el = document.createElement('button');
    el.onclick = item.action;
    el.id = item.name;
    el.appendChild(document.createTextNode(item.value));
    el.className = 'btn btn-sm btn-primary';
    return el;
  };

  var _renderTool = function _renderTool() {
    var container;
    var iconStylesheet;
    var toolContainer;
    var toolFiller;
    var toolStylesheet;

    if (!toolRendered) {
      // Load stylesheets and add elements to page.
      iconStylesheet = document.createElement('link');
      iconStylesheet.type = 'text/css';
      iconStylesheet.rel = 'stylesheet';
      iconStylesheet.href = '//fonts.googleapis.com/icon?family=Material+Icons';
      iconStylesheet.id = 'material-icons-font';
      toolStylesheet = document.createElement('link');
      toolStylesheet.rel = 'stylesheet';
      toolStylesheet.href = '//' + cdnRoot() + '/ads/adfuel/css/creativeReview-3.0.css'; // toolStylesheet.href = '/css/creativeReview-3.0.css';

      toolStylesheet.id = 'adfuel-creative-review-stylesheet';
      container = document.createElement('div');
      container.className = 'adfuel-creative-review-button-container adfuel-open-creative-review-button-container';
      var actionButton = document.createElement('a');
      actionButton.className = 'adfuel-creative-review-button';
      var buttonIcon = document.createElement('i');
      buttonIcon.className = 'adfuel-creative-review-button-icon material-icons';
      buttonIcon.innerHTML = 'view_module';
      buttonIcon.innerText = 'view_module';
      toolFiller = document.createElement('div');
      toolFiller.className = 'adfuel-creative-review-filler';
      toolContainer = document.createElement('div');
      toolContainer.className = 'adfuel-creative-review';
      actionButton.appendChild(buttonIcon);
      container.appendChild(actionButton);
      head.appendChild(iconStylesheet);
      head.appendChild(toolStylesheet);
      body.appendChild(container);
      body.appendChild(toolFiller);
      body.appendChild(toolContainer);

      if (locationInfo === null) {
        (function (callback) {
          var a = document;
          var b = a.createElement('script');
          var c = a.getElementsByTagName('script')[0];
          var d = /^(complete|loaded)$/;
          var e = false;
          var f = document.location.protocol === 'https:';
          b.type = 'text/javascript';
          b.async = true;
          b.src = (f ? 'https:' : 'http:') + '//www.geoplugin.net/javascript.gp';

          b.onload = b.onreadystatechange = function () {
            if (!e && !('readyState' in b && d.test(b.readyState))) {
              b.onload = b.onreadystatechange = null;
              e = true;
              callback();
            }
          };

          c.parentNode.insertBefore(b, c);
        })(function () {
          var geoCountry, geoCity, geoRegion, geoLat, geoLong;
          var valueSet = false;

          if (window.geoplugin_countryCode) {
            geoCountry = window.geoplugin_countryCode();
            valueSet = true;
          }

          if (window.geoplugin_city) {
            geoCity = window.geoplugin_city();
            valueSet = true;
          }

          if (window.geoplugin_region) {
            geoRegion = window.geoplugin_region();
            valueSet = true;
          }

          if (window.geoplugin_latitude) {
            geoLat = window.geoplugin_latitude();
            valueSet = true;
          }

          if (window.geoplugin_longitude) {
            geoLong = window.geoplugin_longitude();
            valueSet = true;
          }

          if (valueSet === true) {
            locationInfo = {
              city: geoCity,
              region: geoRegion,
              country: geoCountry,
              latitude: geoLat,
              longitude: geoLong
            };
          }
        });
      }

      _buildToolContainer(toolContainer);

      addEvent(actionButton, 'click', _openTool);
      toolRendered = true;
    } else {
      // Remove stylesheets and elements from page.
      iconStylesheet = document.getElementById('material-icons-font');
      toolStylesheet = document.getElementById('adfuel-creative-review-stylesheet');
      container = document.querySelector('div.adfuel-creative-review-button-container');
      toolFiller = document.querySelector('div.adfuel-creative-review-filler');
      toolContainer = document.querySelector('div.adfuel-creative-review');
      head.removeChild(iconStylesheet);
      head.removeChild(toolStylesheet);
      body.removeChild(container);
      body.removeChild(toolFiller);
      body.removeChild(toolContainer);
      toolRendered = false;
    }
  };

  var _buildToolContainer = function _buildToolContainer(container) {
    var closeContainer = document.createElement('div');
    closeContainer.className = 'adfuel-creative-review-button-container';
    closeContainer.id = 'adfuel-close-creative-review-button-container';
    var actionButton = document.createElement('a');
    actionButton.className = 'adfuel-creative-review-button-plain';
    actionButton.id = 'adfuel-close-creative-review-button';
    var buttonIcon = document.createElement('i');
    buttonIcon.className = 'adfuel-creative-review-button-icon material-icons';
    buttonIcon.innerHTML = buttonIcon.innerText = 'close';
    var consoleBanner = document.createElement('div');
    consoleBanner.id = 'adfuel-creative-review-banner';
    var consoleTabContainer = document.createElement('div');
    consoleTabContainer.className = 'adfuel-creative-review-tab-link-container';
    actionButton.appendChild(buttonIcon);
    closeContainer.appendChild(actionButton);
    addEvent(actionButton, 'click', _closeTool);
    consoleBanner.appendChild(closeContainer);
    var title = document.createElement('div');
    title.className = 'adfuel-creative-review-banner-title';
    var titleText = siteConfig.ADFUEL ? 'AdFuel Creative Review' : 'Adcelerator Creative Review';
    var titleContainer = document.createElement('div');
    titleContainer.appendChild(document.createTextNode(titleText));
    var subtitle = document.createElement('div');
    subtitle.className = 'adfuel-creative-review-banner-subtitle';
    subtitle.innerHTML = 'Report an issue on this page by submitting the form below.&nbsp;&nbsp;&nbsp;A copy will be sent to the email address provided.';
    titleContainer.appendChild(subtitle);
    title.appendChild(titleContainer);
    consoleBanner.appendChild(title);
    consoleBanner.appendChild(consoleTabContainer);
    container.appendChild(consoleBanner);
  };

  var _openTool = function _openTool() {
    var toolFiller = document.querySelector('div.adfuel-creative-review-filler');
    var toolContainer = document.querySelector('div.adfuel-creative-review');
    var openContainer = document.querySelector('div.adfuel-creative-review-button-container');
    var closeContainer = document.querySelector('div#adfuel-close-creative-review-button-container');
    openContainer.style.display = 'none';
    closeContainer.style.display = 'inline-block';
    toolFiller.style.display = 'block';
    toolContainer.style.display = 'inline-block';

    _buildToolContent(toolContainer);

    _showToolContent();
  };

  var _closeTool = function _closeTool() {
    logger.log('Closing Tool...');
    var openContainer = document.querySelector('div.adfuel-creative-review-button-container');
    var openButton = document.querySelector('body > div.adfuel-creative-review-button-container > a');
    var toolFiller = document.querySelector('div.adfuel-creative-review-filler');
    var toolContainer = document.querySelector('div.adfuel-creative-review');
    logger.log('Closing Tool...', toolFiller, toolContainer);
    toolFiller.style.display = 'none';
    toolContainer.style.display = 'none';

    if (openContainer && openButton) {
      openContainer.style.display = 'inline-block';
      openButton.style.display = 'inline-block';
      addEvent(openButton, 'click', _openTool);
      window.AdFuel.openTool = _openTool;
    }
  };

  var _showToolContent = function _showToolContent() {
    var panel = document.createElement('div');
    var container = document.getElementsByClassName('adfuel-creative-review')[0];
    panel.id = 'adfuel-creative-review-content';
    panel.className = 'adfuel-creative-review-content';
    panel.style.width = '100%';
    panel.style.padding = '0';
    panel.style.margin = '0';
    panel.style.height = '80%';
    panel.style.minHeight = '250px';
    panel.style.overflowY = 'auto';
    panel.style.display = 'block';
    container.appendChild(panel);
  };

  var _buildToolContent = function _buildToolContent(container) {
    if (!container) {
      container = document.getElementsByClassName('adfuel-creative-review')[0];
    }

    if (!container) {
      logger.log('Error: No AdFuel-Creative-Review container.');
      return false;
    }

    var panelContainer = document.createElement('div');
    panelContainer.id = 'adfuel-creative-review-content';
    panelContainer.className = 'adfuel-creative-review-content';

    _buildCreativeReviewForm(panelContainer);

    container.appendChild(panelContainer);
    var adXVendorData = {
      queryIds: {}
    };
    document.querySelectorAll('div[data-google-query-id]').forEach(function (node) {
      adXVendorData.queryIds[node.id] = node.dataset.googleQueryId;
    });
  };

  var setSubmitMessage = function setSubmitMessage(header, message) {
    // set the message
    var el = document.createElement('p');

    if (message !== '') {
      el.style.color = 'white';
      el.style.fontSize = '.95em';
      el.style.textAlign = 'center';
      el.innerHTML = message;
    }

    header.innerHTML = '';
    header.appendChild(el);
    header.style.display = 'block'; // clear the message after 5 sec.

    window.setTimeout(function () {
      header.innerHTML = '';
      header.style.display = 'none';
    }, 5000);
  };

  var setSuccessMessage = function setSuccessMessage(header, message) {
    // set the message
    var el = document.createElement('p');
    header.style.backgroundColor = 'green';

    if (message !== '') {
      el.style.color = 'white';
      el.style.fontSize = '.95em';
      el.style.textAlign = 'center';
      el.style.fontWeight = 'normal';
      el.style.fontFamily = 'Helvetica';
      el.innerHTML = message;
    }

    header.innerHTML = '';
    header.appendChild(el);
    header.style.display = 'block'; // clear the message after 5 sec.

    window.setTimeout(function () {
      header.innerHTML = '';
      header.style.display = 'none';
    }, 5000);
  };

  var validateEmail = function validateEmail(email) {
    var re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email);
  };

  var buildPanel = function buildPanel(panel, container, elements) {
    for (var i = 0; i < elements.length; i++) {
      var item = elements[i];
      var inputContainer = void 0;
      var inputLabel = void 0;
      var listContainer = void 0;
      var textareaContainer = void 0;
      var textareaLabel = void 0;
      var listLabel = void 0;
      var listEl = void 0;
      var selectContainer = void 0;
      var panelLabel = void 0;

      switch (item.type) {
        case 'textarea':
          textareaContainer = element('div', '', 'adfuel-creative-review-textarea-container');
          textareaLabel = element('div', (item.required === true ? "<span style='color: red;'>*</span> " : '') + item.label + ': ', 'adfuel-creative-review-form-label adfuel-creative-review-textarea-label');
          textareaContainer.appendChild(textareaLabel);
          textareaContainer.appendChild(item.element = document.createElement('textarea'));
          item.element.name = item.name || '';

          if (item.required === true) {
            item.element.attributes.required = 'required';
          }

          panel.appendChild(textareaContainer);
          break;

        case 'inputText':
          inputContainer = element('div', '', 'adfuel-creative-review-input-element-container');
          inputLabel = element('div', (item.required === true ? "<span style='color: red;'>*</span> " : '') + item.label + ': ', 'adfuel-creative-review-form-label adfuel-creative-review-input-label');
          inputContainer.appendChild(inputLabel);
          item.element = document.createElement('input');
          item.element.name = item.name || '';
          item.element.type = 'text';

          if (item.required === true) {
            item.element.setAttribute('required', 'required');
          }

          inputContainer.appendChild(item.element);
          panel.appendChild(inputContainer);
          break;

        case 'inputEmail':
          inputContainer = element('div', '', 'adfuel-creative-review-input-element-container');
          inputLabel = element('div', (item.required === true ? "<span style='color: red;'>*</span> " : '') + item.label + ': ', 'adfuel-creative-review-form-label adfuel-creative-review-input-label');
          inputContainer.appendChild(inputLabel);
          item.element = document.createElement('input');
          item.element.type = 'email';
          item.element.name = item.name || '';

          if (item.required === true) {
            item.element.setAttribute('required', 'required');
          }

          inputContainer.appendChild(item.element);
          panel.appendChild(inputContainer);
          break;

        case 'listLabel':
          listContainer = element('div', '', 'adfuel-creative-review-list-element-container');
          listLabel = element('div', (item.required === true ? "<span style='color: red;'>*</span> " : '') + item.label + ': ', 'adfuel-creative-review-form-label adfuel-creative-review-list-label');
          listContainer.appendChild(listLabel);
          panel.append(listContainer);
          break;

        case 'list':
          listContainer = panel.querySelector('#cr_panel_2 > div.adfuel-creative-review-list-element-container');
          listEl = element('div', '', 'adfuel-creative-review-checkbox-list');

          for (var x = 0; x < item.items.length; x++) {
            var listItem = item.items[x];
            var checkboxWrapper = checkbox(listItem.name, listItem.value, listItem.label);
            var checkboxEl = checkboxWrapper.firstChild;
            item.items[x].element = checkboxEl;
            listEl.appendChild(checkboxWrapper);
          }

          listContainer.appendChild(listEl);
          break;

        case 'select':
          selectContainer = element('div', '', 'adfuel-creative-review-select-container');
          panelLabel = element('div', (item.required === true ? "<span style='color: red;'>*</span> " : '') + item.label + ': ', 'adfuel-creative-review-form-label adfuel-creative-review-select-label');
          selectContainer.appendChild(panelLabel);
          item.element = document.createElement('select');
          item.element.name = item.name;

          for (var optionIndex = 0; optionIndex < item.options.length; optionIndex++) {
            var option = element('option', item.options[optionIndex]);
            option.value = item.options[optionIndex];
            item.element.appendChild(option);
          }

          selectContainer.appendChild(item.element);
          panel.appendChild(selectContainer);
          break;

        case 'button':
          panel.appendChild(button(item));
          break;

        case 'fileUpload':
          if (fileUploadOK) {
            inputContainer = element('div', '', 'adfuel-creative-review-input-element-container');
            inputLabel = element('div', item.label + ': ' + (item.required === true ? ' *' : ''), 'adfuel-creative-review-form-label adfuel-creative-review-file-label');
            inputContainer.appendChild(inputLabel);
            item.element = document.createElement('input');
            item.element.name = item.name || '';
            item.element.type = 'file';
            item.element.accept = 'image/*';
            inputContainer.appendChild(item.element);
            panel.appendChild(inputContainer);
          }

          break;

        default:
          break;
      }
    }

    logger.log('Appending Panel to Container: ', panel, container);
    container.appendChild(panel);
  };

  var _buildCreativeReviewForm = function _buildCreativeReviewForm(panel) {
    if (!panel) return;
    panel.innerHTML = '';
    panel.style.padding = '0';
    var header = document.createElement('div');
    header.className = 'adfuel-creative-review-panel';
    header.id = 'cr_panel_header';
    var validationText = document.createElement('p');
    validationText.className = 'adfuel-creative-review-panel-header-text';
    header.appendChild(validationText);
    panel.appendChild(header);
    var formElement = document.createElement('form');
    panel.appendChild(formElement);
    var panel1 = document.createElement('div');
    panel1.className = 'adfuel-creative-review-panel';
    panel1.id = 'cr_panel_1';
    buildPanel(panel1, formElement, firstPanelElements);
    var panel2 = document.createElement('div');
    panel2.className = 'adfuel-creative-review-panel';
    panel2.id = 'cr_panel_2';
    buildPanel(panel2, formElement, secondPanelElements);
    var panel3 = document.createElement('div');
    panel3.className = 'adfuel-creative-review-panel';
    panel3.id = 'cr_panel_3';
    buildPanel(panel3, formElement, thirdPanelElements);
    var footer = document.createElement('div');
    footer.className = 'adfuel-creative-review-panel';
    footer.id = 'cr_panel_footer';
    var submitContainer = document.createElement('div'); // submit confirmation alert box

    var confirmAlert = document.createElement('div');
    confirmAlert.className = 'cr-confirm-alert';
    confirmAlert.style.visibility = 'hidden';
    var confirmAlertText = document.createElement('div');
    confirmAlertText.className = 'cr-confirm-alert-text';
    var today = new Date();
    var dayOfWeek = today.getDay();
    var hour = today.getHours();
    var offHours = dayOfWeek === 0 || dayOfWeek === 6 || hour < 8 || hour > 17;
    var responseTime = offHours ? '2 hours outside of' : '1 hour during';
    confirmAlertText.innerHTML = 'Your report has been successfully submitted to Ad Operations. If you do not get a response within ' + responseTime + ' normal business hours (8am - 6pm Eastern), further contact information can be found in the confirmation email that has been sent to you.';
    confirmAlert.appendChild(confirmAlertText);
    confirmAlert.appendChild(document.createElement('br'));
    var confirmAlertBtn = document.createElement('button');
    confirmAlertBtn.className = 'btn btn-primary btn-sm';
    confirmAlertBtn.innerHTML = 'OK';

    confirmAlertBtn.onclick = function (e) {
      e.preventDefault();

      _closeTool();

      confirmAlert.style.visibility = 'hidden'; // clear all inputs

      formElement.reset();
    };

    confirmAlert.appendChild(confirmAlertBtn);
    panel.appendChild(confirmAlert);
    var submitButton = document.createElement('button');
    submitButton.type = 'submit';
    submitButton.className = 'btn btn-primary btn-sm cr-confirm-alert-btn';

    submitButton.onclick = function (e) {
      e.preventDefault(); // validate inputs

      if (formElement.elements.Name.value === '' || formElement.elements.Comments.value === '' || formElement.elements.Email.value === '' || formElement.elements.Brand.value === '') {
        setSubmitMessage(header, 'Please fill out all required fields.');
      } else if (!validateEmail(formElement.elements.Email.value)) {
        setSubmitMessage(header, 'Email address is not valid.');
      } else {
        submitCreativeReviewForm(formElement, function () {
          setSuccessMessage(header, 'Your report has been successfully submitted to Ad Operations.<hr />If you do not get a response within 2 hours outside of normal business hours (8am - 6pm Eastern), further contact information can be found in the confirmation email that has been sent to you.');
        });
      }
    };

    submitButton.innerHTML = 'SUBMIT';
    submitContainer.appendChild(submitButton);
    footer.appendChild(submitContainer);
    panel.appendChild(footer);
    panel.appendChild(confirmAlert);
  };

  var setRenderCompleteListener = function setRenderCompleteListener() {
    window.googletag = window.googletag || {};
    window.googletag.cmd = window.googletag.cmd || [];
    window.googletag.cmd.push(function () {
      window.googletag.pubads().addEventListener('slotRenderEnded', function (event) {
        try {
          var detail = {};

          if (event.slot) {
            detail.asset = event.slot;

            if (event.slot.getTargeting('pos')) {
              detail.pos = event.slot.getTargeting('pos');
            }
          }

          if (event.isEmpty) {
            detail.empty = true;
          } else {
            detail.empty = false;
          }

          if (event.size) {
            detail.renderedSize = event.size;
          }

          if (event.creativeId) {
            detail.creativeId = event.creativeId;
          }

          if (event.lineItemId) {
            detail.lineItemId = event.lineItemId;
          }

          if (event.serviceName) {
            detail.serviceName = event.serviceName;
          }

          if (event.slot && event.slot.getSlotElementId()) {
            detail.divId = event.slot.getSlotElementId();
          }

          var info = window.AdFuel.pageSlots[detail.divId] ? window.AdFuel.pageSlots[detail.divId].getResponseInformation() : {
            campaignId: null,
            advertiserId: null
          };
          detail.campaignId = info ? info.campaignId : null;
          detail.advertiserId = info ? info.advertiserId : null;
        } catch (ex) {
          console.warn('Warning: Error reading slotRenderEnded event', {
            message: ex
          });
        }
      });
    });
  };

  var _addTargetingForCreativeExtraction = function _addTargetingForCreativeExtraction(slots, callback) {
    for (var slotIndex = 1; slotIndex < slots.length; slotIndex++) {
      var slot = slots[slotIndex];

      if (_appliedTargeting.indexOf(slot.rktr_slot_id) < 0) {
        window.AdFuel.addSlotLevelTarget(slot.rktr_slot_id, 'elemId', slot.rktr_slot_id);

        _appliedTargeting.push(slot.rktr_slot_id);
      }
    }

    addEvent(document, 'SlotIdChange', function (e) {
      if (e.detail.newId !== e.detail.originalId) {
        if (_appliedTargeting.indexOf(e.detail.newId) < 0) {
          window.AdFuel.addSlotLevelTarget(e.detail.newId, 'elemId', e.detail.newId);

          _appliedTargeting.push(e.detail.newId);
        }
      }
    });
    callback();
  };

  var serialize = function serialize(form) {
    if (!form || form.nodeName !== 'FORM') {
      return;
    }

    var j;
    var q = [];
    var t = {};

    for (var i = form.elements.length - 1; i >= 0; i = i - 1) {
      if (form.elements[i].name === '') {
        continue;
      }

      switch (form.elements[i].nodeName) {
        case 'INPUT':
          switch (form.elements[i].type) {
            case 'email':
            case 'text':
            case 'hidden':
            case 'password':
            case 'button':
            case 'reset':
            case 'submit':
              q.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].value));
              t[form.elements[i].name] = form.elements[i].value;
              break;

            case 'file':
              if (form.elements[i].files.length > 0) {
                q.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].value));
                t[form.elements[i].name] = form.elements[i].files[0]; // FileList object

                t[form.elements[i].name + 'FileName'] = t[form.elements[i].name].name;
              }

              break;

            case 'checkbox':
              if (form.elements[i].checked) {
                q.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].value)); // to support multiple checkboxes in a group, store the values as an array

                if (t[form.elements[i].name]) {
                  t[form.elements[i].name].push(form.elements[i].value);
                } else {
                  t[form.elements[i].name] = [form.elements[i].value];
                }
              }

              break;

            case 'radio':
              if (form.elements[i].checked) {
                q.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].value));
                t[form.elements[i].name] = form.elements[i].value;
              }

              break;

            default:
              break;
          }

          break;

        case 'TEXTAREA':
          q.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].value));
          t[form.elements[i].name] = form.elements[i].value;
          break;

        case 'SELECT':
          switch (form.elements[i].type) {
            case 'select-one':
              q.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].value));
              t[form.elements[i].name] = form.elements[i].value;
              break;

            case 'select-multiple':
              for (j = form.elements[i].options.length - 1; j >= 0; j = j - 1) {
                if (form.elements[i].options[j].selected) {
                  q.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].options[j].value));
                  t[form.elements[i].name] = form.elements[i].options[j].value;
                }
              }

              break;

            default:
              break;
          }

          break;

        case 'BUTTON':
          switch (form.elements[i].type) {
            case 'reset':
            case 'submit':
            case 'button':
              q.push(form.elements[i].name + '=' + encodeURIComponent(form.elements[i].value));
              t[form.elements[i].name] = form.elements[i].value;
              break;

            default:
              break;
          }

          break;

        default:
          break;
      }
    }

    return t;
  };

  var submitCreativeReviewForm = function submitCreativeReviewForm(form, callback) {
    var data = serialize(form);

    var processData = function processData() {
      // callback(true);
      var xhr = new XMLHttpRequest();

      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          var response = xhr.status === 200;
          callback(response);
        }
      };

      var formBlob = new Blob([JSON.stringify(data, null, 2)], {
        type: 'application/json'
      });
      var registryBlob = new Blob([JSON.stringify(window.AdFuel.registry, null, 2)], {
        type: 'application/json'
      });
      var browserData = {
        availHeight: window.screen.availHeight,
        availLeft: window.screen.availLeft,
        availTop: window.screen.availTop,
        availWidth: window.screen.availWidth,
        colorDepth: window.screen.colorDepth,
        height: window.screen.height,
        orientation: {
          angle: window.screen.orientation ? window.screen.orientation.angle : 0,
          onchange: window.screen.orientation ? window.screen.orientation.onchange : null,
          type: window.screen.orientation ? window.screen.orientation.type : ''
        },
        pixelDepth: window.screen.pixelDepth,
        width: window.screen.width
      };
      var slotData = JSON.parse(JSON.stringify(performance.slotDetails));
      var slotsBlob = new Blob([JSON.stringify(slotData, null, 2)], {
        type: 'application/json'
      });
      var cookiesBlob = new Blob([JSON.stringify(document.cookie, null, 2)], {
        type: 'application/json'
      });
      var browserBlob = new Blob([JSON.stringify(browserData, null, 2)], {
        type: 'application/json'
      });
      var requestBlob = new Blob([JSON.stringify(window.AdFuel.requestScriptText, null, 2)], {
        type: 'application/json'
      });
      var urlBlob = new Blob([JSON.stringify(window.location.href, null, 2)], {
        type: 'application/json'
      });
      var fdata = new FormData();
      fdata.append('formData', formBlob);
      fdata.append('registry', registryBlob);
      fdata.append('slots', slotsBlob);
      fdata.append('cookies', cookiesBlob);
      fdata.append('request', requestBlob);
      fdata.append('browser', browserBlob);
      fdata.append('url', urlBlob);
      var url = 'https://adfuel.turnerapps.com/api/v2/email';
      xhr.open('POST', url, true);
      xhr.send(fdata);
    };

    if (data.Screenshot) {
      // Only process image files.
      if (!data.Screenshot.type.match('image.*')) {
        processData();
      }

      var reader = new FileReader(); // Closure to capture the file information.

      reader.onload = function (data) {
        return function (e) {
          data.Screenshot = e.target.result;
          processData();
        };
      }(data); // Read in the image file as a data URL.


      reader.readAsDataURL(data.Screenshot);
    } else {
      processData();
    }
  };

  var parseMessage = function parseMessage(msg) {
    var data = {};

    if (msg.data && typeof msg.data.indexOf === 'function' && msg.data.indexOf('{') === 0 && msg.data.indexOf('googMsgType') < 0) {
      try {
        data = JSON.parse(msg.data);
      } catch (err) {
        return;
      }
    }

    if (data.divId) {
      if (Array.isArray(data.divId) && data.divId.length > 1) {
        data.divId = data.divId[0];
      }
    }
  };

  var addKeypressModule = function addKeypressModule() {
    var renderCreativeReviewConsole = function renderCreativeReviewConsole() {
      logger.log('Rendering Creative Review Console...');

      _renderTool();
    };

    var initializeKeypressListeners = function initializeKeypressListeners() {
      // d-o-h to open just Creative Review
      var defaults = {
        prevent_default: false,
        prevent_repeat: false,
        is_sequence: true,
        is_exclusive: true,
        is_solitary: true
      };
      var options = {
        keys: siteConfig.CREATIVE_REVIEW.HOTKEY || '^ d o h $',
        on_keydown: renderCreativeReviewConsole
      };
      logger.log('Initializing Keypress Listener...', {
        defaults: defaults,
        options: options
      });
      var feedbackListener = new window.keypress.Listener(window, defaults);
      feedbackListener.register_combo(options);
    };

    if (!window.keypress) {
      var a = document;
      var b = a.createElement('script');
      var c = a.getElementsByTagName('script')[0];
      var d = /^(complete|loaded)$/;
      var e = false;
      var f = window.location.protocol === 'https:';
      b.type = 'text/javascript';
      b.async = true;
      b.src = (f ? 'https:' : 'http:') + '//' + cdnRoot() + '/ads/adfuel/modules/keypress.js';

      b.onload = b.onreadystatechange = function () {
        if (!e && !('readyState' in b && d.test(b.readyState))) {
          b.onload = b.onreadystatechange = null;
          e = true;
          initializeKeypressListeners();
        }
      };

      c.parentNode.insertBefore(b, c);
    } else {
      initializeKeypressListeners();
    }
  };

  var registerModuleWithAdFuel = function registerModuleWithAdFuel(config) {
    logger.log('Registering Module with AdFuel...');
    window.AdFuel.registerModule(MODULE_NAME, {
      postQueueCallback: _addTargetingForCreativeExtraction
    }, MODULE_VERSION, config);
    setRenderCompleteListener();
  };

  var init = function init(config) {
    var initPromise = new Promise(function (resolve) {
      logger = getLogger(MODULE_NAME, MODULE_VERSION, 'adreview', 'color: #00e1e1; padding: 2px', config.CREATIVE_REVIEW.DEBUG);
      setConfig(config);
      setDevice();
      addEvent(window, 'message', parseMessage);
      addEvent(window, 'hashchange', checkHash);
      addKeypressModule();
      checkHash();
      addEvent(document, 'AdFuelCreated', function () {
        registerModuleWithAdFuel(config.CREATIVE_REVIEW);
      });
      resolve();
    });
    initPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    init: init,
    addTargetingForCreativeExtraction: _addTargetingForCreativeExtraction,
    buildSlot: function buildSlot() {
      var buildPromise = new Promise(function (resolve) {
        return resolve();
      });
      buildPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return buildPromise;
    },
    setTargeting: function setTargeting(asset) {
      var targetingPromise = new Promise(function (resolve) {
        _addTargetingForCreativeExtraction(asset, resolve);
      });
      targetingPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return targetingPromise;
    },
    runAuction: function runAuction() {
      var auctionPromise = new Promise(function (resolve) {
        return resolve();
      });
      auctionPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return auctionPromise;
    },
    __NAME__: MODULE_NAME,
    __VERSION__: MODULE_VERSION
  };
  return index;
}); ////////////////////////////////////////////
// GUID for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.GUID = factory());
})(void 0, function () {
  'use strict';
  /*
      GUID Module - Version 4.0.1
      @4.0.0: - Initialization Update for GDPR/CCPA
      @4.0.1: - OptanonLoaded timing fix
  */

  var MODULE_NAME = 'Turner GUID Module';
  var MODULE_VERSION = 'v4.0.1';
  var addEvent = window.AdFuelUtils.addEvent;
  var hasCookie = window.AdFuelUtils.hasCookie;
  var getLogger = window.AdFuelUtils.getLogger;
  var getUserConsentRegion = window.AdFuelUtils.getUserConsentRegion;
  var getConsent = window.AdFuelUtils.getConsent;
  var readCookie = window.AdFuelUtils.readCookie;
  var consentTags = ['data-store', 'ads-contextual', 'ads-person-prof', 'ads-person', 'content-person-prof', 'content-person', 'measure-ads', 'measure-content', 'measure-market', 'product-develop'];
  var tGetGuid;
  var logger;
  var enableGuid = true;
  var targetingSet = false;
  var initEventSet = false;
  var siteConfig;

  function setGUIDTargeting(asset) {
    var preDispatchPromise = new Promise(function (resolve) {
      var guid = window.turner_getGuid();

      if (!targetingSet) {
        logger.log('Setting GUID Targeting: ', guid);

        if (window.AdFuel) {
          window.AdFuel.addPageLevelTarget('guid', guid);
        } else {
          window.googletag.cmd.push(function () {
            window.googletag.pubads().setTargeting('guid', guid);
          });
        }

        logger.log('targetingSet set to true...');
        targetingSet = true;
      }

      resolve(guid);
    });
    preDispatchPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return preDispatchPromise;
  }

  function gdprInit() {
    logger.log('Initializing Module...');

    if (window) {
      window.turner_getGuid = tGetGuid;
    }

    var gdprProcessCookie = function gdprProcessCookie() {
      function registerModuleWithAdFuel() {
        // todo: remove AdFuel.readCookie("ug") once everyone is on new ais.js
        window.AdFuel.registerModule(MODULE_NAME, {
          preDispatchCallback: setGUIDTargeting
        }, MODULE_VERSION, siteConfig.GUID);
        var guid = window.turner_getGuid();
        logger.log('setting guid targeting', {
          guid: guid
        });
      }

      if (window.AdFuel) {
        // AdFuel loaded first
        registerModuleWithAdFuel();
      } else {
        // wait for AdFuel to load
        addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
      }
    };

    if (hasCookie('ugs')) {
      gdprProcessCookie();
    } else {
      // execute script to set cookie
      var guidUrl = '//www.ugdturner.com/xd.sjs';
      var a = document;
      var b = a.createElement('script');
      var c = a.getElementsByTagName('script')[0];
      var d = /^(complete|loaded)$/;
      var e = false;
      b.type = 'text/javascript';
      b.async = true;
      b.src = guidUrl;

      b.onload = b.onreadystatechange = function () {
        if (!e && !('readyState' in b && d.test(b.readyState))) {
          b.onload = b.onreadystatechange = null;
          e = true;
          gdprProcessCookie();
        }
      };

      c.parentNode.insertBefore(b, c);
    }
  }

  function processCookie() {
    if (window) {
      window.turner_getGuid = tGetGuid;
    }

    function registerModuleWithAdFuel() {
      // todo: remove AdFuel.readCookie("ug") once everyone is on new ais.js
      window.AdFuel.registerModule(MODULE_NAME, {
        preDispatchCallback: setGUIDTargeting
      }, MODULE_VERSION, siteConfig.GUID);
    }

    if (window.AdFuel) {
      // AdFuel loaded first
      registerModuleWithAdFuel();
    } else {
      // wait for AdFuel to load
      addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
    }
  }

  function init() {
    logger.log('Initializing Module...');

    if (hasCookie('ugs')) {
      processCookie();
    } else {
      // execute script to set cookie
      var guidUrl = '//www.ugdturner.com/xd.sjs';
      var a = document;
      var b = a.createElement('script');
      var c = a.getElementsByTagName('script')[0];
      var d = /^(complete|loaded)$/;
      var e = false;
      b.type = 'text/javascript';
      b.async = true;
      b.src = guidUrl;

      b.onload = b.onreadystatechange = function () {
        if (!e && !('readyState' in b && d.test(b.readyState))) {
          b.onload = b.onreadystatechange = null;
          e = true;
          processCookie();
        }
      };

      c.parentNode.insertBefore(b, c);
    }
  }

  var initialize = function initialize(config) {
    var initPromise = new Promise(function (resolve) {
      logger = getLogger(MODULE_NAME, MODULE_VERSION, 'guid', 'color: #d2b000; padding: 2px', config.GUID.DEBUG);
      logger.log('Initializing GUID Module...');
      var consentRegion = getUserConsentRegion();
      var consentStatus = getConsent(consentTags);
      siteConfig = config;

      if (siteConfig.USER_CONSENT && siteConfig.USER_CONSENT.ENABLED) {
        logger.log('UserConsent Enabled...');

        if (consentRegion === 'gdpr' && !consentStatus) {
          logger.log('Disabling GUID due to User Consent restrictions.');
          enableGuid = false;
        }

        if (enableGuid) {
          // used by freewheel helper
          tGetGuid = function tGetGuid() {
            return readCookie('ug');
          };

          gdprInit();
        }
      } else {
        // used by freewheel helper
        tGetGuid = function tGetGuid() {
          return readCookie('ug');
        };

        init();
      }

      resolve();
    });
    initPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return initPromise;
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              initialize(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                initialize(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      initialize(window.AdFuelOptions);
    }
  }

  var index = {
    init: initialize,
    runAuction: function runAuction() {
      var auctionPromise = new Promise(function (resolve) {
        resolve();
      });
      auctionPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return auctionPromise;
    },
    buildSlot: function buildSlot() {
      var buildPromise = new Promise(function (resolve) {
        setGUIDTargeting();
        resolve();
      });
      buildPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return buildPromise;
    },
    setTargeting: function setTargeting() {
      var targetingPromise = new Promise(function (resolve) {
        resolve();
      });
      targetingPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return targetingPromise;
    },
    __NAME__: MODULE_NAME,
    __VERSION__: MODULE_VERSION
  };
  return index;
}); ////////////////////////////////////////////
// In View Refresh for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.InViewRefresh = factory());
})(void 0, function () {
  'use strict';
  /*
      In-View Refresh Module - Version 4.0.2
      @4.0.0: - Initialization Update for GDPR/CCPA
      @4.0.1: - minor bug - slot.hasInViewRefresh properly set
      @4.0.2: - OptanonLoaded timing fix
  */

  var MODULE_NAME = 'In-View Refresh Module';
  var MODULE_VERSION = 'v4.0.2';
  var addEvent = window.AdFuelUtils.addEvent;
  var getLogger = window.AdFuelUtils.getLogger;
  var logger;
  var initEventSet = false;
  var _refreshableInViewSlots = {};
  var _focused = true;
  var TARGET_DISPLAY_MILLISECONDS;
  var TARGET_DISPLAY_PERCENT;
  var registeredSlots = [];
  var renderedCreativeIds = {};
  var renderedLineItemIds = {};
  var invalidSlotIds = [];
  var _viewabilityListenersStarted = false;

  var startViewabilityListeners = function startViewabilityListeners() {
    if (!_viewabilityListenersStarted) {
      window.googletag.cmd.push(function startViewabilityListeners() {
        window.googletag.pubads().addEventListener('impressionViewable', function impressionViewableFunc(event) {
          var detail = event;
          var divId = detail.slot.getSlotElementId();
          logger.log('Refreshable In View Slots: ', _refreshableInViewSlots);

          if (typeof _refreshableInViewSlots[divId] === 'undefined' || !_refreshableInViewSlots[divId].listenersSet) {
            logger.log('Refreshable In View Slot listeners have not been set: ', divId, {
              object: _refreshableInViewSlots[divId]
            });

            _createInViewRefreshObject(detail);
          } else {
            logger.log('Refreshable In View Slot listeners have already been set for: ', divId, {
              object: _refreshableInViewSlots[divId]
            });
          }
        });
        window.googletag.pubads().addEventListener('slotVisibilityChanged', function slotVisibilityChangedFunc(event) {
          var detail = event;

          _visibilityChanged(detail);
        });
        window.googletag.pubads().addEventListener('slotRenderEnded', function slotRenderEndedFunc(event) {
          var detail = event;
          var divId = detail.slot.getSlotElementId();
          var renderedSize = detail.size ? detail.size.join('x') : '0x0';
          var creativeId = event.creativeId || event.sourceAgnosticCreativeId;
          var lineItemId = event.lineItemId || event.sourceAgnosticLineItemId;
          var creativeIds = renderedCreativeIds[divId] || [];
          var lineItemIds = renderedLineItemIds[divId] || [];
          logger.log('----------Slot: [' + divId + ']----------');
          logger.log('Rendered Size: ', renderedSize);
          logger.log('Creative Ids: ', {
            selected: creativeId,
            "native": event.creativeId,
            agnostic: event.sourceAgnosticCreativeId
          });

          if (creativeIds.indexOf(creativeId) >= 0) {
            delete _refreshableInViewSlots[divId];
            registeredSlots.splice(registeredSlots.indexOf(divId), 1);
            invalidSlotIds.push(divId);
            logger.log('Duplicate Creative [' + creativeId + '] returned for slot [' + divId + '].  Stopping refresh.', registeredSlots);
          } else if (['970x66', '970x90', '970x250'].indexOf(renderedSize) >= 0) {
            delete _refreshableInViewSlots[divId];
            registeredSlots.splice(registeredSlots.indexOf(divId), 1);
            invalidSlotIds.push(divId);
            logger.log('Rendered size [' + renderedSize + '] for slot [' + divId + '] is invalid for IVR.  Stopping refresh.', registeredSlots);
          } else {
            if (creativeId && creativeIds.indexOf(creativeId) < 0) {
              creativeIds.push(creativeId);
            }

            if (lineItemId && lineItemIds.indexOf(lineItemId) < 0) {
              lineItemIds.push(lineItemId);
            }

            renderedCreativeIds[divId] = creativeIds;
            renderedLineItemIds[divId] = lineItemIds;
            logger.log('Rendered Creatives: ', renderedCreativeIds[divId]);
            logger.log('Rendered LineItems: ', renderedLineItemIds[divId]);
          }
        });
      });
      addEvent(document, 'visibilitychange', _visibilityChangeEvent);
      _viewabilityListenersStarted = true;
      logger.log('Listeners Started!');
    }
  };

  var _visibilityChangeEvent = function _visibilityChangeEvent(event) {
    logger.log('Visibility Change Event: ', event);
    logger.log('Relaying to _focusChanged...');
    _focused = !document.hidden;

    _focusChanged();
  };

  var _focusChanged = function _focusChanged() {
    var hidden = document.hidden;

    if (hidden) {
      logger.log('Page is hidden.  Destroying all intervals...');
      destroyInterval();
    } else {
      logger.log('Page is not hidden. Checking Intervals...');
      Object.keys(_refreshableInViewSlots).forEach(function (slotIndex) {
        logger.log({
          index: slotIndex,
          slot: _refreshableInViewSlots[slotIndex]
        });
        var interval = getInterval(slotIndex);

        if (interval) {
          logger.log('Interval exists...', slotIndex); // destroyInterval(slotIndex);
        } else {
          logger.log('Creating Interval...', slotIndex);

          _detectInView();
        }
      });
    }
  };

  var _visibilityChanged = function _visibilityChanged(obj) {
    var percent = obj.inViewPercentage || 0;
    var elementId = obj.slot.getSlotElementId();
    var interval = getInterval(elementId);

    if (percent >= TARGET_DISPLAY_PERCENT) {
      logger.log('Element [' + elementId + '] Meets In-View Percentage Requirements', percent);

      if (_focused) {
        logger.log('... and page has focus');

        if (!interval) {
          logger.log('... interval does not exist. Creating Interval...');
          createInterval(elementId);
        }
      } else {
        logger.log('... but page does not have focus.  Not creating interval.');
      }
    } else {
      logger.log('Element [' + elementId + '] Does NOT Meet In-View Percentage Requirements', percent);

      if (interval) {
        logger.log('Found Interval for Element [' + elementId + ']... Destroying Interval.');
        destroyInterval(elementId);
      }
    }
  };

  var getInterval = function getInterval(elementId) {
    logger.log('Getting Interval for: ', elementId);
    return _refreshableInViewSlots[elementId] && _refreshableInViewSlots[elementId].timer === null ? false : _refreshableInViewSlots[elementId] ? _refreshableInViewSlots[elementId].timer : false;
  };

  var createInterval = function createInterval(elementId) {
    logger.log('Refreshable In-View Slots: ', _refreshableInViewSlots);

    if (_refreshableInViewSlots[elementId]) {
      var slot = _refreshableInViewSlots[elementId];
      slot.inViewRefreshCounter = _refreshableInViewSlots[elementId].inViewRefreshCounter || 0;
      logger.log('Creating Interval for: ', elementId);
      slot.timer = window.setInterval(function () {
        logger.log('Slot: ', slot);

        if (typeof slot !== 'undefined' && slot !== null) {
          if (slot.inViewRefreshCount > 0) {
            slot.el = slot.el || document.getElementById(elementId);
            var elId = slot.el.id;
            slot.inViewRefreshCount--;
            slot.inViewRefreshCounter++;

            if (slot.inViewRefreshCount >= 0) {
              var googleSlot = window.googletag.pubads().getSlots().filter(function (slot) {
                return slot.getSlotElementId() === elId;
              })[0];
              logger.log('GoogleSlot: ', googleSlot);
              logger.log('Slot [' + elId + '] is in view and is being refreshed.');
              logger.log('Starting Targeting Keys: ', googleSlot.getTargetingKeys());
              logger.log('Clearing targeting on slot [' + elId + ']...', slot);
              googleSlot.clearTargeting();
              logger.log('Cleared Targeting Keys: ', googleSlot.getTargetingKeys());
              logger.log('Setting rfv count targeting on slot [' + elId + ']: ', slot.inViewRefreshCounter);
              googleSlot.setTargeting('rfv', slot.inViewRefreshCounter);
              googleSlot.setTargeting('pos', elId.replace('ad_', ''));

              if (invalidSlotIds.indexOf(elId) < 0) {
                logger.log('Calling refresh On slot[' + elId + ']...', slot);
                window.AdFuel.refresh([elId]);
                logger.log('Slot [' + slot.el.id + '] is in view, was just refreshed, and still has ' + slot.inViewRefreshCount + ' refreshes remaining.');
              } else {
                logger.log('Slot [' + slot.el.id + '] is invalid for refresh.');
              }
            }
          } else {
            logger.log('Slot [' + elementId + '] is in view but has no refreshes remaining.', slot, slot.inViewRefreshCount);
          }
        } else {
          logger.log('Slot refresh prevented due to rendered size.');
        }
      }, TARGET_DISPLAY_MILLISECONDS);
      logger.log('Done.');
    }
  };

  var destroyInterval = function destroyInterval(elementId) {
    var slot;

    if (elementId) {
      logger.log('Destroying interval for: ', elementId);
      slot = _refreshableInViewSlots[elementId];
      window.clearInterval(slot.timer);
      slot.timer = null;
      slot.inView = false;
    } else {
      logger.log('Destroying All Intervals');
      Object.keys(_refreshableInViewSlots).forEach(function (slotIndex) {
        logger.log('Destroying interval for: ', slotIndex);
        slot = _refreshableInViewSlots[slotIndex];
        window.clearInterval(slot.timer);
        slot.timer = null;
        slot.inView = false;
      });
    }
  };

  var _createInViewRefreshObject = function _createInViewRefreshObject(event) {
    logger.log('Checking Element: ', {
      event: event
    });
    var divId = event.slot.getSlotElementId();
    var el = document.getElementById(divId);

    if (registeredSlots.indexOf(divId) !== -1 && _refreshableInViewSlots[divId]) {
      logger.log('Slot is registered with InView Refresh');
      _refreshableInViewSlots[divId].inView = false;
      _refreshableInViewSlots[divId].el = el; // _refreshableInViewSlots[divId].mouseover = _refreshableInViewSlots[divId].mouseover || addEvent(el, 'mouseover', _mouseoverFunction);
      // _refreshableInViewSlots[divId].mouseout = _refreshableInViewSlots[divId].mouseout || addEvent(el, 'mouseout', _mouseoutFunction);

      _refreshableInViewSlots[divId].refreshCount = 0;
      _refreshableInViewSlots[divId].listenersSet = true;
    } else {
      logger.log('Slot is NOT registered with InView Refresh');
    }
  };

  var _isInsideBounds = function _isInsideBounds(clientX1, clientX2, clientY1, clientY2, elX1, elX2, elY1, elY2) {
    var a = Math.max(clientY1, elY1); // 287

    var b = Math.min(clientY2, elY2); // 377

    var c = Math.max(clientX1, elX1); // 587.5

    var d = Math.min(clientX2, elX2); // 1315.5

    var viewableArea = 0;
    var aCheck = a >= clientY1 && a <= clientY2;
    var bCheck = b >= clientY1 && b <= clientY2;
    var cCheck = c >= clientX1 && c <= clientX2;
    var dCheck = d >= clientX1 && d <= clientX2;

    if (aCheck && bCheck && cCheck && dCheck) {
      viewableArea = (b - a) * (d - c);
    }

    var elArea = (elX2 - elX1) * (elY2 - elY1);
    var ratioArea = 0;

    if (elArea > 0) {
      ratioArea = viewableArea / elArea;
    }

    return ratioArea;
  };

  var _getPercentInView = function _getPercentInView(el) {
    var clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    var clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
    var clientX1 = window.pageXOffset || document.body.scrollLeft || document.documentElement.scrollLeft;
    var clientY1 = window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;
    clientWidth = parseInt(clientWidth, 10);
    clientHeight = parseInt(clientHeight, 10);
    clientX1 = parseInt(clientX1, 10);
    clientY1 = parseInt(clientY1, 10);
    var elWidth = parseInt(el.clientWidth);
    var elHeight = parseInt(el.clientHeight);
    var elXy = el.getBoundingClientRect();
    var elX1 = elXy.left + document.body.scrollLeft;
    var elY1 = elXy.top + document.body.scrollTop;
    var elX2 = elX1 + elWidth;
    var elY2 = elY1 + elHeight;
    var clientX2 = clientX1 + clientWidth;
    var clientY2 = clientY1 + clientHeight;

    var viewablePercent = _isInsideBounds(clientX1, clientX2, clientY1, clientY2, elX1, elX2, elY1, elY2);

    return viewablePercent * 100;
  };

  var _detectInView = function _detectInView() {
    logger.log('Detecting In View Slots.');

    if (_refreshableInViewSlots.length < 1) {
      logger.log('No registered slots have been rendered yet.');
    }

    Object.keys(_refreshableInViewSlots).forEach(function (divId) {
      var slot = _refreshableInViewSlots[divId];
      var el = slot.el || document.getElementById(divId);
      var viewTest = false;

      if (el) {
        viewTest = el && _focused && _getPercentInView(el) >= TARGET_DISPLAY_PERCENT && parseInt(_refreshableInViewSlots[divId].inViewRefreshCount) > 0;
      }

      var interval = getInterval(divId);

      if (viewTest && !interval) {
        createInterval(divId);
      }
    });
  };

  var preQueueCallbackForIVR = function preQueueCallbackForIVR(asset) {
    var preQueuePromise = new Promise(function (resolve) {
      var startListeners = false;
      logger.time('IVR Pre-Queue Process Start');

      for (var x = 0; x < asset.length; x++) {
        var slot = asset[x];
        slot.hasInViewRefresh = slot.hasInViewRefresh === 'true' || false;

        if (slot.hasInViewRefresh === true) {
          logger.log('Slot has In-View Refresh...');
          slot.inViewRefreshCounter = 0;
          startListeners = true;
          registeredSlots.push(slot.rktr_slot_id);
        }
      }

      if (startListeners) {
        logger.log('Starting IVR Listeners...');
        startViewabilityListeners();
      }

      logger.timeEnd('IVR Pre-Queue Process Start');
      resolve();
    });
    preQueuePromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return preQueuePromise;
  };

  var preDispatchCallbackForIVR = function preDispatchCallbackForIVR(queue) {
    var preDispatchPromise = new Promise(function (resolve) {
      for (var qId = 0; qId < queue.length; qId++) {
        var rocketeerSlot = queue[qId];

        if (rocketeerSlot.hasInViewRefresh === true) {
          logger.log('Slot is configured for in view refresh.  Creating refresh object for slot [' + rocketeerSlot.rktr_slot_id + ']');
          _refreshableInViewSlots[rocketeerSlot.rktr_slot_id] = rocketeerSlot;
        } else {
          logger.log('Slot is not configured for in view refresh. [' + rocketeerSlot.rktr_slot_id + ']');
        }
      }

      resolve();
    });
    preDispatchPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return preDispatchPromise;
  };

  var registerModuleWithAdFuel = function registerModuleWithAdFuel(config) {
    window.AdFuelUtils = window.AdFuelUtils || {};
    window.AdFuelUtils.startViewabilityListeners = startViewabilityListeners;
    window.AdFuel.registerModule('In View Refresh', {
      preQueueCallback: preQueueCallbackForIVR,
      preDispatchCallback: preDispatchCallbackForIVR
    }, MODULE_VERSION, config);
  };

  var init = function init(siteConfig) {
    logger = getLogger(MODULE_NAME, MODULE_VERSION, 'ivr', 'color: #00e1e1; padding: 2px', siteConfig.IVR.DEBUG);
    _focused = typeof document !== 'undefined' ? !document.hidden : false;
    TARGET_DISPLAY_MILLISECONDS = siteConfig.IVR.DEFAULT_DISPLAY_MILLISECONDS;
    TARGET_DISPLAY_PERCENT = siteConfig.IVR.DEFAULT_DISPLAY_PERCENT;

    if (window.AdFuel) {
      // AdFuel loaded first
      registerModuleWithAdFuel(siteConfig.IVR);
    } else {
      // wait for AdFuel to load
      addEvent(document, 'AdFuelCreated', function () {
        registerModuleWithAdFuel(siteConfig.IVR);
      });
    }
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    init: init,
    preQueueCallback: preQueueCallbackForIVR,
    preDispatchCallback: preDispatchCallbackForIVR,
    buildSlot: function buildSlot(slotData) {
      var buildPromise = new Promise(function (resolve) {
        preQueueCallbackForIVR(slotData);
      });
      buildPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return buildPromise;
    },
    runAuction: function runAuction() {
      var auctionPromise = new Promise(function (resolve) {
        resolve();
      });
      auctionPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return auctionPromise;
    },
    setTargeting: function setTargeting(slotData) {
      var targetingPromise = new Promise(function (resolve) {
        startViewabilityListeners();
        preDispatchCallbackForIVR(slotData);
      });
      targetingPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return targetingPromise;
    },
    startViewabilityListeners: startViewabilityListeners,
    __NAME__: MODULE_NAME,
    __VERSION__: MODULE_VERSION
  };
  return index;
}); ////////////////////////////////////////////
// Integral Ad Science for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.IAS = factory());
})(void 0, function () {
  'use strict';
  /*
      Integral Ad Science Module - Version 4.0.4
      @4.0.0: - Initialization Update for GDPR/CCPA
      @4.0.1: - Unresolving promise fix?
      @4.0.2: - Split request/targeting
      @4.0.3: - Updated video targeting response to include `custom` targeting
      @4.0.4: - OptanonLoaded timing fix
       ------------------------------------------------------
      GDPR Status: Blocked
      CCPA Status: Allowed
  */

  var MODULE_NAME = 'Integral Ad Science Module';
  var MODULE_VERSION = 'v4.0.4';
  var isIntl = window.AdFuelUtils.isIntl;
  var getLogger = window.AdFuelUtils.getLogger;
  var getUserConsentRegion = window.AdFuelUtils.getUserConsentRegion;
  var getConsent = window.AdFuelUtils.getConsent;
  var addEvent = window.AdFuelUtils.addEvent;
  var logger;
  var iasActive = false;
  var initEventSet = false;
  var DOMESTIC_PUB_ID = 0;
  var INTERNATIONAL_PUB_ID = 0;
  var registeredSlots = {}; // Added new variable to detect unique slots

  var getTargetingForVideo = function getTargetingForVideo() {
    var ssid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'cnn.com_politics_carousel_t1';
    var videoTargetingPromise = new Promise(function (resolve, reject) {
      logger.log('Getting Video targeting...');
      var videoSlot = {
        adSlotId: 'video1',
        size: [1, 1],
        type: 'video',
        adUnitPath: ssid || ''
      };

      window.__iasPET.queue.push({
        adSlots: [videoSlot],
        dataHandler: function dataHandler(targeting) {
          if (!targeting) {
            logger.warn('No IAS Targeting For Video');
            reject(new Error('No Targeting Returned'));
          }

          try {
            var parsedTargeting = JSON.parse(targeting);

            var response = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, parsedTargeting), parsedTargeting.brandSafety), parsedTargeting.slots.video1), parsedTargeting.custom);

            delete response.brandSafety;
            delete response.slots;
            delete response.custom;
            logger.log('IAS Video Targeting', response);
            resolve(response);
          } catch (err) {
            logger.error('Error Parsing IAS Targeting: ', err);
            reject(err);
          }
        }
      });
    });
    videoTargetingPromise.id = 'IAS Video Targeting Promise';
    return videoTargetingPromise;
  };

  var preQueueCallback = function preQueueCallback(asset) {
    window.AdFuelUtils.IASFallbackTimeout = window.AdFuelUtils.IASFallbackTimeout || [];
    var preQueuePromise = new Promise(function (resolve) {
      logger.log('Building slots for IAS...', asset);
      var adSlots = [];
      var queueId = '0';
      var promiseResolved = false;

      if (Array.isArray(asset) && asset.length > 0) {
        for (var x = 0; x < asset.length; x++) {
          if (!registeredSlots[asset[x].rktr_slot_id] && asset[x].rktr_slot_id !== 'page' && asset[x].sizes.length > 0) {
            registeredSlots[asset[x].rktr_slot_id] = true;
            queueId = asset[x].queue_id;
            logger.log('Pushing Slot: ', {
              adSlotId: asset[x].rktr_slot_id,
              size: asset[x].sizes.map(function (size) {
                return size[0] === 'fluid' ? [1, 1] : size;
              }),
              adUnitPath: '/8663477/' + asset[x].rktr_ad_id
            }, queueId);
            adSlots.push({
              adSlotId: asset[x].rktr_slot_id,
              size: asset[x].sizes.map(function (size) {
                return size[0] === 'fluid' ? [1, 1] : size;
              }),
              adUnitPath: '/8663477/' + asset[x].rktr_ad_id
            });
          }
        }
      } else {
        if (asset && asset.sizes && asset.sizes.length > 0) {
          queueId = asset.queue_id;
          adSlots.push({
            adSlotId: asset.rktr_slot_id,
            size: asset.sizes.map(function (size) {
              return size[0] === 'fluid' ? [1, 1] : size;
            }),
            adUnitPath: '/8663477/' + asset.rktr_ad_id
          });
        }
      }

      if (adSlots.length > 0) {
        window.AdFuelUtils.IASFallbackTimeout[queueId] = setTimeout(function () {
          if (!promiseResolved) {
            delete window.AdFuelUtils.IASFallbackTimeout[queueId];
            resolve({
              msg: 'Fallback timeout',
              queueId: queueId
            });
            promiseResolved = true;
          }
        }, window.AdFuelUtils.isMobile.any ? window.AdFuelOptions.ADFUEL.DEFAULT_MOBILE_TIMEOUT : window.AdFuelOptions.ADFUEL.DEFAULT_DESKTOP_TIMEOUT);

        window.__iasPET.queue.push({
          adSlots: adSlots,
          dataHandler: function dataHandler(targeting) {
            if (!targeting) {
              logger.warn('No IAS Targeting', queueId);

              if (!promiseResolved) {
                clearTimeout(window.AdFuelUtils.IASFallbackTimeout[queueId]);
                delete window.AdFuelUtils.IASFallbackTimeout[queueId];
                resolve({
                  msg: 'No IAS Targeting',
                  queueId: queueId
                });
                promiseResolved = true;
              }
            }

            var parsedTargeting = targeting;

            try {
              parsedTargeting = JSON.parse(targeting);
            } catch (err) {
              logger.error('Error Parsing IAS Targeting: ', err, queueId, targeting);
            }

            logger.log('Setting IAS Targeting...', parsedTargeting, queueId);

            window.__iasPET.setTargetingForGPT();

            if (!promiseResolved) {
              clearTimeout(window.AdFuelUtils.IASFallbackTimeout[queueId]);
              delete window.AdFuelUtils.IASFallbackTimeout[queueId];
              resolve(targeting, queueId);
              promiseResolved = true;
            }
          }
        });

        if (window.__iasPET.queue.length > 0 && typeof window.__iasPET.start === 'function') {
          logger.log('Manually starting IAS queue processes for queue: ', queueId);

          window.__iasPET.start();
        }
      } else {
        if (!promiseResolved) {
          resolve({
            msg: 'No Ad Slots',
            queueId: queueId
          });
          promiseResolved = true;
        }
      }
    });
    preQueuePromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return preQueuePromise;
  };

  var registerModuleWithAdFuel = function registerModuleWithAdFuel(config) {
    if (iasActive) {
      window.AdFuelVideoAPI = window.AdFuelVideoAPI || {};
      window.AdFuelVideoAPI.IAS = window.IASVideoAPI = {
        getTargetingForVideo: getTargetingForVideo
      };
      logger.log('Registering module with AdFuel');
      window.AdFuel.registerModule(MODULE_NAME, {
        preQueueCallback: preQueueCallback,
        preRefreshCallback: preQueueCallback
      }, MODULE_VERSION, config.IAS);
    }
  };

  var addIASJavascript = function addIASJavascript(config) {
    logger.log('Adding IAS script to head...');
    var iasTag = document.createElement('script');
    iasTag.async = true;
    iasTag.src = '//cdn.adsafeprotected.com/iasPET.1.js';
    var targetNode = document.getElementsByTagName('head')[0];
    targetNode.insertBefore(iasTag, targetNode.firstChild);
    iasActive = true;
    var pubId = isIntl() ? config.IAS.ACCOUNT_IDS.INTL : config.IAS.ACCOUNT_IDS.DOM;
    logger.log('Pub Ids: ', DOMESTIC_PUB_ID, INTERNATIONAL_PUB_ID);
    logger.log('Setting iasPET.pubId: ', pubId);
    window.__iasPET.pubId = pubId; // Set IAS publisher ID before pushing to the queue
  };

  var init = function init(config) {
    var initPromise = new Promise(function (resolve) {
      logger = getLogger(MODULE_NAME, MODULE_VERSION, 'ias', 'color: #d2b000; padding: 2px', config.IAS.DEBUG);
      logger.log('Initializing Module...');
      window.__iasPET = window.__iasPET || {};
      window.__iasPET.queue = window.__iasPET.queue || [];
      var consentRegion = getUserConsentRegion();
      var consentStatus = getConsent();

      if (config.USER_CONSENT && config.USER_CONSENT.ENABLED) {
        if (consentRegion === 'gdpr' && !consentStatus) {
          logger.log('Disabling IAS due to GDPR restrictions.');
        } else {
          addIASJavascript(config);

          if (window.AdFuel && window.AdFuel.cmd) {
            // AdFuel loaded first
            window.AdFuel.cmd.push(registerModuleWithAdFuel);
          } else if (window.AdFuel) {
            registerModuleWithAdFuel(config);
          } else {
            addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
          }
        }
      } else {
        addIASJavascript(config);
        getTargetingForVideo();

        if (window.AdFuel && window.AdFuel.cmd) {
          // AdFuel loaded first
          window.AdFuel.cmd.push(registerModuleWithAdFuel);
        } else if (window.AdFuel) {
          registerModuleWithAdFuel(config);
        } else {
          addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
        }
      }

      resolve();
    });
    initPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return initPromise;
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    init: init,
    getTargetingForVideo: getTargetingForVideo,
    preQueueCallback: preQueueCallback,
    buildSlot: function buildSlot(slotData) {
      var buildPromise = new Promise(function (resolve) {
        preQueueCallback(slotData);
      });
      buildPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return buildPromise;
    },
    runAuction: function runAuction() {
      var auctionPromise = new Promise(function (resolve) {
        resolve();
      });
      auctionPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return auctionPromise;
    },
    setTargeting: function setTargeting(slotData) {
      var targetingPromise = new Promise(function (resolve) {
        resolve();
      });
      targetingPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return targetingPromise;
    },
    __NAME__: MODULE_NAME,
    __VERSION__: MODULE_VERSION
  };
  return index;
}); ////////////////////////////////////////////
// Krux for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.Krux = factory());
})(void 0, function () {
  'use strict';

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function unwrapExports(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }

  function createCommonjsModule(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }

  var isMobile = createCommonjsModule(function (module) {
    (function (global) {
      var apple_phone = /iPhone/i,
          apple_ipod = /iPod/i,
          apple_tablet = /iPad/i,
          android_phone = /\bAndroid(?:.+)Mobile\b/i,
          // Match 'Android' AND 'Mobile'
      android_tablet = /Android/i,
          amazon_phone = /\bAndroid(?:.+)SD4930UR\b/i,
          amazon_tablet = /\bAndroid(?:.+)(?:KF[A-Z]{2,4})\b/i,
          windows_phone = /Windows Phone/i,
          windows_tablet = /\bWindows(?:.+)ARM\b/i,
          // Match 'Windows' AND 'ARM'
      other_blackberry = /BlackBerry/i,
          other_blackberry_10 = /BB10/i,
          other_opera = /Opera Mini/i,
          other_chrome = /\b(CriOS|Chrome)(?:.+)Mobile/i,
          other_firefox = /Mobile(?:.+)Firefox\b/i; // Match 'Mobile' AND 'Firefox'

      function match(regex, userAgent) {
        return regex.test(userAgent);
      }

      function isMobile(userAgent) {
        var ua = userAgent || (typeof navigator !== 'undefined' ? navigator.userAgent : ''); // Facebook mobile app's integrated browser adds a bunch of strings that
        // match everything. Strip it out if it exists.

        var tmp = ua.split('[FBAN');

        if (typeof tmp[1] !== 'undefined') {
          ua = tmp[0];
        } // Twitter mobile app's integrated browser on iPad adds a "Twitter for
        // iPhone" string. Same probably happens on other tablet platforms.
        // This will confuse detection so strip it out if it exists.


        tmp = ua.split('Twitter');

        if (typeof tmp[1] !== 'undefined') {
          ua = tmp[0];
        }

        var result = {
          apple: {
            phone: match(apple_phone, ua) && !match(windows_phone, ua),
            ipod: match(apple_ipod, ua),
            tablet: !match(apple_phone, ua) && match(apple_tablet, ua) && !match(windows_phone, ua),
            device: (match(apple_phone, ua) || match(apple_ipod, ua) || match(apple_tablet, ua)) && !match(windows_phone, ua)
          },
          amazon: {
            phone: match(amazon_phone, ua),
            tablet: !match(amazon_phone, ua) && match(amazon_tablet, ua),
            device: match(amazon_phone, ua) || match(amazon_tablet, ua)
          },
          android: {
            phone: !match(windows_phone, ua) && match(amazon_phone, ua) || !match(windows_phone, ua) && match(android_phone, ua),
            tablet: !match(windows_phone, ua) && !match(amazon_phone, ua) && !match(android_phone, ua) && (match(amazon_tablet, ua) || match(android_tablet, ua)),
            device: !match(windows_phone, ua) && (match(amazon_phone, ua) || match(amazon_tablet, ua) || match(android_phone, ua) || match(android_tablet, ua)) || match(/\bokhttp\b/i, ua)
          },
          windows: {
            phone: match(windows_phone, ua),
            tablet: match(windows_tablet, ua),
            device: match(windows_phone, ua) || match(windows_tablet, ua)
          },
          other: {
            blackberry: match(other_blackberry, ua),
            blackberry10: match(other_blackberry_10, ua),
            opera: match(other_opera, ua),
            firefox: match(other_firefox, ua),
            chrome: match(other_chrome, ua),
            device: match(other_blackberry, ua) || match(other_blackberry_10, ua) || match(other_opera, ua) || match(other_firefox, ua) || match(other_chrome, ua)
          }
        };
        result.any = result.apple.device || result.android.device || result.windows.device || result.other.device, // excludes 'other' devices and ipods, targeting touchscreen phones
        result.phone = result.apple.phone || result.android.phone || result.windows.phone, result.tablet = result.apple.tablet || result.android.tablet || result.windows.tablet;
        return result;
      }

      if (module.exports && typeof window === 'undefined') {
        // Node.js
        module.exports = isMobile;
      } else if (module.exports && typeof window !== 'undefined') {
        // Browserify
        module.exports = isMobile();
        module.exports.isMobile = isMobile;
      } else {
        global.isMobile = isMobile();
      }
    })(commonjsGlobal);
  });
  var isMobile_1 = isMobile.isMobile;
  var semver = createCommonjsModule(function (module, exports) {
    exports = module.exports = SemVer;
    var debug;
    /* istanbul ignore next */

    if ((typeof process === "undefined" ? "undefined" : _typeof4(process)) === 'object' && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG)) {
      debug = function debug() {
        var args = Array.prototype.slice.call(arguments, 0);
        args.unshift('SEMVER');
        console.log.apply(console, args);
      };
    } else {
      debug = function debug() {};
    } // Note: this is the semver.org version of the spec that it implements
    // Not necessarily the package version of this code.


    exports.SEMVER_SPEC_VERSION = '2.0.0';
    var MAX_LENGTH = 256;
    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
    /* istanbul ignore next */
    9007199254740991; // Max safe segment length for coercion.

    var MAX_SAFE_COMPONENT_LENGTH = 16; // The actual regexps go on exports.re

    var re = exports.re = [];
    var src = exports.src = [];
    var R = 0; // The following Regular Expressions can be used for tokenizing,
    // validating, and parsing SemVer version strings.
    // ## Numeric Identifier
    // A single `0`, or a non-zero digit followed by zero or more digits.

    var NUMERICIDENTIFIER = R++;
    src[NUMERICIDENTIFIER] = '0|[1-9]\\d*';
    var NUMERICIDENTIFIERLOOSE = R++;
    src[NUMERICIDENTIFIERLOOSE] = '[0-9]+'; // ## Non-numeric Identifier
    // Zero or more digits, followed by a letter or hyphen, and then zero or
    // more letters, digits, or hyphens.

    var NONNUMERICIDENTIFIER = R++;
    src[NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*'; // ## Main Version
    // Three dot-separated numeric identifiers.

    var MAINVERSION = R++;
    src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\.' + '(' + src[NUMERICIDENTIFIER] + ')';
    var MAINVERSIONLOOSE = R++;
    src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')'; // ## Pre-release Version Identifier
    // A numeric identifier, or a non-numeric identifier.

    var PRERELEASEIDENTIFIER = R++;
    src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';
    var PRERELEASEIDENTIFIERLOOSE = R++;
    src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')'; // ## Pre-release Version
    // Hyphen, followed by one or more dot-separated pre-release version
    // identifiers.

    var PRERELEASE = R++;
    src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\.' + src[PRERELEASEIDENTIFIER] + ')*))';
    var PRERELEASELOOSE = R++;
    src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'; // ## Build Metadata Identifier
    // Any combination of digits, letters, or hyphens.

    var BUILDIDENTIFIER = R++;
    src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'; // ## Build Metadata
    // Plus sign, followed by one or more period-separated build metadata
    // identifiers.

    var BUILD = R++;
    src[BUILD] = '(?:\\+(' + src[BUILDIDENTIFIER] + '(?:\\.' + src[BUILDIDENTIFIER] + ')*))'; // ## Full Version String
    // A main version, followed optionally by a pre-release version and
    // build metadata.
    // Note that the only major, minor, patch, and pre-release sections of
    // the version string are capturing groups.  The build metadata is not a
    // capturing group, because it should not ever be used in version
    // comparison.

    var FULL = R++;
    var FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';
    src[FULL] = '^' + FULLPLAIN + '$'; // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
    // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
    // common in the npm registry.

    var LOOSEPLAIN = '[v=\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';
    var LOOSE = R++;
    src[LOOSE] = '^' + LOOSEPLAIN + '$';
    var GTLT = R++;
    src[GTLT] = '((?:<|>)?=?)'; // Something like "2.*" or "1.2.x".
    // Note that "x.x" is a valid xRange identifer, meaning "any version"
    // Only the first item is strictly required.

    var XRANGEIDENTIFIERLOOSE = R++;
    src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\*';
    var XRANGEIDENTIFIER = R++;
    src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\*';
    var XRANGEPLAIN = R++;
    src[XRANGEPLAIN] = '[v=\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';
    var XRANGEPLAINLOOSE = R++;
    src[XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';
    var XRANGE = R++;
    src[XRANGE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAIN] + '$';
    var XRANGELOOSE = R++;
    src[XRANGELOOSE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAINLOOSE] + '$'; // Coercion.
    // Extract anything that could conceivably be a part of a valid semver

    var COERCE = R++;
    src[COERCE] = '(?:^|[^\\d])' + '(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' + '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:$|[^\\d])'; // Tilde ranges.
    // Meaning is "reasonably at or greater than"

    var LONETILDE = R++;
    src[LONETILDE] = '(?:~>?)';
    var TILDETRIM = R++;
    src[TILDETRIM] = '(\\s*)' + src[LONETILDE] + '\\s+';
    re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');
    var tildeTrimReplace = '$1~';
    var TILDE = R++;
    src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';
    var TILDELOOSE = R++;
    src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'; // Caret ranges.
    // Meaning is "at least and backwards compatible with"

    var LONECARET = R++;
    src[LONECARET] = '(?:\\^)';
    var CARETTRIM = R++;
    src[CARETTRIM] = '(\\s*)' + src[LONECARET] + '\\s+';
    re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');
    var caretTrimReplace = '$1^';
    var CARET = R++;
    src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';
    var CARETLOOSE = R++;
    src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'; // A simple gt/lt/eq thing, or just "" to indicate "any version"

    var COMPARATORLOOSE = R++;
    src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\s*(' + LOOSEPLAIN + ')$|^$';
    var COMPARATOR = R++;
    src[COMPARATOR] = '^' + src[GTLT] + '\\s*(' + FULLPLAIN + ')$|^$'; // An expression to strip any whitespace between the gtlt and the thing
    // it modifies, so that `> 1.2.3` ==> `>1.2.3`

    var COMPARATORTRIM = R++;
    src[COMPARATORTRIM] = '(\\s*)' + src[GTLT] + '\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'; // this one has to use the /g flag

    re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');
    var comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`
    // Note that these all use the loose form, because they'll be
    // checked against either the strict or loose comparator form
    // later.

    var HYPHENRANGE = R++;
    src[HYPHENRANGE] = '^\\s*(' + src[XRANGEPLAIN] + ')' + '\\s+-\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\s*$';
    var HYPHENRANGELOOSE = R++;
    src[HYPHENRANGELOOSE] = '^\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\s+-\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\s*$'; // Star ranges basically just allow anything at all.

    var STAR = R++;
    src[STAR] = '(<|>)?=?\\s*\\*'; // Compile to actual regexp objects.
    // All are flag-free, unless they were created above with a flag.

    for (var i = 0; i < R; i++) {
      debug(i, src[i]);

      if (!re[i]) {
        re[i] = new RegExp(src[i]);
      }
    }

    exports.parse = parse;

    function parse(version, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (version instanceof SemVer) {
        return version;
      }

      if (typeof version !== 'string') {
        return null;
      }

      if (version.length > MAX_LENGTH) {
        return null;
      }

      var r = options.loose ? re[LOOSE] : re[FULL];

      if (!r.test(version)) {
        return null;
      }

      try {
        return new SemVer(version, options);
      } catch (er) {
        return null;
      }
    }

    exports.valid = valid;

    function valid(version, options) {
      var v = parse(version, options);
      return v ? v.version : null;
    }

    exports.clean = clean;

    function clean(version, options) {
      var s = parse(version.trim().replace(/^[=v]+/, ''), options);
      return s ? s.version : null;
    }

    exports.SemVer = SemVer;

    function SemVer(version, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (version instanceof SemVer) {
        if (version.loose === options.loose) {
          return version;
        } else {
          version = version.version;
        }
      } else if (typeof version !== 'string') {
        throw new TypeError('Invalid Version: ' + version);
      }

      if (version.length > MAX_LENGTH) {
        throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');
      }

      if (!(this instanceof SemVer)) {
        return new SemVer(version, options);
      }

      debug('SemVer', version, options);
      this.options = options;
      this.loose = !!options.loose;
      var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);

      if (!m) {
        throw new TypeError('Invalid Version: ' + version);
      }

      this.raw = version; // these are actually numbers

      this.major = +m[1];
      this.minor = +m[2];
      this.patch = +m[3];

      if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
        throw new TypeError('Invalid major version');
      }

      if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
        throw new TypeError('Invalid minor version');
      }

      if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
        throw new TypeError('Invalid patch version');
      } // numberify any prerelease numeric ids


      if (!m[4]) {
        this.prerelease = [];
      } else {
        this.prerelease = m[4].split('.').map(function (id) {
          if (/^[0-9]+$/.test(id)) {
            var num = +id;

            if (num >= 0 && num < MAX_SAFE_INTEGER) {
              return num;
            }
          }

          return id;
        });
      }

      this.build = m[5] ? m[5].split('.') : [];
      this.format();
    }

    SemVer.prototype.format = function () {
      this.version = this.major + '.' + this.minor + '.' + this.patch;

      if (this.prerelease.length) {
        this.version += '-' + this.prerelease.join('.');
      }

      return this.version;
    };

    SemVer.prototype.toString = function () {
      return this.version;
    };

    SemVer.prototype.compare = function (other) {
      debug('SemVer.compare', this.version, this.options, other);

      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      }

      return this.compareMain(other) || this.comparePre(other);
    };

    SemVer.prototype.compareMain = function (other) {
      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      }

      return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);
    };

    SemVer.prototype.comparePre = function (other) {
      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      } // NOT having a prerelease is > having one


      if (this.prerelease.length && !other.prerelease.length) {
        return -1;
      } else if (!this.prerelease.length && other.prerelease.length) {
        return 1;
      } else if (!this.prerelease.length && !other.prerelease.length) {
        return 0;
      }

      var i = 0;

      do {
        var a = this.prerelease[i];
        var b = other.prerelease[i];
        debug('prerelease compare', i, a, b);

        if (a === undefined && b === undefined) {
          return 0;
        } else if (b === undefined) {
          return 1;
        } else if (a === undefined) {
          return -1;
        } else if (a === b) {
          continue;
        } else {
          return compareIdentifiers(a, b);
        }
      } while (++i);
    }; // preminor will bump the version up to the next minor release, and immediately
    // down to pre-release. premajor and prepatch work the same way.


    SemVer.prototype.inc = function (release, identifier) {
      switch (release) {
        case 'premajor':
          this.prerelease.length = 0;
          this.patch = 0;
          this.minor = 0;
          this.major++;
          this.inc('pre', identifier);
          break;

        case 'preminor':
          this.prerelease.length = 0;
          this.patch = 0;
          this.minor++;
          this.inc('pre', identifier);
          break;

        case 'prepatch':
          // If this is already a prerelease, it will bump to the next version
          // drop any prereleases that might already exist, since they are not
          // relevant at this point.
          this.prerelease.length = 0;
          this.inc('patch', identifier);
          this.inc('pre', identifier);
          break;
        // If the input is a non-prerelease version, this acts the same as
        // prepatch.

        case 'prerelease':
          if (this.prerelease.length === 0) {
            this.inc('patch', identifier);
          }

          this.inc('pre', identifier);
          break;

        case 'major':
          // If this is a pre-major version, bump up to the same major version.
          // Otherwise increment major.
          // 1.0.0-5 bumps to 1.0.0
          // 1.1.0 bumps to 2.0.0
          if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
            this.major++;
          }

          this.minor = 0;
          this.patch = 0;
          this.prerelease = [];
          break;

        case 'minor':
          // If this is a pre-minor version, bump up to the same minor version.
          // Otherwise increment minor.
          // 1.2.0-5 bumps to 1.2.0
          // 1.2.1 bumps to 1.3.0
          if (this.patch !== 0 || this.prerelease.length === 0) {
            this.minor++;
          }

          this.patch = 0;
          this.prerelease = [];
          break;

        case 'patch':
          // If this is not a pre-release version, it will increment the patch.
          // If it is a pre-release it will bump up to the same patch version.
          // 1.2.0-5 patches to 1.2.0
          // 1.2.0 patches to 1.2.1
          if (this.prerelease.length === 0) {
            this.patch++;
          }

          this.prerelease = [];
          break;
        // This probably shouldn't be used publicly.
        // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.

        case 'pre':
          if (this.prerelease.length === 0) {
            this.prerelease = [0];
          } else {
            var i = this.prerelease.length;

            while (--i >= 0) {
              if (typeof this.prerelease[i] === 'number') {
                this.prerelease[i]++;
                i = -2;
              }
            }

            if (i === -1) {
              // didn't increment anything
              this.prerelease.push(0);
            }
          }

          if (identifier) {
            // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
            // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
            if (this.prerelease[0] === identifier) {
              if (isNaN(this.prerelease[1])) {
                this.prerelease = [identifier, 0];
              }
            } else {
              this.prerelease = [identifier, 0];
            }
          }

          break;

        default:
          throw new Error('invalid increment argument: ' + release);
      }

      this.format();
      this.raw = this.version;
      return this;
    };

    exports.inc = inc;

    function inc(version, release, loose, identifier) {
      if (typeof loose === 'string') {
        identifier = loose;
        loose = undefined;
      }

      try {
        return new SemVer(version, loose).inc(release, identifier).version;
      } catch (er) {
        return null;
      }
    }

    exports.diff = diff;

    function diff(version1, version2) {
      if (eq(version1, version2)) {
        return null;
      } else {
        var v1 = parse(version1);
        var v2 = parse(version2);
        var prefix = '';

        if (v1.prerelease.length || v2.prerelease.length) {
          prefix = 'pre';
          var defaultResult = 'prerelease';
        }

        for (var key in v1) {
          if (key === 'major' || key === 'minor' || key === 'patch') {
            if (v1[key] !== v2[key]) {
              return prefix + key;
            }
          }
        }

        return defaultResult; // may be undefined
      }
    }

    exports.compareIdentifiers = compareIdentifiers;
    var numeric = /^[0-9]+$/;

    function compareIdentifiers(a, b) {
      var anum = numeric.test(a);
      var bnum = numeric.test(b);

      if (anum && bnum) {
        a = +a;
        b = +b;
      }

      return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;
    }

    exports.rcompareIdentifiers = rcompareIdentifiers;

    function rcompareIdentifiers(a, b) {
      return compareIdentifiers(b, a);
    }

    exports.major = major;

    function major(a, loose) {
      return new SemVer(a, loose).major;
    }

    exports.minor = minor;

    function minor(a, loose) {
      return new SemVer(a, loose).minor;
    }

    exports.patch = patch;

    function patch(a, loose) {
      return new SemVer(a, loose).patch;
    }

    exports.compare = compare;

    function compare(a, b, loose) {
      return new SemVer(a, loose).compare(new SemVer(b, loose));
    }

    exports.compareLoose = compareLoose;

    function compareLoose(a, b) {
      return compare(a, b, true);
    }

    exports.rcompare = rcompare;

    function rcompare(a, b, loose) {
      return compare(b, a, loose);
    }

    exports.sort = sort;

    function sort(list, loose) {
      return list.sort(function (a, b) {
        return exports.compare(a, b, loose);
      });
    }

    exports.rsort = rsort;

    function rsort(list, loose) {
      return list.sort(function (a, b) {
        return exports.rcompare(a, b, loose);
      });
    }

    exports.gt = gt;

    function gt(a, b, loose) {
      return compare(a, b, loose) > 0;
    }

    exports.lt = lt;

    function lt(a, b, loose) {
      return compare(a, b, loose) < 0;
    }

    exports.eq = eq;

    function eq(a, b, loose) {
      return compare(a, b, loose) === 0;
    }

    exports.neq = neq;

    function neq(a, b, loose) {
      return compare(a, b, loose) !== 0;
    }

    exports.gte = gte;

    function gte(a, b, loose) {
      return compare(a, b, loose) >= 0;
    }

    exports.lte = lte;

    function lte(a, b, loose) {
      return compare(a, b, loose) <= 0;
    }

    exports.cmp = cmp;

    function cmp(a, op, b, loose) {
      switch (op) {
        case '===':
          if (_typeof4(a) === 'object') a = a.version;
          if (_typeof4(b) === 'object') b = b.version;
          return a === b;

        case '!==':
          if (_typeof4(a) === 'object') a = a.version;
          if (_typeof4(b) === 'object') b = b.version;
          return a !== b;

        case '':
        case '=':
        case '==':
          return eq(a, b, loose);

        case '!=':
          return neq(a, b, loose);

        case '>':
          return gt(a, b, loose);

        case '>=':
          return gte(a, b, loose);

        case '<':
          return lt(a, b, loose);

        case '<=':
          return lte(a, b, loose);

        default:
          throw new TypeError('Invalid operator: ' + op);
      }
    }

    exports.Comparator = Comparator;

    function Comparator(comp, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (comp instanceof Comparator) {
        if (comp.loose === !!options.loose) {
          return comp;
        } else {
          comp = comp.value;
        }
      }

      if (!(this instanceof Comparator)) {
        return new Comparator(comp, options);
      }

      debug('comparator', comp, options);
      this.options = options;
      this.loose = !!options.loose;
      this.parse(comp);

      if (this.semver === ANY) {
        this.value = '';
      } else {
        this.value = this.operator + this.semver.version;
      }

      debug('comp', this);
    }

    var ANY = {};

    Comparator.prototype.parse = function (comp) {
      var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
      var m = comp.match(r);

      if (!m) {
        throw new TypeError('Invalid comparator: ' + comp);
      }

      this.operator = m[1];

      if (this.operator === '=') {
        this.operator = '';
      } // if it literally is just '>' or '' then allow anything.


      if (!m[2]) {
        this.semver = ANY;
      } else {
        this.semver = new SemVer(m[2], this.options.loose);
      }
    };

    Comparator.prototype.toString = function () {
      return this.value;
    };

    Comparator.prototype.test = function (version) {
      debug('Comparator.test', version, this.options.loose);

      if (this.semver === ANY) {
        return true;
      }

      if (typeof version === 'string') {
        version = new SemVer(version, this.options);
      }

      return cmp(version, this.operator, this.semver, this.options);
    };

    Comparator.prototype.intersects = function (comp, options) {
      if (!(comp instanceof Comparator)) {
        throw new TypeError('a Comparator is required');
      }

      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      var rangeTmp;

      if (this.operator === '') {
        rangeTmp = new Range(comp.value, options);
        return satisfies(this.value, rangeTmp, options);
      } else if (comp.operator === '') {
        rangeTmp = new Range(this.value, options);
        return satisfies(comp.semver, rangeTmp, options);
      }

      var sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');
      var sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');
      var sameSemVer = this.semver.version === comp.semver.version;
      var differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');
      var oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');
      var oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');
      return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;
    };

    exports.Range = Range;

    function Range(range, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (range instanceof Range) {
        if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {
          return range;
        } else {
          return new Range(range.raw, options);
        }
      }

      if (range instanceof Comparator) {
        return new Range(range.value, options);
      }

      if (!(this instanceof Range)) {
        return new Range(range, options);
      }

      this.options = options;
      this.loose = !!options.loose;
      this.includePrerelease = !!options.includePrerelease; // First, split based on boolean or ||

      this.raw = range;
      this.set = range.split(/\s*\|\|\s*/).map(function (range) {
        return this.parseRange(range.trim());
      }, this).filter(function (c) {
        // throw out any that are not relevant for whatever reason
        return c.length;
      });

      if (!this.set.length) {
        throw new TypeError('Invalid SemVer Range: ' + range);
      }

      this.format();
    }

    Range.prototype.format = function () {
      this.range = this.set.map(function (comps) {
        return comps.join(' ').trim();
      }).join('||').trim();
      return this.range;
    };

    Range.prototype.toString = function () {
      return this.range;
    };

    Range.prototype.parseRange = function (range) {
      var loose = this.options.loose;
      range = range.trim(); // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`

      var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];
      range = range.replace(hr, hyphenReplace);
      debug('hyphen replace', range); // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`

      range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);
      debug('comparator trim', range, re[COMPARATORTRIM]); // `~ 1.2.3` => `~1.2.3`

      range = range.replace(re[TILDETRIM], tildeTrimReplace); // `^ 1.2.3` => `^1.2.3`

      range = range.replace(re[CARETTRIM], caretTrimReplace); // normalize spaces

      range = range.split(/\s+/).join(' '); // At this point, the range is completely trimmed and
      // ready to be split into comparators.

      var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
      var set = range.split(' ').map(function (comp) {
        return parseComparator(comp, this.options);
      }, this).join(' ').split(/\s+/);

      if (this.options.loose) {
        // in loose mode, throw out any that are not valid comparators
        set = set.filter(function (comp) {
          return !!comp.match(compRe);
        });
      }

      set = set.map(function (comp) {
        return new Comparator(comp, this.options);
      }, this);
      return set;
    };

    Range.prototype.intersects = function (range, options) {
      if (!(range instanceof Range)) {
        throw new TypeError('a Range is required');
      }

      return this.set.some(function (thisComparators) {
        return thisComparators.every(function (thisComparator) {
          return range.set.some(function (rangeComparators) {
            return rangeComparators.every(function (rangeComparator) {
              return thisComparator.intersects(rangeComparator, options);
            });
          });
        });
      });
    }; // Mostly just for testing and legacy API reasons


    exports.toComparators = toComparators;

    function toComparators(range, options) {
      return new Range(range, options).set.map(function (comp) {
        return comp.map(function (c) {
          return c.value;
        }).join(' ').trim().split(' ');
      });
    } // comprised of xranges, tildes, stars, and gtlt's at this point.
    // already replaced the hyphen ranges
    // turn into a set of JUST comparators.


    function parseComparator(comp, options) {
      debug('comp', comp, options);
      comp = replaceCarets(comp, options);
      debug('caret', comp);
      comp = replaceTildes(comp, options);
      debug('tildes', comp);
      comp = replaceXRanges(comp, options);
      debug('xrange', comp);
      comp = replaceStars(comp, options);
      debug('stars', comp);
      return comp;
    }

    function isX(id) {
      return !id || id.toLowerCase() === 'x' || id === '*';
    } // ~, ~> --> * (any, kinda silly)
    // ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
    // ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
    // ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
    // ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
    // ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0


    function replaceTildes(comp, options) {
      return comp.trim().split(/\s+/).map(function (comp) {
        return replaceTilde(comp, options);
      }).join(' ');
    }

    function replaceTilde(comp, options) {
      var r = options.loose ? re[TILDELOOSE] : re[TILDE];
      return comp.replace(r, function (_, M, m, p, pr) {
        debug('tilde', comp, _, M, m, p, pr);
        var ret;

        if (isX(M)) {
          ret = '';
        } else if (isX(m)) {
          ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
        } else if (isX(p)) {
          // ~1.2 == >=1.2.0 <1.3.0
          ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
        } else if (pr) {
          debug('replaceTilde pr', pr);
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';
        } else {
          // ~1.2.3 == >=1.2.3 <1.3.0
          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';
        }

        debug('tilde return', ret);
        return ret;
      });
    } // ^ --> * (any, kinda silly)
    // ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
    // ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
    // ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
    // ^1.2.3 --> >=1.2.3 <2.0.0
    // ^1.2.0 --> >=1.2.0 <2.0.0


    function replaceCarets(comp, options) {
      return comp.trim().split(/\s+/).map(function (comp) {
        return replaceCaret(comp, options);
      }).join(' ');
    }

    function replaceCaret(comp, options) {
      debug('caret', comp, options);
      var r = options.loose ? re[CARETLOOSE] : re[CARET];
      return comp.replace(r, function (_, M, m, p, pr) {
        debug('caret', comp, _, M, m, p, pr);
        var ret;

        if (isX(M)) {
          ret = '';
        } else if (isX(m)) {
          ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
        } else if (isX(p)) {
          if (M === '0') {
            ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
          } else {
            ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';
          }
        } else if (pr) {
          debug('replaceCaret pr', pr);

          if (M === '0') {
            if (m === '0') {
              ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + m + '.' + (+p + 1);
            } else {
              ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';
            }
          } else {
            ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + (+M + 1) + '.0.0';
          }
        } else {
          debug('no pr');

          if (M === '0') {
            if (m === '0') {
              ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);
            } else {
              ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';
            }
          } else {
            ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';
          }
        }

        debug('caret return', ret);
        return ret;
      });
    }

    function replaceXRanges(comp, options) {
      debug('replaceXRanges', comp, options);
      return comp.split(/\s+/).map(function (comp) {
        return replaceXRange(comp, options);
      }).join(' ');
    }

    function replaceXRange(comp, options) {
      comp = comp.trim();
      var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];
      return comp.replace(r, function (ret, gtlt, M, m, p, pr) {
        debug('xRange', comp, ret, gtlt, M, m, p, pr);
        var xM = isX(M);
        var xm = xM || isX(m);
        var xp = xm || isX(p);
        var anyX = xp;

        if (gtlt === '=' && anyX) {
          gtlt = '';
        }

        if (xM) {
          if (gtlt === '>' || gtlt === '<') {
            // nothing is allowed
            ret = '<0.0.0';
          } else {
            // nothing is forbidden
            ret = '*';
          }
        } else if (gtlt && anyX) {
          // we know patch is an x, because we have any x at all.
          // replace X with 0
          if (xm) {
            m = 0;
          }

          p = 0;

          if (gtlt === '>') {
            // >1 => >=2.0.0
            // >1.2 => >=1.3.0
            // >1.2.3 => >= 1.2.4
            gtlt = '>=';

            if (xm) {
              M = +M + 1;
              m = 0;
              p = 0;
            } else {
              m = +m + 1;
              p = 0;
            }
          } else if (gtlt === '<=') {
            // <=0.7.x is actually <0.8.0, since any 0.7.x should
            // pass.  Similarly, <=7.x is actually <8.0.0, etc.
            gtlt = '<';

            if (xm) {
              M = +M + 1;
            } else {
              m = +m + 1;
            }
          }

          ret = gtlt + M + '.' + m + '.' + p;
        } else if (xm) {
          ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
        } else if (xp) {
          ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
        }

        debug('xRange return', ret);
        return ret;
      });
    } // Because * is AND-ed with everything else in the comparator,
    // and '' means "any version", just remove the *s entirely.


    function replaceStars(comp, options) {
      debug('replaceStars', comp, options); // Looseness is ignored here.  star is always as loose as it gets!

      return comp.trim().replace(re[STAR], '');
    } // This function is passed to string.replace(re[HYPHENRANGE])
    // M, m, patch, prerelease, build
    // 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
    // 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
    // 1.2 - 3.4 => >=1.2.0 <3.5.0


    function hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {
      if (isX(fM)) {
        from = '';
      } else if (isX(fm)) {
        from = '>=' + fM + '.0.0';
      } else if (isX(fp)) {
        from = '>=' + fM + '.' + fm + '.0';
      } else {
        from = '>=' + from;
      }

      if (isX(tM)) {
        to = '';
      } else if (isX(tm)) {
        to = '<' + (+tM + 1) + '.0.0';
      } else if (isX(tp)) {
        to = '<' + tM + '.' + (+tm + 1) + '.0';
      } else if (tpr) {
        to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;
      } else {
        to = '<=' + to;
      }

      return (from + ' ' + to).trim();
    } // if ANY of the sets match ALL of its comparators, then pass


    Range.prototype.test = function (version) {
      if (!version) {
        return false;
      }

      if (typeof version === 'string') {
        version = new SemVer(version, this.options);
      }

      for (var i = 0; i < this.set.length; i++) {
        if (testSet(this.set[i], version, this.options)) {
          return true;
        }
      }

      return false;
    };

    function testSet(set, version, options) {
      for (var i = 0; i < set.length; i++) {
        if (!set[i].test(version)) {
          return false;
        }
      }

      if (version.prerelease.length && !options.includePrerelease) {
        // Find the set of versions that are allowed to have prereleases
        // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
        // That should allow `1.2.3-pr.2` to pass.
        // However, `1.2.4-alpha.notready` should NOT be allowed,
        // even though it's within the range set by the comparators.
        for (i = 0; i < set.length; i++) {
          debug(set[i].semver);

          if (set[i].semver === ANY) {
            continue;
          }

          if (set[i].semver.prerelease.length > 0) {
            var allowed = set[i].semver;

            if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {
              return true;
            }
          }
        } // Version has a -pre, but it's not one of the ones we like.


        return false;
      }

      return true;
    }

    exports.satisfies = satisfies;

    function satisfies(version, range, options) {
      try {
        range = new Range(range, options);
      } catch (er) {
        return false;
      }

      return range.test(version);
    }

    exports.maxSatisfying = maxSatisfying;

    function maxSatisfying(versions, range, options) {
      var max = null;
      var maxSV = null;

      try {
        var rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }

      versions.forEach(function (v) {
        if (rangeObj.test(v)) {
          // satisfies(v, range, options)
          if (!max || maxSV.compare(v) === -1) {
            // compare(max, v, true)
            max = v;
            maxSV = new SemVer(max, options);
          }
        }
      });
      return max;
    }

    exports.minSatisfying = minSatisfying;

    function minSatisfying(versions, range, options) {
      var min = null;
      var minSV = null;

      try {
        var rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }

      versions.forEach(function (v) {
        if (rangeObj.test(v)) {
          // satisfies(v, range, options)
          if (!min || minSV.compare(v) === 1) {
            // compare(min, v, true)
            min = v;
            minSV = new SemVer(min, options);
          }
        }
      });
      return min;
    }

    exports.minVersion = minVersion;

    function minVersion(range, loose) {
      range = new Range(range, loose);
      var minver = new SemVer('0.0.0');

      if (range.test(minver)) {
        return minver;
      }

      minver = new SemVer('0.0.0-0');

      if (range.test(minver)) {
        return minver;
      }

      minver = null;

      for (var i = 0; i < range.set.length; ++i) {
        var comparators = range.set[i];
        comparators.forEach(function (comparator) {
          // Clone to avoid manipulating the comparator's semver object.
          var compver = new SemVer(comparator.semver.version);

          switch (comparator.operator) {
            case '>':
              if (compver.prerelease.length === 0) {
                compver.patch++;
              } else {
                compver.prerelease.push(0);
              }

              compver.raw = compver.format();

            /* fallthrough */

            case '':
            case '>=':
              if (!minver || gt(minver, compver)) {
                minver = compver;
              }

              break;

            case '<':
            case '<=':
              /* Ignore maximum versions */
              break;

            /* istanbul ignore next */

            default:
              throw new Error('Unexpected operation: ' + comparator.operator);
          }
        });
      }

      if (minver && range.test(minver)) {
        return minver;
      }

      return null;
    }

    exports.validRange = validRange;

    function validRange(range, options) {
      try {
        // Return '*' instead of '' so that truthiness works.
        // This will throw if it's invalid anyway
        return new Range(range, options).range || '*';
      } catch (er) {
        return null;
      }
    } // Determine if version is less than all the versions possible in the range


    exports.ltr = ltr;

    function ltr(version, range, options) {
      return outside(version, range, '<', options);
    } // Determine if version is greater than all the versions possible in the range.


    exports.gtr = gtr;

    function gtr(version, range, options) {
      return outside(version, range, '>', options);
    }

    exports.outside = outside;

    function outside(version, range, hilo, options) {
      version = new SemVer(version, options);
      range = new Range(range, options);
      var gtfn, ltefn, ltfn, comp, ecomp;

      switch (hilo) {
        case '>':
          gtfn = gt;
          ltefn = lte;
          ltfn = lt;
          comp = '>';
          ecomp = '>=';
          break;

        case '<':
          gtfn = lt;
          ltefn = gte;
          ltfn = gt;
          comp = '<';
          ecomp = '<=';
          break;

        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"');
      } // If it satisifes the range it is not outside


      if (satisfies(version, range, options)) {
        return false;
      } // From now on, variable terms are as if we're in "gtr" mode.
      // but note that everything is flipped for the "ltr" function.


      for (var i = 0; i < range.set.length; ++i) {
        var comparators = range.set[i];
        var high = null;
        var low = null;
        comparators.forEach(function (comparator) {
          if (comparator.semver === ANY) {
            comparator = new Comparator('>=0.0.0');
          }

          high = high || comparator;
          low = low || comparator;

          if (gtfn(comparator.semver, high.semver, options)) {
            high = comparator;
          } else if (ltfn(comparator.semver, low.semver, options)) {
            low = comparator;
          }
        }); // If the edge version comparator has a operator then our version
        // isn't outside it

        if (high.operator === comp || high.operator === ecomp) {
          return false;
        } // If the lowest version comparator has an operator and our version
        // is less than it then it isn't higher than the range


        if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {
          return false;
        } else if (low.operator === ecomp && ltfn(version, low.semver)) {
          return false;
        }
      }

      return true;
    }

    exports.prerelease = prerelease;

    function prerelease(version, options) {
      var parsed = parse(version, options);
      return parsed && parsed.prerelease.length ? parsed.prerelease : null;
    }

    exports.intersects = intersects;

    function intersects(r1, r2, options) {
      r1 = new Range(r1, options);
      r2 = new Range(r2, options);
      return r1.intersects(r2);
    }

    exports.coerce = coerce;

    function coerce(version) {
      if (version instanceof SemVer) {
        return version;
      }

      if (typeof version !== 'string') {
        return null;
      }

      var match = version.match(re[COERCE]);

      if (match == null) {
        return null;
      }

      return parse(match[1] + '.' + (match[2] || '0') + '.' + (match[3] || '0'));
    }
  });
  var semver_1 = semver.SEMVER_SPEC_VERSION;
  var semver_2 = semver.re;
  var semver_3 = semver.src;
  var semver_4 = semver.parse;
  var semver_5 = semver.valid;
  var semver_6 = semver.clean;
  var semver_7 = semver.SemVer;
  var semver_8 = semver.inc;
  var semver_9 = semver.diff;
  var semver_10 = semver.compareIdentifiers;
  var semver_11 = semver.rcompareIdentifiers;
  var semver_12 = semver.major;
  var semver_13 = semver.minor;
  var semver_14 = semver.patch;
  var semver_15 = semver.compare;
  var semver_16 = semver.compareLoose;
  var semver_17 = semver.rcompare;
  var semver_18 = semver.sort;
  var semver_19 = semver.rsort;
  var semver_20 = semver.gt;
  var semver_21 = semver.lt;
  var semver_22 = semver.eq;
  var semver_23 = semver.neq;
  var semver_24 = semver.gte;
  var semver_25 = semver.lte;
  var semver_26 = semver.cmp;
  var semver_27 = semver.Comparator;
  var semver_28 = semver.Range;
  var semver_29 = semver.toComparators;
  var semver_30 = semver.satisfies;
  var semver_31 = semver.maxSatisfying;
  var semver_32 = semver.minSatisfying;
  var semver_33 = semver.minVersion;
  var semver_34 = semver.validRange;
  var semver_35 = semver.ltr;
  var semver_36 = semver.gtr;
  var semver_37 = semver.outside;
  var semver_38 = semver.prerelease;
  var semver_39 = semver.intersects;
  var semver_40 = semver.coerce;
  /* global fetch, localStorage */

  var MODULE_NAME = 'Ad Utilities';
  var MODULE_VERSION = 'v4.0.5';
  var objectProto = Object.prototype;
  var toString = objectProto.toString;

  var noop = function noop() {};

  var cdnRoot = function cdnRoot() {
    return typeof document !== 'undefined' && document.location !== 'undefined' && document.location.hostname !== 'undefined' && document.location.hostname !== '' ? document.location.hostname.indexOf('cnn.com') >= 0 ? 'cdn.cnn.com' : 'i.cdn.turner.com' : 'i.cdn.turner.com';
  };

  var isFunction = function isFunction(object) {
    return toString.call(object) === '[object Function]';
  };

  var getUMTOCookies = function getUMTOCookies() {
    var FreewheelNetwork = document.location.pathname.indexOf('/dev/') > 0 || document.location.pathname.indexOf('/qa/') > 0 ? '42448' : '48804';
    logger.log('getting UMTO cookies');
    return (readCookie('bea4') ? '_fw_vcid2=' + FreewheelNetwork + ':' + readCookie('bea4') : readCookie('bea4r') ? '_fw_vcid2=' + FreewheelNetwork + ':' + readCookie('bea4r') : '') + (readCookie('kxuser') ? '&krux_user=' + readCookie('kxuser') : '') + (readCookie('zwmc') ? '&zwmc=' + readCookie('zwmc') : '') + (readCookie('ifyr') ? '&ifyr=' + readCookie('ifyr') : '') + (readCookie('hkgc') ? '&hkgc=' + readCookie('hkgc') : '') + (readCookie('goiz') ? '&goiz=' + readCookie('goiz') : '');
  };

  var isObject = function isObject(object) {
    var type = _typeof4(object);

    return (type === 'function' || type === 'object') && !!object;
  };

  var getURLParam = function getURLParam(name) {
    if (typeof document === 'undefined') {
      return '';
    }

    var nameParam = name.replace(/[[]/, '\\[').replace(/[\]]/, '\\]');
    var regexS = '[\\?&]' + nameParam + '=([^&#]*)';
    var regex = new RegExp(regexS);

    if (document && document.location && document.location.search) {
      var results = regex.exec(document.location.search);

      if (results) {
        return results[1];
      }

      return '';
    }

    return '';
  };

  var hasCookie = function hasCookie(name) {
    if (typeof window === 'undefined') return false;

    if (document && document.cookie) {
      logger.log('found?', document.cookie.indexOf('; ' + name + '=') >= 0 || document.cookie.indexOf(name + '=') === 0);
      return document.cookie.indexOf('; ' + name + '=') >= 0 || document.cookie.indexOf(name + '=') === 0;
    }

    return false;
  };

  var getViewport = function getViewport() {
    var viewportWidth;
    var viewportHeight;

    if (typeof window !== 'undefined' && window && typeof window.innerWidth !== 'undefined') {
      viewportWidth = window.innerWidth;
      viewportHeight = window.innerHeight;
    } else if (typeof document !== 'undefined' && document && typeof document.documentElement !== 'undefined' && typeof document.documentElement.clientWidth !== 'undefined' && document.documentElement.clientWidth !== 0) {
      viewportWidth = document.documentElement.clientWidth;
      viewportHeight = document.documentElement.clientHeight;
    } else {
      viewportWidth = document.getElementsByTagName('body')[0].clientWidth;
      viewportHeight = document.getElementsByTagName('body')[0].clientHeight;
    }

    return [viewportWidth, viewportHeight];
  };

  var getBrowser = function getBrowser() {
    logger.time('Getting Browser Information');
    var ua = navigator.userAgent;
    var tem;
    var M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];

    if (/trident/i.test(M[1])) {
      tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
      return 'IE ' + (tem[1] || '');
    }

    if (M[1] === 'Chrome') {
      tem = ua.match(/\b(OPR|Edge)\/(\d+)/);

      if (tem !== null) {
        return tem.slice(1).join(' ').replace('OPR', 'Opera');
      }
    }

    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?']; // eslint-disable-next-line

    if ((tem = ua.match(/version\/(\d+)/i)) !== null) M.splice(1, 1, tem[1]);
    logger.timeEnd('Getting Browser Information');
    return M.join(' ');
  };

  var readCookie = function readCookie(name) {
    var readTheCookie = function readTheCookie(key) {
      if (typeof document === 'undefined' || !document.cookie) {
        // there is no cookie, so go no further
        return null;
      } // there is a cookie


      return document.cookie.match(RegExp(key + '=.*?;')) ? document.cookie.match(RegExp(key + '=.*?;'))[0].replace(RegExp(key + '=|;', 'g'), '') : null;
    };

    var lsSupport = false;
    var data = null; // Check for native support

    if (typeof localStorage !== 'undefined') {
      lsSupport = true;
    } // No value supplied, return value


    if (typeof value === 'undefined') {
      // Get value
      if (lsSupport) {
        // Native support
        data = localStorage.getItem(name);
      }

      if (!lsSupport || data === null) {
        // Use cookie
        data = readTheCookie(name);
      }
    }

    return data;
  };

  var emptyTarget = function emptyTarget(value) {
    return Array.isArray(value) ? [] : {};
  };

  var deepmerge = function deepmerge(target, source, optionsArgument) {
    var array = Array.isArray(source);
    var options = optionsArgument || {
      arrayMerge: combineMerge
    };
    var arrayMerge = options.arrayMerge || combineMerge;

    if (array) {
      return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument);
    } else {
      return mergeObject(target, source, optionsArgument);
    }
  };

  var combineMerge = function combineMerge(target, source, options) {
    var destination = target.slice();
    source.forEach(function (e, i) {
      if (typeof destination[i] === 'undefined') {
        var cloneRequested = clone !== false;
        var shouldClone = cloneRequested && isMergeableObject(e);
        destination[i] = shouldClone ? deepmerge(emptyTarget(e), e, options) : e;
      } else if (isMergeableObject(e)) {
        destination[i] = merge(target[i], e);
      } else if (target.indexOf(e) === -1) {
        destination.push(e);
      }
    });
    return destination;
  };

  var isMergeableObject = function isMergeableObject(val) {
    var nonNullObject = val && _typeof4(val) === 'object';
    return nonNullObject && Object.prototype.toString.call(val) !== '[object RegExp]' && Object.prototype.toString.call(val) !== '[object Date]';
  };

  var cloneIfNecessary = function cloneIfNecessary(value, optionsArgument) {
    var clone = optionsArgument && optionsArgument.clone === true;
    return clone && isMergeableObject(value) ? deepmerge(emptyTarget(value), value, optionsArgument) : value;
  };

  var mergeObject = function mergeObject(target, source, optionsArgument) {
    var destination = {};

    if (isMergeableObject(target)) {
      Object.keys(target).forEach(function (key) {
        destination[key] = cloneIfNecessary(target[key], optionsArgument);
      });
    }

    Object.keys(source).forEach(function (key) {
      if (!isMergeableObject(source[key]) || !target[key]) {
        destination[key] = cloneIfNecessary(source[key], optionsArgument);
      } else {
        destination[key] = deepmerge(target[key], source[key], optionsArgument);
      }
    });
    return destination;
  };

  deepmerge.all = function (array, optionsArgument) {
    if (!Array.isArray(array) || array.length < 2) {
      throw new Error('first argument should be an array with at least two elements');
    } // we are sure there are at least 2 values, so it is safe to have no initial value


    return array.reduce(function (prev, next) {
      return deepmerge(prev, next, optionsArgument);
    });
  };

  var mergeDeep = function mergeDeep(target, source) {
    return deepmerge(target, source);
  };

  var countryCode = readCookie('countryCode') || (readCookie('CG') ? readCookie('CG').substr(0, 2) : '');
  var appId = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwbGF0Zm9ybSI6IndlYiIsInByb2R1Y3QiOiJhZGZ1ZWwiLCJuZXR3b3JrIjoiY25uIiwiYXBwSWQiOiJjbm4tYWRmdWVsLXdlYi14bWQ2dTkifQ.N-lYZh_mvCV2gChDusNhd85B2BD7AiCIcNY2Gr5Rc6c';
  var locationServiceURL = 'https://geo.ngtv.io/locate?appId=' + appId;

  var getLocation = function getLocation() {
    return new Promise(function (resolve, reject) {
      fetch(locationServiceURL).then(function (resp) {
        resolve(resp.json());
      })["catch"](function (err) {
        reject(new Error("Could not get user location: ".concat(err)));
      });
    });
  };

  var selectedEdition = readCookie('SelectedEdition') ? readCookie('SelectedEdition') : 'www';
  var monetizedSizes = ['160x600', '300x250', '300x600', '320x50', '728x90', '970x90', '970x250'];
  var invalidMappings = ['_ns_', '_nfs_'];
  var invalidAdUnitSegments = [];
  var invalidAdUnits = ['CNN/health', 'CNN/health/healthgrades', 'CNN/health/leaf', 'CNN/health/list', 'CNN/health/photos', 'CNN/health/specials', 'CNN/health/video', 'CNN/student-news'];

  var getLogger = function getLogger(moduleName, moduleVersion, logKey, style, override) {
    var log = noop;
    var info = noop;
    var warn = noop;
    var time = noop;
    var timeEnd = noop;
    var group = noop;
    var groupEnd = noop;
    var error = noop;
    var inGroup = false;
    var tag;
    var styleFinal = style || '';
    var logKeyFinal = logKey || moduleName.toLowerCase();
    var debug = getURLParam('debug').split(',');
    var debugTest = isObject(console) && isFunction(console.log) && (debug[0] === 'true' || debug.indexOf(logKeyFinal.toLowerCase()) >= 0);
    if (override) debugTest = true;

    if (debugTest) {
      log = function log() {
        for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
          args[_key7] = arguments[_key7];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.log.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.log.apply(console, tag);
        }
      };

      info = function info() {
        for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
          args[_key8] = arguments[_key8];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.info.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.info.apply(console, tag);
        }
      };

      warn = function warn() {
        for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
          args[_key9] = arguments[_key9];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.warn.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.warn.apply(console, tag);
        }
      };

      error = function error() {
        for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
          args[_key10] = arguments[_key10];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.error.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.error.apply(console, tag);
        }
      };

      group = function group(groupName) {
        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] - START', styleFinal, groupName];
          inGroup = true;
          console.log.apply(console, tag);
        }
      };

      groupEnd = function groupEnd(groupName) {
        tag = ['%c[' + moduleName + ' ' + moduleVersion + '] - END', styleFinal, groupName];
        inGroup = false;

        try {
          console.log.apply(console, tag);
        } catch (err) {// Do Nothing
        }
      };

      time = function time(timeTag) {
        var timeKey = '[' + moduleName + ' ' + moduleVersion + '] - ' + timeTag;
        group(timeTag);
        addMark(timeKey + '-Start');
        console.time(timeKey);
      };

      timeEnd = function timeEnd(timeTag) {
        var timeKey = '[' + moduleName + ' ' + moduleVersion + '] - ' + timeTag;
        addMark(timeKey + '-End');
        addMeasure(timeKey, timeKey + '-Start', timeKey + '-End');
        groupEnd(timeTag);
        console.timeEnd(timeKey);
      };
    }

    var logger = {
      log: log,
      info: info,
      warn: warn,
      error: error,
      time: time,
      timeEnd: timeEnd,
      group: group,
      groupEnd: groupEnd
    };
    return logger;
  };

  var hostname = '';

  var setHostAndPathNames = function setHostAndPathNames() {
    var parser = typeof document !== 'undefined' ? document.createElement('a') : {
      href: '',
      hostname: '',
      pathname: ''
    };
    parser.href = typeof document !== 'undefined' ? document.location.href : '';
    hostname = parser.hostname;
  };

  var logger = getLogger(MODULE_NAME, MODULE_VERSION, 'utils', 'color: coral; padding: 2px');

  var addEvent = function addEvent(element, event, fn) {
    if (element.addEventListener) {
      element.addEventListener(event, fn, true);
    } else if (element.attachEvent) {
      element.attachEvent('on' + event, fn);
    }
  };

  var bind = function bind(fn, context) {
    for (var _len11 = arguments.length, args = new Array(_len11 > 2 ? _len11 - 2 : 0), _key11 = 2; _key11 < _len11; _key11++) {
      args[_key11 - 2] = arguments[_key11];
    }

    if (!isFunction(fn)) {
      throw new TypeError('Bind must be called on a function');
    }

    return function bound() {
      return fn.apply(context, args.concat(Array.prototype.slice.call(arguments)));
    };
  };
  /* eslint-disable-next-line */


  var re = /(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()\[\]\.,;:\s@\"]+\.)+[^<>()\[\]\.,;:\s@\"]{2,})/i;

  var piiIsPresentInQueryString = function piiIsPresentInQueryString() {
    if (document.location.search) {
      var dirtyResults = document.location.search.search(re) + 1;
      var cleanResults;

      try {
        cleanResults = decodeURIComponent(document.location.search).search(re) + 1;
      } catch (err) {
        cleanResults = dirtyResults;
      }

      return dirtyResults === 1 || cleanResults === 1;
    }

    return false;
  };

  var piiIsPresentInHash = function piiIsPresentInHash() {
    if (document.location.hash) {
      var dirtyResults = document.location.hash.search(re) + 1;
      var cleanResults;

      try {
        cleanResults = decodeURIComponent(document.location.hash).search(re) + 1;
      } catch (err) {
        cleanResults = dirtyResults;
      }

      return dirtyResults || cleanResults;
    }

    return false;
  };

  var piiIsPresentInReferrer = function piiIsPresentInReferrer() {
    if (document.referrer) {
      var dirtyResults = document.referrer.search(re) + 1;
      var cleanResults;

      try {
        cleanResults = decodeURIComponent(document.location.referrer).search(re) + 1;
      } catch (err) {
        cleanResults = dirtyResults;
      }

      return dirtyResults || cleanResults;
    }

    return false;
  };

  var piiIsPresent = function piiIsPresent() {
    return piiIsPresentInQueryString() || piiIsPresentInHash() || piiIsPresentInReferrer();
  };

  var filterDFPRequest = function filterDFPRequest() {
    if (piiIsPresentInQueryString() || piiIsPresentInHash() || piiIsPresentInReferrer()) {
      if (typeof window !== 'undefined' && window.AdFuel) {
        logger.log('Filtering DFP Request due to PII in query string.');
        var AdFuelMethods = Object.getOwnPropertyNames(window.AdFuel);

        for (var x = 0; x < AdFuelMethods.length; x++) {
          window.AdFuel[AdFuelMethods[x]] = function filteredAdFuelMethod() {};
        }

        window.googletag = null;
      }

      return true;
    }

    return false;
  };

  var piiFilter = {
    qs: piiIsPresentInQueryString,
    hash: piiIsPresentInHash,
    ref: piiIsPresentInReferrer,
    isPIIPresent: piiIsPresent,
    filter: filterDFPRequest
  };
  var consentStatus = false;
  var consentChecked = false;
  var gdprApplies = false;

  var getFullConsentState = function getFullConsentState() {
    return window.WM.UserConsent.getConsentState();
  };

  var getConsentVersion = function getConsentVersion() {
    return window.WM.UserConsent.getConsentVersion();
  };

  var getConsentString = function getConsentString() {
    var consentString = '';

    if (hasCookie('eupubconsent')) {
      logger.log('Getting Consent Object from cookie...');
      consentString = readCookie('eupubconsent');
    } else {
      if (typeof window !== 'undefined' && window.__tcfapi && typeof window.__tcfapi === 'function') {
        logger.log('Getting Consent Object from __tcfapi...');

        window.__tcfapi('getTCData', 2, function (tcData, success) {
          if (success) {
            return tcData.tcString;
          } else {
            return '';
          }
        });
      } else if (typeof window !== 'undefined' && window.__cmp && typeof window.__cmp === 'function') {
        logger.log('Getting Consent Object from __cmp...');

        window.__cmp('getVendorConsents', null, function (result) {
          consentString = result.metadata;
        });
      }
    }

    logger.log('Returning consent string...', consentString);
    return consentString;
  };

  var getConsent = function getConsent() {
    var consentStates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['data-store', 'ads-contextual', 'ads-person-prof', 'ads-person', 'vendor'];
    if (consentChecked) return consentStatus;
    var consentVersion = '1.3.6';

    try {
      consentVersion = window.WM.UserConsent.getVersion();
    } catch (err) {
      logger.warn('Running Older UserConsent - Please Update!');
    }

    logger.log('UserConsent Version: ', consentVersion);
    consentStatus = window.WM ? window.WM.UserConsent.isReady() ? semver.satisfies(consentVersion, '>=2.0.0') ? window.WM.UserConsent.inUserConsentState(consentStates) : window.WM.UserConsent.inUserConsentState(['ads-general', 'ads-vendor']) : true : true;
    logger.log('Consent Granted: ', consentStatus);
    var region = getUserConsentRegion();

    if (region === 'ccpa' && getURLParam('renderStatic') !== '') {
      logger.log('Render Static: ', getURLParam('renderStatic'));
      logger.log('Using override for Static Ad Rendering...');
      consentStatus = false;
    } else {
      logger.log('Not overriding for static rendering...');
    }

    consentChecked = true;
    return consentStatus;
  };

  var getGDPRApplies = function getGDPRApplies() {
    return window.WM.UserConsent.isInGdprRegion();
  };

  var getCCPAApplies = function getCCPAApplies() {
    return window.WM.UserConsent.isInCcpaRegion();
  };

  var getUserConsentRegion = function getUserConsentRegion() {
    return window.WM ? window.WM.UserConsent.getRegion() : '';
  };

  var monetizedSlots = {};

  var isMonetized = function isMonetized(slot) {
    var rktrSlotId = slot.rktr_slot_id;
    logger.group('Checking Monetization for: ' + rktrSlotId);
    var rktrAdId = slot.rktr_ad_id;
    var responsive = slot.responsive;
    var sizes = slot.sizes;

    if (typeof monetizedSlots[rktrSlotId] !== 'undefined') {
      logger.log('Slot already monetized.', monetizedSlots[rktrSlotId]);
      logger.groupEnd('Checking Monetization for: ' + rktrSlotId);
      return monetizedSlots[rktrSlotId];
    }

    var slotId = rktrSlotId;

    if (slotId === 'page') {
      logger.log('Skipping Page-Level Object.');
      logger.groupEnd('Checking Monetization for: ' + rktrSlotId);
      monetizedSlots[slotId] = {
        isMonetized: false,
        filteredSizes: []
      };
      return {
        isMonetized: false,
        filteredSizes: []
      };
    }

    var monetized = true;
    var viewportChecked = false;
    var browser = getViewport();
    var responsiveSizes = [];
    var filteredSizes = [];
    invalidMappings.forEach(function forEachMap(invalidMapping) {
      if (slotId.indexOf(invalidMapping) > 0) {
        logger.log('Slot includes invalid mapping: ', invalidMapping);
        monetizedSlots[slotId] = false;
        monetized = false;
      }
    });
    invalidAdUnitSegments.forEach(function forEachSegment(invalidAdUnitSegment) {
      if (rktrAdId && rktrAdId.indexOf(invalidAdUnitSegment) >= 0) {
        logger.log('Slot contains an invalid Ad Unit segment: ', invalidAdUnitSegment);
        monetized = false;
      }
    });
    invalidAdUnits.forEach(function forEachAdUnit(invalidAdUnit) {
      if (rktrAdId === invalidAdUnit) {
        logger.log('Slot uses an invalid Ad Unit: ', invalidAdUnit);
        monetized = false;
      }
    });

    if (responsive && responsive.length > 0) {
      responsive.map(function (viewport) {
        if (!viewportChecked && parseInt(viewport[0][0], 10) < browser[0] && parseInt(viewport[0][1], 10) < browser[1]) {
          viewportChecked = true;
          logger.log('Checking Responsive Sizes: ', viewport, browser);
          responsiveSizes = viewport[1];

          if (viewport[1][0] === 'suppress' || responsiveSizes === 'suppress') {
            logger.log('Slot is suppressed: ', viewport[1][0], responsiveSizes);
            monetized = false;
          }
        }

        return viewport;
      });
    }

    filteredSizes = monetized && responsiveSizes.length > 0 ? responsiveSizes : sizes;

    if (monetized) {
      filteredSizes = filteredSizes.filter(function sizeFilter(size) {
        var retSize = size;

        if (retSize !== 'suppress') {
          retSize = retSize.join('x');
        }

        return monetizedSizes.indexOf(retSize) !== -1;
      });
    }

    if (filteredSizes.length === 0) {
      logger.log('Slot contains no monetized sizes.', filteredSizes);
      monetizedSlots[slotId] = false;
      monetized = false;
    }

    logger.log('Slot is Monetized: ', monetized);
    logger.groupEnd('Checking Monetization for: ' + rktrSlotId);
    monetizedSlots[slotId] = {
      isMonetized: monetized,
      filteredSizes: filteredSizes
    };
    return {
      isMonetized: monetized,
      filteredSizes: filteredSizes
    };
  };

  var hasOwn = function hasOwn(object, key) {
    return object !== null && Object.prototype.hasOwnProperty.call(object, key);
  };

  var once = function once(fn) {
    return function () {
      if (fn) {
        fn.apply(this, arguments); // eslint-disable-next-line

        fn = null;
      }
    };
  };

  var keyMap = function () {
    var map = {};

    var has = function has(id) {
      return id in map;
    };

    var addKey = function addKey(id, key) {
      if (!has(id)) {
        map[id] = [];
      }

      map[id].push(key);
    };

    var getKeys = function getKeys(id) {
      return has(id) ? Array.prototype.slice.call(map[id]) : [];
    };

    var clearKeys = function clearKeys(id) {
      if (has(id)) {
        map[id].length = 0;
        return true;
      }

      return false;
    };

    return {
      has: has,
      clearKeys: clearKeys,
      getKeys: getKeys,
      addKey: addKey
    };
  }();

  var roundFloat = function roundFloat(value, toNearest, fixed) {
    return (Math.ceil(value / toNearest) * toNearest).toFixed(fixed);
  };

  var generateCacheBuster = function generateCacheBuster() {
    // return_<9-digit-random-hex>
    var cb = '';

    for (var i = 0; i < 10; i++) {
      cb += Math.floor(Math.random() * 9).toString();
    }

    return cb;
  };

  var debounce = function debounce(func, wait, immediate) {
    var timeout;
    return function () {
      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {
        args[_key12] = arguments[_key12];
      }

      var context = this;

      var later = function later() {
        timeout = null;
        if (!immediate) func.apply(context, args);
      };

      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) func.apply(context, args);
    };
  };

  var clone = function clone(obj) {
    // Handle the 3 simple types, and null or undefined
    if (obj === null || _typeof4(obj) !== 'object') return obj; // Handle Date

    if (obj instanceof Date) {
      var copyDate = new Date();
      copyDate.setTime(obj.getTime());
      return copyDate;
    } // Handle Array


    if (obj instanceof Array) {
      var copyArray = [];

      for (var i = 0, len = obj.length; i < len; i++) {
        copyArray[i] = clone(obj[i]);
      }

      return copyArray;
    } // Handle Object


    if (obj instanceof Object) {
      var copyObject = {};
      Object.keys(obj).forEach(function (attr) {
        copyObject[attr] = clone(obj[attr]);
      });
      return copyObject;
    }

    throw new Error("Unable to copy obj! Its type isn't supported.");
  };

  var logsSent = false;
  var onCNNE = false;

  var isIntl = function isIntl() {
    var isIntl = false;
    setHostAndPathNames();

    if (getURLParam('isIntl') === 'true') {
      if (!logsSent) {
        logsSent = true;
        logger.log('Faking international site. Using International PubIds.');
      }

      isIntl = true;
    } else if (hostname.search(/^.*(edition|edition-m|arabic)\./) >= 0) {
      if (!logsSent) {
        logsSent = true;
        logger.log('Full international site. Using International PubIds.');
      }

      isIntl = true;
    } else if (countryCode === '' || countryCode === null) {
      if (hostname.search(/^.*(cnnespanol|cnne-test)\./) >= 0) {
        logger.log('Setting isCNNE to `true`');
        onCNNE = true;
        var locationMeta = document && document.querySelectorAll('meta#geo-location-data');

        if (locationMeta && locationMeta.length > 0) {
          if (['US', 'CA'].indexOf(locationMeta[0].dataset.geoCountryCode) >= 0) {
            isIntl = false;
          } else {
            isIntl = true;
          }
        } else {
          if (!logsSent) {
            logsSent = true;
            logger.log('No country code.');
          }
        }
      } else {
        if (!logsSent) {
          logsSent = true;
          logger.log('No country code.');
        }

        isIntl = false;
      }
    } else if (countryCode !== 'US' && countryCode !== 'CA') {
      if (hostname.search(/^.*(money|cnnespanol|cnne-test|\.cnn)\./) >= 0) {
        if (hostname.search(/^.*(money\.cnn)\./) < 0) {
          logger.log('Setting isCNNE to `true`');
          onCNNE = true;
        }

        if (!logsSent) {
          logsSent = true;
          logger.log('International country code. Using International PubIds.');
        }

        isIntl = true;
      } else {
        if (!logsSent) {
          logsSent = true;
          logger.log('International country code but domestic site.');
        }

        isIntl = true;
      }
    } else {
      if (hostname.search(/^.*(cnnespanol|cnne-test)\./) >= 0) {
        if (!logsSent) {
          logger.log('On CNN Espanol... looking for geo-location-data meta tag...');
          logger.log('Setting isCNNE to `true`');
          onCNNE = true;
        }

        locationMeta = document && document.querySelectorAll('meta#geo-location-data');

        if (locationMeta && locationMeta.length > 0) {
          countryCode = locationMeta[0].dataset.geoCountryCode.toUpperCase();

          if (!logsSent) {
            logger.log('Found geo-location-data meta tag with countryCode: ', countryCode);
          }

          if (['US', 'CA'].indexOf(countryCode) >= 0) {
            if (!logsSent) {
              logger.log('Domestic country code. Using Domestic PubIds.');
              logsSent = true;
            }

            isIntl = false;
          } else {
            if (!logsSent) {
              logger.log('International country code. Using International PubIds.');
              logsSent = true;
            }

            isIntl = true;
          }
        } else {
          if (!logsSent) {
            logsSent = true;
            logger.log('No country code. Domestic Site.');
            isIntl = false;
          }
        }
      } else {
        if (!logsSent) {
          logsSent = true;
          logger.log('Domestic site or country code.');
          isIntl = false;
        }
      }
    }

    return isIntl;
  };

  var isCNNE = function isCNNE() {
    isIntl();
    logger.log('Is User on CNN Español? ', onCNNE);
    return onCNNE;
  };

  var merge = function merge(source, mods) {
    var dest = {};
    Object.keys(source).forEach(function (attrname) {
      dest[attrname] = source[attrname];
    });
    Object.keys(mods).forEach(function (attrname) {
      dest[attrname] = mods[attrname];
    });
    return dest;
  };

  var getTrackPerformance = function getTrackPerformance() {
    return new Promise(function (resolve, reject) {
      if (typeof window !== 'undefined' && !window.CNN || !window.jQuery) {
        reject(new Error('trackPerformance not needed'));
      } else if (typeof window !== 'undefined' && window.CNN.Analytics && window.CNN.Analytics.segment && typeof window.CNN.Analytics.segment.trackPerformance === 'function') {
        resolve();
      } else if (typeof window !== 'undefined' && typeof window.jQuery.fn.onSegmentReady === 'function') {
        window.jQuery(document).onSegmentReady(function _handleSegmentReady() {
          resolve();
        });
      } else {
        reject(new Error('trackPerformance not available'));
      }
    });
  };

  var adfuelEntries = [];

  var queueEntry = function queueEntry(eventName) {
    var entries = typeof window !== 'undefined' ? window.performance.getEntriesByName('[ADFUEL] ' + eventName) : [];

    for (var i = 0; i < entries.length; i++) {
      adfuelEntries.push(entries[i]);
    }
  };

  var addMark = function addMark(name) {
    typeof window !== 'undefined' && window.performance.mark('[ADFUEL] ' + name);
  };

  var addMeasure = function addMeasure(name, start, end) {
    typeof window !== 'undefined' && window.performance.measure('[ADFUEL] ' + name, '[ADFUEL] ' + start, '[ADFUEL] ' + end);
  };

  var getMarks = function getMarks() {
    return typeof window !== 'undefined' ? window.performance.getEntriesByType('mark').filter(function (mark) {
      return mark.name.indexOf('[ADFUEL]');
    }) : [];
  };

  var getMeasures = function getMeasures() {
    return typeof window !== 'undefined' ? window.performance.getEntriesByType('measure').filter(function (mark) {
      return mark.name.indexOf('[ADFUEL]');
    }) : [];
  };

  if (typeof document !== 'undefined') {
    addEvent(document, 'AdFuelCreated', filterDFPRequest);
  }

  var hasUserConsent = typeof window !== 'undefined' && window.WM && window.WM.UserConsent || false;
  var performance = {
    adfuelEntries: adfuelEntries,
    getTrackPerformance: getTrackPerformance,
    mark: addMark,
    measure: addMeasure,
    marks: getMarks,
    measures: getMeasures,
    queueEntry: queueEntry,
    slotDetails: {}
  };

  var loadError = function loadError(oError) {
    throw new URIError("The script ".concat(oError.target.src, " didn't load correctly."));
  };

  var affixScriptToHead = function affixScriptToHead(url) {
    var async = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var onloadFunction = arguments.length > 2 ? arguments[2] : undefined;
    var onerrorFunction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : loadError;
    var newScript = document.createElement('script');
    newScript.async = async;
    newScript.onerror = onerrorFunction;

    if (onloadFunction) {
      newScript.onload = onloadFunction;
    }

    var targetNode = document.getElementsByTagName('head')[0];
    targetNode.insertBefore(newScript, targetNode.firstChild);
    newScript.src = url;
  };

  var hasVideo = function hasVideo() {
    var videoElement = document.getElementsByTagName('video');

    if (videoElement.length) {
      return true;
    } else {
      return false;
    }
  };

  var AdFuelUtils = {
    addEvent: addEvent,
    affixScriptToHead: affixScriptToHead,
    bind: bind,
    cdnRoot: cdnRoot,
    clone: clone,
    countryCode: countryCode,
    debounce: debounce,
    gdprApplies: gdprApplies,
    getFullConsentState: getFullConsentState,
    getConsentVersion: getConsentVersion,
    getConsentString: getConsentString,
    getConsent: getConsent,
    getGDPRApplies: getGDPRApplies,
    getCCPAApplies: getCCPAApplies,
    getUserConsentRegion: getUserConsentRegion,
    getLocation: getLocation,
    generateCacheBuster: generateCacheBuster,
    getBrowser: getBrowser,
    getLogger: getLogger,
    getUMTOCookies: getUMTOCookies,
    getURLParam: getURLParam,
    getViewport: getViewport,
    hasCookie: hasCookie,
    hasOwn: hasOwn,
    hasUserConsent: hasUserConsent,
    hasVideo: hasVideo,
    isCNNE: isCNNE,
    isFunction: isFunction,
    isIntl: isIntl,
    isMobile: isMobile,
    isMonetized: isMonetized,
    isObject: isObject,
    keyMap: keyMap,
    merge: merge,
    mergeDeep: mergeDeep,
    noop: noop,
    once: once,
    performance: performance,
    piiFilter: piiFilter,
    readCookie: readCookie,
    roundFloat: roundFloat,
    selectedEdition: selectedEdition,
    setHostAndPathNames: setHostAndPathNames,
    setIsIntl: isIntl,
    __VERSION__: MODULE_VERSION
  };
  window.AdFuelUtils = AdFuelUtils;
  var ZionMessageBus_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var ZionMessageBus =
    /** @class */
    function () {
      /**
       * This is private so nobody can use the constructor
       * @memberof ZionMessageBus
       */
      function ZionMessageBus() {
        this.watching = {};
      }
      /**
       * this creates a static global message bus
       * all implementers can use window.ZION_MESSAGE_BUS
       * or ZionMessageBus.getInstance()
       *
       * @static
       * @returns {ZionMessageBus}
       * @memberof ZionMessageBus
       */


      ZionMessageBus.getInstance = function () {
        if (!window.ZION_MESSAGE_BUS) {
          window.ZION_MESSAGE_BUS = new ZionMessageBus(); // TODO: remove this subscription this is for testing until the bridgeSDK is done
          // (window as any).ZION_MESSAGE_BUS
          //         .subscribe('id_found', (x: object) => {console.log(`IN Bus Subscribe: ${JSON.stringify(x)}`); });
        }

        return window.ZION_MESSAGE_BUS;
      };

      ZionMessageBus.prototype.addToMessageQueue = function (topic, payload) {
        // To handle messages with no subscribers, this topic needs a topicModel
        // before being able to set the messageCount below.
        if (!this.watching.hasOwnProperty(topic)) {
          this.watching[topic] = this.addTopicModel(topic, [function () {
            return undefined;
          }]);
        }

        var now = new Date();
        var messageModel = {
          message: payload,
          messageCount: ++this.watching[topic].messageCount,
          timestamp: now.getTime(),
          topic: topic
        };
        this.watching[topic].messageQueue.push(messageModel);
        return this.watching[topic].messageQueue;
      };

      ZionMessageBus.prototype.getMessageCallbacks = function (topic) {
        /* istanbul ignore else */
        // I don't think the else condition can ever occur
        if (this.watching.hasOwnProperty(topic) && this.watching[topic].callBacks.length) {
          return this.watching[topic].callBacks;
        } else {
          return [];
        }
      };

      ZionMessageBus.prototype.messageBroadcast = function (topic, payload) {
        if (this.watching.hasOwnProperty(topic)) {
          var callbacks = this.getMessageCallbacks(topic);
          var messageQueue = this.addToMessageQueue(topic, payload);

          for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {
            var callback = callbacks_1[_i];
            callback(messageQueue.slice());
          }
        } else {
          // If there are no subscribers yet, we will still keep track of event messages
          this.addToMessageQueue(topic, payload);
        }

        return this.watching; // returned for testing purposes
      };

      ZionMessageBus.prototype.addTopicModel = function (topic, callbacks) {
        return {
          callBacks: callbacks,
          messageCount: 0,
          messageQueue: [],
          topic: topic
        };
      };

      ZionMessageBus.prototype.subscribeSetup = function (topics, callback) {
        topics = this.makeIterable(topics);

        for (var _i = 0, topics_1 = topics; _i < topics_1.length; _i++) {
          var topic = topics_1[_i];

          if (!this.watching.hasOwnProperty(topic)) {
            this.watching[topic] = this.addTopicModel(topic, [callback]);
          } else {
            this.watching[topic].callBacks.push(callback);
          }
        }

        return this.watching; // returned for testing purposes
      };

      ZionMessageBus.prototype.makeIterable = function (data) {
        if (Array.isArray(data)) {
          return data;
        } else if (typeof data === 'string') {
          return [data];
        } else {
          return [];
        }
      };

      ZionMessageBus.prototype.subscribe = function (topics, callback) {
        return this.subscribeSetup(topics, callback);
      };

      ZionMessageBus.prototype.publish = function (topic, payload) {
        return this.messageBroadcast(topic, payload);
      };

      return ZionMessageBus;
    }();

    exports.ZionMessageBus = ZionMessageBus;
    exports["default"] = ZionMessageBus;
  });
  unwrapExports(ZionMessageBus_1);
  var ZionMessageBus_2 = ZionMessageBus_1.ZionMessageBus;
  /*
      Krux Module - Version 4.1.2
      @4.0.0: - Initialization Update for GDPR/CCPA
      @4.1.2: - OptanonLoaded timing fix
  	    ------------------------------------------------------
      GDPR Status: Blocked
      CCPA Status: Blocked
  */

  var MODULE_NAME$1 = 'Krux Module';
  var MODULE_VERSION$1 = 'v4.1.2';
  var consentTags = ['data-store', 'ads-person-prof', 'ads-person', 'measure-ads', 'measure-content', 'measure-market'];
  var logger$1;
  var enableKrux = true;
  var initEventSet = false;
  var zionBus;
  var processCookie;
  var setControlTag;
  var registerModuleWithAdFuel;
  var messageSent = false;
  var subscribersSet = false;
  var targetingSet = false;

  var retrieve = function retrieve(n) {
    var k = 'kx' + n;

    var ls = function () {
      try {
        return window.localStorage;
      } catch (e) {
        return null;
      }
    }();

    if (ls) {
      return ls[k] || '';
    } else if (navigator.cookieEnabled) {
      var m = document.cookie.match(k + '=([^;]*)');
      return m && unescape(m[1]) || '';
    } else {
      return '';
    }
  };

  var init = function init(config) {
    var initPromise = new Promise(function (resolve) {
      logger$1 = getLogger(MODULE_NAME$1, MODULE_VERSION$1, 'krux', 'color: #d2b000; padding: 2px', config.KRUX.DEBUG);
      logger$1.log('Initializing Module: ', config);
      var consentStatus = getConsent(consentTags);

      if (!consentStatus) {
        logger$1.log('Disabling Krux due to User Consent restrictions.');
        enableKrux = false;
      } else {
        logger$1.log('Consent given...');
      }

      if (enableKrux) {
        window.Krux || ((window.Krux = function () {
          window.Krux.q.push([arguments]);
        }).q = []);
      }

      window.krux_getFWKeyValues = enableKrux ? function (prefix, limit) {
        window.Krux.segments = retrieve('segs') ? retrieve('segs').split(',') : [];
        var segPrefix = prefix || '_fwu:386123:';
        var segLimit = limit || 35;
        var fwKVP = {};

        for (var x = 0; x < window.Krux.segments.length; x++) {
          if (x < segLimit) fwKVP[segPrefix + window.Krux.segments[x]] = 1;
        }

        return fwKVP;
      } : function () {};
      window.krux_getDESegments = enableKrux ? function () {
        var segmentString = '&kxid=';

        if (window.Krux.user) {
          segmentString += window.Krux.user;
        }

        segmentString += '&kxseg=' + window.kvs.join(',');
        return segmentString;
      } : function () {};
      window.krux_getFWSegments = enableKrux ? function () {
        window.Krux.segments = retrieve('segs') ? retrieve('segs').split(',') : [];
        return 'kxseg=' + window.Krux.segments.join(',kxseg=');
      } : function () {};
      window.krux_getUser = enableKrux ? function () {
        window.Krux.user = retrieve('user');
        return window.Krux.user;
      } : function () {};
      window.krux_getKuid = enableKrux ? function () {
        window.Krux.kuid = retrieve('kuid');
        return window.Krux.kuid;
      } : function () {};
      processCookie = enableKrux ? function (asset) {
        var processCookiePromise = new Promise(function (resolve) {
          window.Krux.user = retrieve('user');
          window.Krux.segments = retrieve('segs') ? retrieve('segs').split(',') : [];
          window.Krux.kuid = retrieve('kuid');
          var kuser = window.Krux.user;
          var ksg = window.Krux.segments.filter(function filterFunc(segment, index) {
            return index < 35;
          });
          var kuid = window.Krux.kuid;

          if (config.KRUX.SEND_VALUES_TO_ZION && !messageSent) {
            messageSent = true;
            logger$1.log('Publishing to Zion Bus', {
              zionBus: zionBus,
              kuser: kuser,
              kuid: kuid,
              ksg: ksg
            });
            zionBus.publish('id_found', {
              type: 'krux_kuid',
              value: kuid
            });
            zionBus.publish('id_found', {
              type: 'krux_kxuser',
              value: kuser
            });
            zionBus.publish('sg_found', {
              type: 'ksg',
              value: ksg
            });
          }

          if (!targetingSet) {
            targetingSet = true;
            logger$1.log('Adding Krux Targeting...');

            if (window.AdFuel) {
              window.AdFuel.addPageLevelTarget('kuid', kuid);
              window.AdFuel.addPageLevelTarget('ksg', ksg);
            } else {
              window.googletag.cmd.push(function () {
                window.googletag.pubads().setTargeting('kuid', kuid);
                window.googletag.pubads().setTargeting('ksg', ksg);
              });
            }
          }

          resolve({
            ksg: ksg,
            kuid: kuid,
            kuser: kuser
          });
        });
        processCookiePromise.id = "".concat(MODULE_NAME$1, " ").concat(MODULE_VERSION$1);
        return processCookiePromise;
      } : function () {
        var mockPromise = new Promise(function (resolve) {
          resolve();
        });
        mockPromise.id = "".concat(MODULE_NAME$1, " ").concat(MODULE_VERSION$1);
        return mockPromise;
      };
      registerModuleWithAdFuel = enableKrux ? function () {
        window.AdFuel.registerModule(MODULE_NAME$1, {
          preDispatchCallback: processCookie
        }, MODULE_VERSION$1, config.KRUX);
      } : function () {};
      setControlTag = enableKrux ? function (controlTagId) {
        logger$1.log('Setting Control Tag: ', controlTagId); // execute script to set cookie

        var a = document;
        var b = a.createElement('script');
        var c = a.getElementsByTagName('head')[0];
        b.type = 'text/javascript';
        b.async = true;
        var m;
        var src = (m = a.location.href.match(/\bkxsrc=([^&]+)/)) && decodeURIComponent(m[1]);
        b.src = /^https?:\/\/([^/]+\.)?krxd\.net(:\d{1,5})?\//i.test(src) ? src : src === 'disable' ? '' : (a.location.protocol === 'https:' ? 'https:' : 'http:') + '//cdn.krxd.net/controltag?confid=' + controlTagId;

        if (!piiFilter.hash() && !piiFilter.qs() && !piiFilter.ref()) {
          logger$1.log('Adding Krux Script To Head of Page...', b.src);
          c.appendChild(b);
        }
      } : function () {};

      var start = function start() {
        if (config.KRUX) {
          // set based on site
          var controlTags = config.KRUX.CONTROLTAGS ? config.KRUX.CONTROLTAGS : {
            DOM: config.KRUX.DOM_CONTROLTAG,
            INTL: config.KRUX.INTL_CONTROLTAG
          };

          if (config.KRUX.SEND_VALUES_TO_ZION && !subscribersSet) {
            subscribersSet = true;
            zionBus = ZionMessageBus_2.getInstance();
            zionBus.subscribe('id_found', function (x) {
              logger$1.log("From id_found subscription: ".concat(JSON.stringify(x)));
            });
            zionBus.subscribe('sg_found', function (x) {
              logger$1.log("From sg_found subscription: ".concat(JSON.stringify(x)));
            });
          }

          var controlTag = isIntl() ? controlTags.INTL : controlTags.DOM;

          if (enableKrux) {
            setControlTag(controlTag);

            if (window.AdFuel) {
              // AdFuel loaded first
              registerModuleWithAdFuel();
            } else {
              addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
            }
          }
        }

        resolve();
      };

      start();
    });
    initPromise.id = "".concat(MODULE_NAME$1, " ").concat(MODULE_VERSION$1);
    return initPromise;
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    preDispatchCallback: processCookie,
    init: init,
    buildSlot: function buildSlot(slotData) {
      var buildPromise = new Promise(function (resolve) {
        resolve();
      });
      buildPromise.id = "".concat(MODULE_NAME$1, " ").concat(MODULE_VERSION$1);
      return buildPromise;
    },
    runAuction: function runAuction(slotData) {
      var auctionPromise = new Promise(function (resolve) {
        resolve();
      });
      auctionPromise.id = "".concat(MODULE_NAME$1, " ").concat(MODULE_VERSION$1);
      return auctionPromise;
    },
    setTargeting: function setTargeting(slotData) {
      var targetingPromise = new Promise(function (resolve) {
        processCookie(slotData, resolve);
      });
      targetingPromise.id = "".concat(MODULE_NAME$1, " ").concat(MODULE_VERSION$1);
      return targetingPromise;
    },
    __NAME__: MODULE_NAME$1,
    __VERSION__: MODULE_VERSION$1
  };
  return index;
}); ////////////////////////////////////////////
// Malvertising Detection for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.MalvertisingDetection = factory());
})(void 0, function () {
  'use strict';
  /*
      Malvertising Detection Module - Version 4.0.5
  */

  var MODULE_NAME = 'Malvertising Detection';
  var MODULE_VERSION = 'v4.0.5';
  var getLogger = window.AdFuelUtils.getLogger;
  var addEvent = window.AdFuelUtils.addEvent;
  var logger = null;
  var addScript = true;
  var scriptAdded = false;
  var initEventSet = false;

  var addMdScript = function addMdScript(options) {
    if (addScript && !scriptAdded) {
      var head = document.getElementsByTagName('head')[0];
      var mdScript = document.createElement('script');
      var src = options.SCRIPT_SRC;
      mdScript.type = 'text/javascript';
      mdScript.src = src;

      if (!!src && !!head) {
        head.insertBefore(mdScript, head.firstChild);
        scriptAdded = true;
        logger.log("Added Malvertising Detection script to head of page: ".concat(mdScript));
      } else {
        logger.log('Failed to add Malvertising Detection script...');
      }
    }
  };

  var init = function init(opts) {
    var initPromise = new Promise(function (resolve) {
      logger = getLogger(MODULE_NAME, MODULE_VERSION, 'maldetect', 'color: #58f53f; padding: 2px', opts.MALVERTISING.DEBUG);
      logger.log('Initialization Options: ', opts);
      addScript = true;

      if (typeof window !== 'undefined') {
        addMdScript(opts.MALVERTISING);
      }

      var registerModuleWithAdFuel = function registerModuleWithAdFuel() {
        window.AdFuel.registerModule(MODULE_NAME, {}, MODULE_VERSION, opts.MALVERTISING);
      };

      if (window.AdFuel) {
        // AdFuel loaded first
        registerModuleWithAdFuel();
      } else {
        // wait for AdFuel to load
        addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
      }

      resolve();
    });
    initPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return initPromise;
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    __VERSION__: MODULE_VERSION,
    __NAME__: MODULE_NAME,
    init: init,
    addMdScript: addMdScript
  };
  return index;
}); ////////////////////////////////////////////
// Proximic for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.Proximic = factory());
})(void 0, function () {
  'use strict';
  /*
      Proximic Module - Version 4.0.4
      @4.0.0: - Initialization Update for GDPR/CCPA
      @4.0.1: - Fix for unresolving promise
      @4.0.2: - Fix for recallProximic without initial Proximic call
      @4.0.3: - Fix for GBS Ad Unit Filtering
      @4.0.4: - OptanonLoaded timing fix
       ------------------------------------------------------
      GDPR Status: Blocked
      CCPA Status: Allowed
  */

  var MODULE_NAME = 'Proximic Module';
  var MODULE_VERSION = 'v4.0.4';
  var getUserConsentRegion = window.AdFuelUtils.getUserConsentRegion;
  var getConsent = window.AdFuelUtils.getConsent;
  var getLogger = window.AdFuelUtils.getLogger;
  var addEvent = window.AdFuelUtils.addEvent;
  var logger;
  var config = {};
  var loopCount = 0;
  var iterationTime = 50;
  var timeout = 750;
  var locationUrl = '';
  var dataSent = false;
  var scriptUrl;
  var scriptAdded = false;
  var initEventSet = false;
  var eligibilityDetermined = false;

  var recallProximic = function recallProximic(url) {
    var recallProxPromise = new Promise(function (resolve) {
      if (document.getElementById('proximic-script')) {
        logger.log('Recalling Proximic with URL: ', url);
        window.proximicData = [];
        dataSent = false;

        if (window.AdFuel) {
          window.AdFuel.removePageLevelTarget('pconid');
        } else {
          window.googletag.pubads().setTargeting('pconid', null);
        }

        var _locationUrl = url || document.location.href;

        if (window.location.hostname.toLowerCase().match(/^train\.next\.cnn\.com/)) {
          _locationUrl.replace('train.next.', 'www');
        }

        var parser = document.createElement('a');
        parser.href = _locationUrl;
        logger.log('Parser: ', {
          parser: Object(parser)
        });
        var finalUrl = parser.origin + (parser.pathname.indexOf('/') !== 0 ? '/' + parser.pathname : parser.pathname);
        scriptUrl = '//segment-data-us-east.zqtk.net/turner-47fcf6?url=' + encodeURIComponent(finalUrl);
        logger.log('Final Document URL', finalUrl);
        logger.log('Proximic Url: ', scriptUrl);
        delete document.getElementById('proximic-script');
        scriptAdded = false;
        logger.log('Adding Proximic Script from recallProximic...');
        addProximicScriptToHead();
        loopCount = 0;
        logger.log('Waiting for Proximic Data...');
        waitForData(resolve);
      } else {
        logger.log('Not recalling Proximic as Proximic has yet to be called.');
        resolve();
      }
    });
    recallProxPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return recallProxPromise;
  };

  var addProximicScriptToHead = function addProximicScriptToHead() {
    if (!scriptAdded) {
      logger.log('Adding Script?');

      if (config.USER_CONSENT && config.USER_CONSENT.ENABLED) {
        var consentRegion = getUserConsentRegion();
        var consentStatus = getConsent();

        if ((consentRegion === 'ccpa' || consentRegion === 'gdpr') && !consentStatus) {
          logger.log('Disabling SSAI module due to GDPR restrictions.');
        } else {
          var prox = document.createElement('script');
          prox.id = 'proximic-script';
          prox.type = 'text/javascript';
          prox.async = true;
          prox.src = (document.location.protocol === 'https:' ? 'https:' : 'http:') + scriptUrl;
          var node = document.getElementsByTagName('script')[0];
          node.parentNode.appendChild(prox);
          logger.log('Added Proximic script to head of page.', scriptUrl);
          scriptAdded = true;
        }
      } else {
        var _prox = document.createElement('script');

        _prox.id = 'proximic-script';
        _prox.type = 'text/javascript';
        _prox.async = true;
        _prox.src = (document.location.protocol === 'https:' ? 'https:' : 'http:') + scriptUrl;
        var _node = document.getElementsByTagName('script')[0];

        _node.parentNode.appendChild(_prox);

        logger.log('Added Proximic script to head of page.', scriptUrl);
        scriptAdded = true;
      }

      if (window.AdFuel) {
        window.AdFuel.addPageLevelTarget('prx_to', '1');
      } else {
        window.googletag.pubads().setTargeting('prx_to', '1');
      }
    } else {
      logger.log('Script Already Added.', document.getElementById('proximic-script').src);
    }
  };

  var callDfp = function callDfp(dataForDFP, callback) {
    if (dataSent) {
      logger.log('Proximic Data Already Sent.');

      if (callback) {
        try {
          callback(dataForDFP);
        } catch (err) {
          /* Do Nothing... Promise already resolved */
        }
      }
    } else if (dataForDFP !== '' && typeof dataForDFP !== 'undefined') {
      dataSent = true;
      logger.log('Setting data for DFP', dataForDFP);

      if (window.AdFuel) {
        window.AdFuel.addPageLevelTarget('pconid', dataForDFP);
        window.AdFuel.removePageLevelTarget('prx_to', '1');
        window.AdFuel.addPageLevelTarget('prx_to', '0');
      } else {
        window.googletag.pubads().setTargeting('pconid', dataForDFP);
        window.googletag.pubads().setTargeting('prx_to', null);
        window.googletag.pubads().setTargeting('prx_to', '0');
      }

      if (callback) callback(dataForDFP);
    }
  };

  var checkEligibility = function checkEligibility(queue) {
    var eligibilityPromise = new Promise(function (resolve) {
      if (!eligibilityDetermined) {
        eligibilityDetermined = true;
        logger.log('Checking Eligibility...', queue);

        if (queue) {
          var rktrAdId;
          var money = true;
          var epu = false;

          try {
            if (document.location.hostname.indexOf('money') !== -1 && (!window.CNNMONEY || !window.CNNMONEY.adTargets || !window.CNNMONEY.adTargets.c_type || ['article', 'video', 'gallery'].indexOf(window.CNNMONEY.adTargets.c_type) === -1)) {
              money = false;
            }

            logger.log('Is Money and/or Eligible?', money);

            if (Array.isArray(queue)) {
              for (var x = 0; x < queue.length; x++) {
                if (queue[x].rktr_slot_id !== 'page') {
                  rktrAdId = queue[x].rktr_ad_id.toLowerCase();
                  epu = document.location.hostname.indexOf('explorepartsunknown.com') !== -1 && rktrAdId.search(/(leaf)/) > 0;
                  logger.log('Is this page for ExplorePartsUnknown: ', epu);
                  logger.log('Should Proximic Be Included: ', rktrAdId.search(/^(arabic|cnn|cnnbusiness|cnnbusinessedition|gbs)\/(homepage|(.+\/landing))/) < 0 && rktrAdId.search(/^(arabic|cnni|cnnbusiness|cnnbusinessedition|gbs)\/(homepage|(.+\/(landing|main)))/) < 0 && money || epu);

                  if (rktrAdId.search(/^(arabic|cnn|cnnbusiness|cnnbusinessedition|gbs)\/(homepage|(.+\/landing))/) < 0 && rktrAdId.search(/^(arabic|cnni|cnnbusiness|cnnbusinessedition|gbs)\/(homepage|(.+\/(landing|main)))/) < 0 && money || epu) {
                    logger.log('Adding Proximic based on ad unit specifications: ', rktrAdId);
                    addProximicScriptToHead();
                    logger.log('Waiting for Proximic Data...');
                    waitForData(resolve);
                    break;
                  } else {
                    logger.log('Filtering Proximic based on ad unit specifications: ', rktrAdId);
                    resolve();
                    break;
                  }
                }
              }
            } else {
              rktrAdId = queue.rktr_ad_id.toLowerCase();
              epu = document.location.hostname.indexOf('explorepartsunknown.com') !== -1 && rktrAdId.search(/(leaf)/) > 0;
              logger.log('Is this page for ExplorePartsUnknown: ', epu);
              logger.log('Should Proximic Be Included: ', rktrAdId.search(/^(arabic|cnn|cnnbusiness|cnnbusinessedition|gbs)\/(homepage|(.+\/landing))/) < 0 && rktrAdId.search(/^(arabic|cnni|cnnbusiness|cnnbusinessedition|gbs)\/(homepage|(.+\/(landing|main)))/) < 0 && money || epu);

              if (rktrAdId.search(/^(arabic|cnn|cnnbusiness|cnnbusinessedition|gbs)\/(homepage|(.+\/landing))/) < 0 && rktrAdId.search(/^(arabic|cnni|cnnbusiness|cnnbusinessedition|gbs)\/(homepage|(.+\/(landing|main)))/) < 0 && money || epu) {
                logger.log('Adding Proximic based on ad unit specifications: ', rktrAdId);
                addProximicScriptToHead();
                logger.log('Waiting for Proximic Data...');
                waitForData(resolve);
              } else {
                logger.log('Filtering Proximic based on ad unit specifications: ', rktrAdId);
                resolve();
              }
            }
          } catch (err) {
            logger.log('Error parsing Proximic data: ', err.message || 'Unknown');
            resolve(err.message);
          }
        } else {
          resolve();
        }
      } else {
        resolve();
      }
    });
    eligibilityPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return eligibilityPromise;
  };

  var waitForData = function waitForData(callback) {
    setTimeout(function () {
      loopCount++;

      if (window.proximicData !== '' && typeof window.proximicData !== 'undefined' && Array.isArray(window.proximicData) && window.proximicData.length > 0) {
        /* Call DFP with data */
        logger.log('Proximic Data found!');
        callDfp(window.proximicData, callback);
      } else if (loopCount * iterationTime < timeout) {
        logger.log('Still waiting...');
        waitForData(callback);
      } else {
        logger.log('Proximic Timeout Occurred!');
        /* Timeout occurred, call DFP without data */

        if (window.AdFuel) {
          window.AdFuel.addPageLevelTarget('prx_to', '1');
        } else {
          window.googletag.pubads().setTargeting('prx_to', '1');
        }

        if (callback && typeof callback === 'function') callback();
      }
    }, iterationTime);
  };

  var registerModuleWithAdFuel = function registerModuleWithAdFuel(siteConfig) {
    window.AdFuel.registerModule(MODULE_NAME, {
      preQueueCallback: checkEligibility
    }, MODULE_VERSION, siteConfig);

    if (document.location.hostname.indexOf('explorepartsunknown.com') !== -1 && document.location.pathname === '/watch') {
      logger.log('On https://explorepartsunknown.com/watch...');
      addProximicScriptToHead();
    }
  };

  var init = function init(siteConfig) {
    var initPromise = new Promise(function (resolve) {
      config = siteConfig;
      logger = getLogger(MODULE_NAME, MODULE_VERSION, 'proximic', 'color: #d2b000; padding: 2px', siteConfig.PROXIMIC.DEBUG);
      locationUrl = typeof document !== 'undefined' ? document.location.href : '';

      if (window.location.hostname.toLowerCase().match(/^train\.next\.cnn\.com/)) {
        locationUrl.replace('train.next.', 'www');
      }

      var parser = document.createElement('a');
      parser.href = locationUrl;
      logger.log('Parser: ', {
        parser: Object(parser)
      });
      scriptUrl = '//segment-data-us-east.zqtk.net/turner-47fcf6?url=';
      var finalUrl = parser.origin + (parser.pathname.indexOf('/') !== 0 ? '/' + parser.pathname : parser.pathname);
      scriptUrl = scriptUrl + encodeURIComponent(finalUrl);
      logger.log('Final Document URL', finalUrl);
      logger.log('Proximic Url: ', scriptUrl); // sample response from js and format can be easily changed:

      window.gotSegmentData = function (data) {
        if (data.data) {
          logger.log('Proximic returned with segment data: ', data.data);
          window.proximicData = data.data;
        }

        if (data.errors) {
          logger.error('Proximic returned with errors: ', data.errors);
          window.proximicData = data.errors;
        }
      };

      window.recallProximic = recallProximic;

      if (window.AdFuel) {
        // AdFuel loaded first
        registerModuleWithAdFuel(siteConfig);
      } else {
        addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
      }
    });
    initPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return initPromise;
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    init: init,
    preQueueCallback: checkEligibility,
    buildSlot: function buildSlot(slotData) {
      var buildPromise = new Promise(function (resolve) {
        checkEligibility(slotData);
      });
      buildPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return buildPromise;
    },
    runAuction: function runAuction(slotData) {
      var auctionPromise = new Promise(function (resolve) {
        resolve();
      });
      auctionPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return auctionPromise;
    },
    setTargeting: function setTargeting(slotData) {
      var targetingPromise = new Promise(function (resolve) {
        resolve();
      });
      targetingPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return targetingPromise;
    },
    __NAME__: MODULE_NAME,
    __VERSION__: MODULE_VERSION
  };
  return index;
}); ////////////////////////////////////////////
// Sourcepoint Addon: Ad Blocker Detection for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.SourcepointAdBlocking = factory());
})(void 0, function () {
  'use strict';

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function createCommonjsModule(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }

  var isMobile = createCommonjsModule(function (module) {
    (function (global) {
      var apple_phone = /iPhone/i,
          apple_ipod = /iPod/i,
          apple_tablet = /iPad/i,
          android_phone = /\bAndroid(?:.+)Mobile\b/i,
          // Match 'Android' AND 'Mobile'
      android_tablet = /Android/i,
          amazon_phone = /\bAndroid(?:.+)SD4930UR\b/i,
          amazon_tablet = /\bAndroid(?:.+)(?:KF[A-Z]{2,4})\b/i,
          windows_phone = /Windows Phone/i,
          windows_tablet = /\bWindows(?:.+)ARM\b/i,
          // Match 'Windows' AND 'ARM'
      other_blackberry = /BlackBerry/i,
          other_blackberry_10 = /BB10/i,
          other_opera = /Opera Mini/i,
          other_chrome = /\b(CriOS|Chrome)(?:.+)Mobile/i,
          other_firefox = /Mobile(?:.+)Firefox\b/i; // Match 'Mobile' AND 'Firefox'

      function match(regex, userAgent) {
        return regex.test(userAgent);
      }

      function isMobile(userAgent) {
        var ua = userAgent || (typeof navigator !== 'undefined' ? navigator.userAgent : ''); // Facebook mobile app's integrated browser adds a bunch of strings that
        // match everything. Strip it out if it exists.

        var tmp = ua.split('[FBAN');

        if (typeof tmp[1] !== 'undefined') {
          ua = tmp[0];
        } // Twitter mobile app's integrated browser on iPad adds a "Twitter for
        // iPhone" string. Same probably happens on other tablet platforms.
        // This will confuse detection so strip it out if it exists.


        tmp = ua.split('Twitter');

        if (typeof tmp[1] !== 'undefined') {
          ua = tmp[0];
        }

        var result = {
          apple: {
            phone: match(apple_phone, ua) && !match(windows_phone, ua),
            ipod: match(apple_ipod, ua),
            tablet: !match(apple_phone, ua) && match(apple_tablet, ua) && !match(windows_phone, ua),
            device: (match(apple_phone, ua) || match(apple_ipod, ua) || match(apple_tablet, ua)) && !match(windows_phone, ua)
          },
          amazon: {
            phone: match(amazon_phone, ua),
            tablet: !match(amazon_phone, ua) && match(amazon_tablet, ua),
            device: match(amazon_phone, ua) || match(amazon_tablet, ua)
          },
          android: {
            phone: !match(windows_phone, ua) && match(amazon_phone, ua) || !match(windows_phone, ua) && match(android_phone, ua),
            tablet: !match(windows_phone, ua) && !match(amazon_phone, ua) && !match(android_phone, ua) && (match(amazon_tablet, ua) || match(android_tablet, ua)),
            device: !match(windows_phone, ua) && (match(amazon_phone, ua) || match(amazon_tablet, ua) || match(android_phone, ua) || match(android_tablet, ua)) || match(/\bokhttp\b/i, ua)
          },
          windows: {
            phone: match(windows_phone, ua),
            tablet: match(windows_tablet, ua),
            device: match(windows_phone, ua) || match(windows_tablet, ua)
          },
          other: {
            blackberry: match(other_blackberry, ua),
            blackberry10: match(other_blackberry_10, ua),
            opera: match(other_opera, ua),
            firefox: match(other_firefox, ua),
            chrome: match(other_chrome, ua),
            device: match(other_blackberry, ua) || match(other_blackberry_10, ua) || match(other_opera, ua) || match(other_firefox, ua) || match(other_chrome, ua)
          }
        };
        result.any = result.apple.device || result.android.device || result.windows.device || result.other.device, // excludes 'other' devices and ipods, targeting touchscreen phones
        result.phone = result.apple.phone || result.android.phone || result.windows.phone, result.tablet = result.apple.tablet || result.android.tablet || result.windows.tablet;
        return result;
      }

      if (module.exports && typeof window === 'undefined') {
        // Node.js
        module.exports = isMobile;
      } else if (module.exports && typeof window !== 'undefined') {
        // Browserify
        module.exports = isMobile();
        module.exports.isMobile = isMobile;
      } else {
        global.isMobile = isMobile();
      }
    })(commonjsGlobal);
  });
  var isMobile_1 = isMobile.isMobile;
  var semver = createCommonjsModule(function (module, exports) {
    exports = module.exports = SemVer;
    var debug;
    /* istanbul ignore next */

    if ((typeof process === "undefined" ? "undefined" : _typeof4(process)) === 'object' && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG)) {
      debug = function debug() {
        var args = Array.prototype.slice.call(arguments, 0);
        args.unshift('SEMVER');
        console.log.apply(console, args);
      };
    } else {
      debug = function debug() {};
    } // Note: this is the semver.org version of the spec that it implements
    // Not necessarily the package version of this code.


    exports.SEMVER_SPEC_VERSION = '2.0.0';
    var MAX_LENGTH = 256;
    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
    /* istanbul ignore next */
    9007199254740991; // Max safe segment length for coercion.

    var MAX_SAFE_COMPONENT_LENGTH = 16; // The actual regexps go on exports.re

    var re = exports.re = [];
    var src = exports.src = [];
    var R = 0; // The following Regular Expressions can be used for tokenizing,
    // validating, and parsing SemVer version strings.
    // ## Numeric Identifier
    // A single `0`, or a non-zero digit followed by zero or more digits.

    var NUMERICIDENTIFIER = R++;
    src[NUMERICIDENTIFIER] = '0|[1-9]\\d*';
    var NUMERICIDENTIFIERLOOSE = R++;
    src[NUMERICIDENTIFIERLOOSE] = '[0-9]+'; // ## Non-numeric Identifier
    // Zero or more digits, followed by a letter or hyphen, and then zero or
    // more letters, digits, or hyphens.

    var NONNUMERICIDENTIFIER = R++;
    src[NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*'; // ## Main Version
    // Three dot-separated numeric identifiers.

    var MAINVERSION = R++;
    src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\.' + '(' + src[NUMERICIDENTIFIER] + ')';
    var MAINVERSIONLOOSE = R++;
    src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')'; // ## Pre-release Version Identifier
    // A numeric identifier, or a non-numeric identifier.

    var PRERELEASEIDENTIFIER = R++;
    src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';
    var PRERELEASEIDENTIFIERLOOSE = R++;
    src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')'; // ## Pre-release Version
    // Hyphen, followed by one or more dot-separated pre-release version
    // identifiers.

    var PRERELEASE = R++;
    src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\.' + src[PRERELEASEIDENTIFIER] + ')*))';
    var PRERELEASELOOSE = R++;
    src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'; // ## Build Metadata Identifier
    // Any combination of digits, letters, or hyphens.

    var BUILDIDENTIFIER = R++;
    src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'; // ## Build Metadata
    // Plus sign, followed by one or more period-separated build metadata
    // identifiers.

    var BUILD = R++;
    src[BUILD] = '(?:\\+(' + src[BUILDIDENTIFIER] + '(?:\\.' + src[BUILDIDENTIFIER] + ')*))'; // ## Full Version String
    // A main version, followed optionally by a pre-release version and
    // build metadata.
    // Note that the only major, minor, patch, and pre-release sections of
    // the version string are capturing groups.  The build metadata is not a
    // capturing group, because it should not ever be used in version
    // comparison.

    var FULL = R++;
    var FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';
    src[FULL] = '^' + FULLPLAIN + '$'; // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
    // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
    // common in the npm registry.

    var LOOSEPLAIN = '[v=\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';
    var LOOSE = R++;
    src[LOOSE] = '^' + LOOSEPLAIN + '$';
    var GTLT = R++;
    src[GTLT] = '((?:<|>)?=?)'; // Something like "2.*" or "1.2.x".
    // Note that "x.x" is a valid xRange identifer, meaning "any version"
    // Only the first item is strictly required.

    var XRANGEIDENTIFIERLOOSE = R++;
    src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\*';
    var XRANGEIDENTIFIER = R++;
    src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\*';
    var XRANGEPLAIN = R++;
    src[XRANGEPLAIN] = '[v=\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';
    var XRANGEPLAINLOOSE = R++;
    src[XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';
    var XRANGE = R++;
    src[XRANGE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAIN] + '$';
    var XRANGELOOSE = R++;
    src[XRANGELOOSE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAINLOOSE] + '$'; // Coercion.
    // Extract anything that could conceivably be a part of a valid semver

    var COERCE = R++;
    src[COERCE] = '(?:^|[^\\d])' + '(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' + '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:$|[^\\d])'; // Tilde ranges.
    // Meaning is "reasonably at or greater than"

    var LONETILDE = R++;
    src[LONETILDE] = '(?:~>?)';
    var TILDETRIM = R++;
    src[TILDETRIM] = '(\\s*)' + src[LONETILDE] + '\\s+';
    re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');
    var tildeTrimReplace = '$1~';
    var TILDE = R++;
    src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';
    var TILDELOOSE = R++;
    src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'; // Caret ranges.
    // Meaning is "at least and backwards compatible with"

    var LONECARET = R++;
    src[LONECARET] = '(?:\\^)';
    var CARETTRIM = R++;
    src[CARETTRIM] = '(\\s*)' + src[LONECARET] + '\\s+';
    re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');
    var caretTrimReplace = '$1^';
    var CARET = R++;
    src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';
    var CARETLOOSE = R++;
    src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'; // A simple gt/lt/eq thing, or just "" to indicate "any version"

    var COMPARATORLOOSE = R++;
    src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\s*(' + LOOSEPLAIN + ')$|^$';
    var COMPARATOR = R++;
    src[COMPARATOR] = '^' + src[GTLT] + '\\s*(' + FULLPLAIN + ')$|^$'; // An expression to strip any whitespace between the gtlt and the thing
    // it modifies, so that `> 1.2.3` ==> `>1.2.3`

    var COMPARATORTRIM = R++;
    src[COMPARATORTRIM] = '(\\s*)' + src[GTLT] + '\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'; // this one has to use the /g flag

    re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');
    var comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`
    // Note that these all use the loose form, because they'll be
    // checked against either the strict or loose comparator form
    // later.

    var HYPHENRANGE = R++;
    src[HYPHENRANGE] = '^\\s*(' + src[XRANGEPLAIN] + ')' + '\\s+-\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\s*$';
    var HYPHENRANGELOOSE = R++;
    src[HYPHENRANGELOOSE] = '^\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\s+-\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\s*$'; // Star ranges basically just allow anything at all.

    var STAR = R++;
    src[STAR] = '(<|>)?=?\\s*\\*'; // Compile to actual regexp objects.
    // All are flag-free, unless they were created above with a flag.

    for (var i = 0; i < R; i++) {
      debug(i, src[i]);

      if (!re[i]) {
        re[i] = new RegExp(src[i]);
      }
    }

    exports.parse = parse;

    function parse(version, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (version instanceof SemVer) {
        return version;
      }

      if (typeof version !== 'string') {
        return null;
      }

      if (version.length > MAX_LENGTH) {
        return null;
      }

      var r = options.loose ? re[LOOSE] : re[FULL];

      if (!r.test(version)) {
        return null;
      }

      try {
        return new SemVer(version, options);
      } catch (er) {
        return null;
      }
    }

    exports.valid = valid;

    function valid(version, options) {
      var v = parse(version, options);
      return v ? v.version : null;
    }

    exports.clean = clean;

    function clean(version, options) {
      var s = parse(version.trim().replace(/^[=v]+/, ''), options);
      return s ? s.version : null;
    }

    exports.SemVer = SemVer;

    function SemVer(version, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (version instanceof SemVer) {
        if (version.loose === options.loose) {
          return version;
        } else {
          version = version.version;
        }
      } else if (typeof version !== 'string') {
        throw new TypeError('Invalid Version: ' + version);
      }

      if (version.length > MAX_LENGTH) {
        throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');
      }

      if (!(this instanceof SemVer)) {
        return new SemVer(version, options);
      }

      debug('SemVer', version, options);
      this.options = options;
      this.loose = !!options.loose;
      var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);

      if (!m) {
        throw new TypeError('Invalid Version: ' + version);
      }

      this.raw = version; // these are actually numbers

      this.major = +m[1];
      this.minor = +m[2];
      this.patch = +m[3];

      if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
        throw new TypeError('Invalid major version');
      }

      if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
        throw new TypeError('Invalid minor version');
      }

      if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
        throw new TypeError('Invalid patch version');
      } // numberify any prerelease numeric ids


      if (!m[4]) {
        this.prerelease = [];
      } else {
        this.prerelease = m[4].split('.').map(function (id) {
          if (/^[0-9]+$/.test(id)) {
            var num = +id;

            if (num >= 0 && num < MAX_SAFE_INTEGER) {
              return num;
            }
          }

          return id;
        });
      }

      this.build = m[5] ? m[5].split('.') : [];
      this.format();
    }

    SemVer.prototype.format = function () {
      this.version = this.major + '.' + this.minor + '.' + this.patch;

      if (this.prerelease.length) {
        this.version += '-' + this.prerelease.join('.');
      }

      return this.version;
    };

    SemVer.prototype.toString = function () {
      return this.version;
    };

    SemVer.prototype.compare = function (other) {
      debug('SemVer.compare', this.version, this.options, other);

      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      }

      return this.compareMain(other) || this.comparePre(other);
    };

    SemVer.prototype.compareMain = function (other) {
      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      }

      return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);
    };

    SemVer.prototype.comparePre = function (other) {
      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      } // NOT having a prerelease is > having one


      if (this.prerelease.length && !other.prerelease.length) {
        return -1;
      } else if (!this.prerelease.length && other.prerelease.length) {
        return 1;
      } else if (!this.prerelease.length && !other.prerelease.length) {
        return 0;
      }

      var i = 0;

      do {
        var a = this.prerelease[i];
        var b = other.prerelease[i];
        debug('prerelease compare', i, a, b);

        if (a === undefined && b === undefined) {
          return 0;
        } else if (b === undefined) {
          return 1;
        } else if (a === undefined) {
          return -1;
        } else if (a === b) {
          continue;
        } else {
          return compareIdentifiers(a, b);
        }
      } while (++i);
    }; // preminor will bump the version up to the next minor release, and immediately
    // down to pre-release. premajor and prepatch work the same way.


    SemVer.prototype.inc = function (release, identifier) {
      switch (release) {
        case 'premajor':
          this.prerelease.length = 0;
          this.patch = 0;
          this.minor = 0;
          this.major++;
          this.inc('pre', identifier);
          break;

        case 'preminor':
          this.prerelease.length = 0;
          this.patch = 0;
          this.minor++;
          this.inc('pre', identifier);
          break;

        case 'prepatch':
          // If this is already a prerelease, it will bump to the next version
          // drop any prereleases that might already exist, since they are not
          // relevant at this point.
          this.prerelease.length = 0;
          this.inc('patch', identifier);
          this.inc('pre', identifier);
          break;
        // If the input is a non-prerelease version, this acts the same as
        // prepatch.

        case 'prerelease':
          if (this.prerelease.length === 0) {
            this.inc('patch', identifier);
          }

          this.inc('pre', identifier);
          break;

        case 'major':
          // If this is a pre-major version, bump up to the same major version.
          // Otherwise increment major.
          // 1.0.0-5 bumps to 1.0.0
          // 1.1.0 bumps to 2.0.0
          if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
            this.major++;
          }

          this.minor = 0;
          this.patch = 0;
          this.prerelease = [];
          break;

        case 'minor':
          // If this is a pre-minor version, bump up to the same minor version.
          // Otherwise increment minor.
          // 1.2.0-5 bumps to 1.2.0
          // 1.2.1 bumps to 1.3.0
          if (this.patch !== 0 || this.prerelease.length === 0) {
            this.minor++;
          }

          this.patch = 0;
          this.prerelease = [];
          break;

        case 'patch':
          // If this is not a pre-release version, it will increment the patch.
          // If it is a pre-release it will bump up to the same patch version.
          // 1.2.0-5 patches to 1.2.0
          // 1.2.0 patches to 1.2.1
          if (this.prerelease.length === 0) {
            this.patch++;
          }

          this.prerelease = [];
          break;
        // This probably shouldn't be used publicly.
        // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.

        case 'pre':
          if (this.prerelease.length === 0) {
            this.prerelease = [0];
          } else {
            var i = this.prerelease.length;

            while (--i >= 0) {
              if (typeof this.prerelease[i] === 'number') {
                this.prerelease[i]++;
                i = -2;
              }
            }

            if (i === -1) {
              // didn't increment anything
              this.prerelease.push(0);
            }
          }

          if (identifier) {
            // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
            // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
            if (this.prerelease[0] === identifier) {
              if (isNaN(this.prerelease[1])) {
                this.prerelease = [identifier, 0];
              }
            } else {
              this.prerelease = [identifier, 0];
            }
          }

          break;

        default:
          throw new Error('invalid increment argument: ' + release);
      }

      this.format();
      this.raw = this.version;
      return this;
    };

    exports.inc = inc;

    function inc(version, release, loose, identifier) {
      if (typeof loose === 'string') {
        identifier = loose;
        loose = undefined;
      }

      try {
        return new SemVer(version, loose).inc(release, identifier).version;
      } catch (er) {
        return null;
      }
    }

    exports.diff = diff;

    function diff(version1, version2) {
      if (eq(version1, version2)) {
        return null;
      } else {
        var v1 = parse(version1);
        var v2 = parse(version2);
        var prefix = '';

        if (v1.prerelease.length || v2.prerelease.length) {
          prefix = 'pre';
          var defaultResult = 'prerelease';
        }

        for (var key in v1) {
          if (key === 'major' || key === 'minor' || key === 'patch') {
            if (v1[key] !== v2[key]) {
              return prefix + key;
            }
          }
        }

        return defaultResult; // may be undefined
      }
    }

    exports.compareIdentifiers = compareIdentifiers;
    var numeric = /^[0-9]+$/;

    function compareIdentifiers(a, b) {
      var anum = numeric.test(a);
      var bnum = numeric.test(b);

      if (anum && bnum) {
        a = +a;
        b = +b;
      }

      return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;
    }

    exports.rcompareIdentifiers = rcompareIdentifiers;

    function rcompareIdentifiers(a, b) {
      return compareIdentifiers(b, a);
    }

    exports.major = major;

    function major(a, loose) {
      return new SemVer(a, loose).major;
    }

    exports.minor = minor;

    function minor(a, loose) {
      return new SemVer(a, loose).minor;
    }

    exports.patch = patch;

    function patch(a, loose) {
      return new SemVer(a, loose).patch;
    }

    exports.compare = compare;

    function compare(a, b, loose) {
      return new SemVer(a, loose).compare(new SemVer(b, loose));
    }

    exports.compareLoose = compareLoose;

    function compareLoose(a, b) {
      return compare(a, b, true);
    }

    exports.rcompare = rcompare;

    function rcompare(a, b, loose) {
      return compare(b, a, loose);
    }

    exports.sort = sort;

    function sort(list, loose) {
      return list.sort(function (a, b) {
        return exports.compare(a, b, loose);
      });
    }

    exports.rsort = rsort;

    function rsort(list, loose) {
      return list.sort(function (a, b) {
        return exports.rcompare(a, b, loose);
      });
    }

    exports.gt = gt;

    function gt(a, b, loose) {
      return compare(a, b, loose) > 0;
    }

    exports.lt = lt;

    function lt(a, b, loose) {
      return compare(a, b, loose) < 0;
    }

    exports.eq = eq;

    function eq(a, b, loose) {
      return compare(a, b, loose) === 0;
    }

    exports.neq = neq;

    function neq(a, b, loose) {
      return compare(a, b, loose) !== 0;
    }

    exports.gte = gte;

    function gte(a, b, loose) {
      return compare(a, b, loose) >= 0;
    }

    exports.lte = lte;

    function lte(a, b, loose) {
      return compare(a, b, loose) <= 0;
    }

    exports.cmp = cmp;

    function cmp(a, op, b, loose) {
      switch (op) {
        case '===':
          if (_typeof4(a) === 'object') a = a.version;
          if (_typeof4(b) === 'object') b = b.version;
          return a === b;

        case '!==':
          if (_typeof4(a) === 'object') a = a.version;
          if (_typeof4(b) === 'object') b = b.version;
          return a !== b;

        case '':
        case '=':
        case '==':
          return eq(a, b, loose);

        case '!=':
          return neq(a, b, loose);

        case '>':
          return gt(a, b, loose);

        case '>=':
          return gte(a, b, loose);

        case '<':
          return lt(a, b, loose);

        case '<=':
          return lte(a, b, loose);

        default:
          throw new TypeError('Invalid operator: ' + op);
      }
    }

    exports.Comparator = Comparator;

    function Comparator(comp, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (comp instanceof Comparator) {
        if (comp.loose === !!options.loose) {
          return comp;
        } else {
          comp = comp.value;
        }
      }

      if (!(this instanceof Comparator)) {
        return new Comparator(comp, options);
      }

      debug('comparator', comp, options);
      this.options = options;
      this.loose = !!options.loose;
      this.parse(comp);

      if (this.semver === ANY) {
        this.value = '';
      } else {
        this.value = this.operator + this.semver.version;
      }

      debug('comp', this);
    }

    var ANY = {};

    Comparator.prototype.parse = function (comp) {
      var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
      var m = comp.match(r);

      if (!m) {
        throw new TypeError('Invalid comparator: ' + comp);
      }

      this.operator = m[1];

      if (this.operator === '=') {
        this.operator = '';
      } // if it literally is just '>' or '' then allow anything.


      if (!m[2]) {
        this.semver = ANY;
      } else {
        this.semver = new SemVer(m[2], this.options.loose);
      }
    };

    Comparator.prototype.toString = function () {
      return this.value;
    };

    Comparator.prototype.test = function (version) {
      debug('Comparator.test', version, this.options.loose);

      if (this.semver === ANY) {
        return true;
      }

      if (typeof version === 'string') {
        version = new SemVer(version, this.options);
      }

      return cmp(version, this.operator, this.semver, this.options);
    };

    Comparator.prototype.intersects = function (comp, options) {
      if (!(comp instanceof Comparator)) {
        throw new TypeError('a Comparator is required');
      }

      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      var rangeTmp;

      if (this.operator === '') {
        rangeTmp = new Range(comp.value, options);
        return satisfies(this.value, rangeTmp, options);
      } else if (comp.operator === '') {
        rangeTmp = new Range(this.value, options);
        return satisfies(comp.semver, rangeTmp, options);
      }

      var sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');
      var sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');
      var sameSemVer = this.semver.version === comp.semver.version;
      var differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');
      var oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');
      var oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');
      return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;
    };

    exports.Range = Range;

    function Range(range, options) {
      if (!options || _typeof4(options) !== 'object') {
        options = {
          loose: !!options,
          includePrerelease: false
        };
      }

      if (range instanceof Range) {
        if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {
          return range;
        } else {
          return new Range(range.raw, options);
        }
      }

      if (range instanceof Comparator) {
        return new Range(range.value, options);
      }

      if (!(this instanceof Range)) {
        return new Range(range, options);
      }

      this.options = options;
      this.loose = !!options.loose;
      this.includePrerelease = !!options.includePrerelease; // First, split based on boolean or ||

      this.raw = range;
      this.set = range.split(/\s*\|\|\s*/).map(function (range) {
        return this.parseRange(range.trim());
      }, this).filter(function (c) {
        // throw out any that are not relevant for whatever reason
        return c.length;
      });

      if (!this.set.length) {
        throw new TypeError('Invalid SemVer Range: ' + range);
      }

      this.format();
    }

    Range.prototype.format = function () {
      this.range = this.set.map(function (comps) {
        return comps.join(' ').trim();
      }).join('||').trim();
      return this.range;
    };

    Range.prototype.toString = function () {
      return this.range;
    };

    Range.prototype.parseRange = function (range) {
      var loose = this.options.loose;
      range = range.trim(); // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`

      var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];
      range = range.replace(hr, hyphenReplace);
      debug('hyphen replace', range); // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`

      range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);
      debug('comparator trim', range, re[COMPARATORTRIM]); // `~ 1.2.3` => `~1.2.3`

      range = range.replace(re[TILDETRIM], tildeTrimReplace); // `^ 1.2.3` => `^1.2.3`

      range = range.replace(re[CARETTRIM], caretTrimReplace); // normalize spaces

      range = range.split(/\s+/).join(' '); // At this point, the range is completely trimmed and
      // ready to be split into comparators.

      var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
      var set = range.split(' ').map(function (comp) {
        return parseComparator(comp, this.options);
      }, this).join(' ').split(/\s+/);

      if (this.options.loose) {
        // in loose mode, throw out any that are not valid comparators
        set = set.filter(function (comp) {
          return !!comp.match(compRe);
        });
      }

      set = set.map(function (comp) {
        return new Comparator(comp, this.options);
      }, this);
      return set;
    };

    Range.prototype.intersects = function (range, options) {
      if (!(range instanceof Range)) {
        throw new TypeError('a Range is required');
      }

      return this.set.some(function (thisComparators) {
        return thisComparators.every(function (thisComparator) {
          return range.set.some(function (rangeComparators) {
            return rangeComparators.every(function (rangeComparator) {
              return thisComparator.intersects(rangeComparator, options);
            });
          });
        });
      });
    }; // Mostly just for testing and legacy API reasons


    exports.toComparators = toComparators;

    function toComparators(range, options) {
      return new Range(range, options).set.map(function (comp) {
        return comp.map(function (c) {
          return c.value;
        }).join(' ').trim().split(' ');
      });
    } // comprised of xranges, tildes, stars, and gtlt's at this point.
    // already replaced the hyphen ranges
    // turn into a set of JUST comparators.


    function parseComparator(comp, options) {
      debug('comp', comp, options);
      comp = replaceCarets(comp, options);
      debug('caret', comp);
      comp = replaceTildes(comp, options);
      debug('tildes', comp);
      comp = replaceXRanges(comp, options);
      debug('xrange', comp);
      comp = replaceStars(comp, options);
      debug('stars', comp);
      return comp;
    }

    function isX(id) {
      return !id || id.toLowerCase() === 'x' || id === '*';
    } // ~, ~> --> * (any, kinda silly)
    // ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
    // ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
    // ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
    // ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
    // ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0


    function replaceTildes(comp, options) {
      return comp.trim().split(/\s+/).map(function (comp) {
        return replaceTilde(comp, options);
      }).join(' ');
    }

    function replaceTilde(comp, options) {
      var r = options.loose ? re[TILDELOOSE] : re[TILDE];
      return comp.replace(r, function (_, M, m, p, pr) {
        debug('tilde', comp, _, M, m, p, pr);
        var ret;

        if (isX(M)) {
          ret = '';
        } else if (isX(m)) {
          ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
        } else if (isX(p)) {
          // ~1.2 == >=1.2.0 <1.3.0
          ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
        } else if (pr) {
          debug('replaceTilde pr', pr);
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';
        } else {
          // ~1.2.3 == >=1.2.3 <1.3.0
          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';
        }

        debug('tilde return', ret);
        return ret;
      });
    } // ^ --> * (any, kinda silly)
    // ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
    // ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
    // ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
    // ^1.2.3 --> >=1.2.3 <2.0.0
    // ^1.2.0 --> >=1.2.0 <2.0.0


    function replaceCarets(comp, options) {
      return comp.trim().split(/\s+/).map(function (comp) {
        return replaceCaret(comp, options);
      }).join(' ');
    }

    function replaceCaret(comp, options) {
      debug('caret', comp, options);
      var r = options.loose ? re[CARETLOOSE] : re[CARET];
      return comp.replace(r, function (_, M, m, p, pr) {
        debug('caret', comp, _, M, m, p, pr);
        var ret;

        if (isX(M)) {
          ret = '';
        } else if (isX(m)) {
          ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
        } else if (isX(p)) {
          if (M === '0') {
            ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
          } else {
            ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';
          }
        } else if (pr) {
          debug('replaceCaret pr', pr);

          if (M === '0') {
            if (m === '0') {
              ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + m + '.' + (+p + 1);
            } else {
              ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';
            }
          } else {
            ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + (+M + 1) + '.0.0';
          }
        } else {
          debug('no pr');

          if (M === '0') {
            if (m === '0') {
              ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);
            } else {
              ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';
            }
          } else {
            ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';
          }
        }

        debug('caret return', ret);
        return ret;
      });
    }

    function replaceXRanges(comp, options) {
      debug('replaceXRanges', comp, options);
      return comp.split(/\s+/).map(function (comp) {
        return replaceXRange(comp, options);
      }).join(' ');
    }

    function replaceXRange(comp, options) {
      comp = comp.trim();
      var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];
      return comp.replace(r, function (ret, gtlt, M, m, p, pr) {
        debug('xRange', comp, ret, gtlt, M, m, p, pr);
        var xM = isX(M);
        var xm = xM || isX(m);
        var xp = xm || isX(p);
        var anyX = xp;

        if (gtlt === '=' && anyX) {
          gtlt = '';
        }

        if (xM) {
          if (gtlt === '>' || gtlt === '<') {
            // nothing is allowed
            ret = '<0.0.0';
          } else {
            // nothing is forbidden
            ret = '*';
          }
        } else if (gtlt && anyX) {
          // we know patch is an x, because we have any x at all.
          // replace X with 0
          if (xm) {
            m = 0;
          }

          p = 0;

          if (gtlt === '>') {
            // >1 => >=2.0.0
            // >1.2 => >=1.3.0
            // >1.2.3 => >= 1.2.4
            gtlt = '>=';

            if (xm) {
              M = +M + 1;
              m = 0;
              p = 0;
            } else {
              m = +m + 1;
              p = 0;
            }
          } else if (gtlt === '<=') {
            // <=0.7.x is actually <0.8.0, since any 0.7.x should
            // pass.  Similarly, <=7.x is actually <8.0.0, etc.
            gtlt = '<';

            if (xm) {
              M = +M + 1;
            } else {
              m = +m + 1;
            }
          }

          ret = gtlt + M + '.' + m + '.' + p;
        } else if (xm) {
          ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
        } else if (xp) {
          ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
        }

        debug('xRange return', ret);
        return ret;
      });
    } // Because * is AND-ed with everything else in the comparator,
    // and '' means "any version", just remove the *s entirely.


    function replaceStars(comp, options) {
      debug('replaceStars', comp, options); // Looseness is ignored here.  star is always as loose as it gets!

      return comp.trim().replace(re[STAR], '');
    } // This function is passed to string.replace(re[HYPHENRANGE])
    // M, m, patch, prerelease, build
    // 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
    // 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
    // 1.2 - 3.4 => >=1.2.0 <3.5.0


    function hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {
      if (isX(fM)) {
        from = '';
      } else if (isX(fm)) {
        from = '>=' + fM + '.0.0';
      } else if (isX(fp)) {
        from = '>=' + fM + '.' + fm + '.0';
      } else {
        from = '>=' + from;
      }

      if (isX(tM)) {
        to = '';
      } else if (isX(tm)) {
        to = '<' + (+tM + 1) + '.0.0';
      } else if (isX(tp)) {
        to = '<' + tM + '.' + (+tm + 1) + '.0';
      } else if (tpr) {
        to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;
      } else {
        to = '<=' + to;
      }

      return (from + ' ' + to).trim();
    } // if ANY of the sets match ALL of its comparators, then pass


    Range.prototype.test = function (version) {
      if (!version) {
        return false;
      }

      if (typeof version === 'string') {
        version = new SemVer(version, this.options);
      }

      for (var i = 0; i < this.set.length; i++) {
        if (testSet(this.set[i], version, this.options)) {
          return true;
        }
      }

      return false;
    };

    function testSet(set, version, options) {
      for (var i = 0; i < set.length; i++) {
        if (!set[i].test(version)) {
          return false;
        }
      }

      if (version.prerelease.length && !options.includePrerelease) {
        // Find the set of versions that are allowed to have prereleases
        // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
        // That should allow `1.2.3-pr.2` to pass.
        // However, `1.2.4-alpha.notready` should NOT be allowed,
        // even though it's within the range set by the comparators.
        for (i = 0; i < set.length; i++) {
          debug(set[i].semver);

          if (set[i].semver === ANY) {
            continue;
          }

          if (set[i].semver.prerelease.length > 0) {
            var allowed = set[i].semver;

            if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {
              return true;
            }
          }
        } // Version has a -pre, but it's not one of the ones we like.


        return false;
      }

      return true;
    }

    exports.satisfies = satisfies;

    function satisfies(version, range, options) {
      try {
        range = new Range(range, options);
      } catch (er) {
        return false;
      }

      return range.test(version);
    }

    exports.maxSatisfying = maxSatisfying;

    function maxSatisfying(versions, range, options) {
      var max = null;
      var maxSV = null;

      try {
        var rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }

      versions.forEach(function (v) {
        if (rangeObj.test(v)) {
          // satisfies(v, range, options)
          if (!max || maxSV.compare(v) === -1) {
            // compare(max, v, true)
            max = v;
            maxSV = new SemVer(max, options);
          }
        }
      });
      return max;
    }

    exports.minSatisfying = minSatisfying;

    function minSatisfying(versions, range, options) {
      var min = null;
      var minSV = null;

      try {
        var rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }

      versions.forEach(function (v) {
        if (rangeObj.test(v)) {
          // satisfies(v, range, options)
          if (!min || minSV.compare(v) === 1) {
            // compare(min, v, true)
            min = v;
            minSV = new SemVer(min, options);
          }
        }
      });
      return min;
    }

    exports.minVersion = minVersion;

    function minVersion(range, loose) {
      range = new Range(range, loose);
      var minver = new SemVer('0.0.0');

      if (range.test(minver)) {
        return minver;
      }

      minver = new SemVer('0.0.0-0');

      if (range.test(minver)) {
        return minver;
      }

      minver = null;

      for (var i = 0; i < range.set.length; ++i) {
        var comparators = range.set[i];
        comparators.forEach(function (comparator) {
          // Clone to avoid manipulating the comparator's semver object.
          var compver = new SemVer(comparator.semver.version);

          switch (comparator.operator) {
            case '>':
              if (compver.prerelease.length === 0) {
                compver.patch++;
              } else {
                compver.prerelease.push(0);
              }

              compver.raw = compver.format();

            /* fallthrough */

            case '':
            case '>=':
              if (!minver || gt(minver, compver)) {
                minver = compver;
              }

              break;

            case '<':
            case '<=':
              /* Ignore maximum versions */
              break;

            /* istanbul ignore next */

            default:
              throw new Error('Unexpected operation: ' + comparator.operator);
          }
        });
      }

      if (minver && range.test(minver)) {
        return minver;
      }

      return null;
    }

    exports.validRange = validRange;

    function validRange(range, options) {
      try {
        // Return '*' instead of '' so that truthiness works.
        // This will throw if it's invalid anyway
        return new Range(range, options).range || '*';
      } catch (er) {
        return null;
      }
    } // Determine if version is less than all the versions possible in the range


    exports.ltr = ltr;

    function ltr(version, range, options) {
      return outside(version, range, '<', options);
    } // Determine if version is greater than all the versions possible in the range.


    exports.gtr = gtr;

    function gtr(version, range, options) {
      return outside(version, range, '>', options);
    }

    exports.outside = outside;

    function outside(version, range, hilo, options) {
      version = new SemVer(version, options);
      range = new Range(range, options);
      var gtfn, ltefn, ltfn, comp, ecomp;

      switch (hilo) {
        case '>':
          gtfn = gt;
          ltefn = lte;
          ltfn = lt;
          comp = '>';
          ecomp = '>=';
          break;

        case '<':
          gtfn = lt;
          ltefn = gte;
          ltfn = gt;
          comp = '<';
          ecomp = '<=';
          break;

        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"');
      } // If it satisifes the range it is not outside


      if (satisfies(version, range, options)) {
        return false;
      } // From now on, variable terms are as if we're in "gtr" mode.
      // but note that everything is flipped for the "ltr" function.


      for (var i = 0; i < range.set.length; ++i) {
        var comparators = range.set[i];
        var high = null;
        var low = null;
        comparators.forEach(function (comparator) {
          if (comparator.semver === ANY) {
            comparator = new Comparator('>=0.0.0');
          }

          high = high || comparator;
          low = low || comparator;

          if (gtfn(comparator.semver, high.semver, options)) {
            high = comparator;
          } else if (ltfn(comparator.semver, low.semver, options)) {
            low = comparator;
          }
        }); // If the edge version comparator has a operator then our version
        // isn't outside it

        if (high.operator === comp || high.operator === ecomp) {
          return false;
        } // If the lowest version comparator has an operator and our version
        // is less than it then it isn't higher than the range


        if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {
          return false;
        } else if (low.operator === ecomp && ltfn(version, low.semver)) {
          return false;
        }
      }

      return true;
    }

    exports.prerelease = prerelease;

    function prerelease(version, options) {
      var parsed = parse(version, options);
      return parsed && parsed.prerelease.length ? parsed.prerelease : null;
    }

    exports.intersects = intersects;

    function intersects(r1, r2, options) {
      r1 = new Range(r1, options);
      r2 = new Range(r2, options);
      return r1.intersects(r2);
    }

    exports.coerce = coerce;

    function coerce(version) {
      if (version instanceof SemVer) {
        return version;
      }

      if (typeof version !== 'string') {
        return null;
      }

      var match = version.match(re[COERCE]);

      if (match == null) {
        return null;
      }

      return parse(match[1] + '.' + (match[2] || '0') + '.' + (match[3] || '0'));
    }
  });
  var semver_1 = semver.SEMVER_SPEC_VERSION;
  var semver_2 = semver.re;
  var semver_3 = semver.src;
  var semver_4 = semver.parse;
  var semver_5 = semver.valid;
  var semver_6 = semver.clean;
  var semver_7 = semver.SemVer;
  var semver_8 = semver.inc;
  var semver_9 = semver.diff;
  var semver_10 = semver.compareIdentifiers;
  var semver_11 = semver.rcompareIdentifiers;
  var semver_12 = semver.major;
  var semver_13 = semver.minor;
  var semver_14 = semver.patch;
  var semver_15 = semver.compare;
  var semver_16 = semver.compareLoose;
  var semver_17 = semver.rcompare;
  var semver_18 = semver.sort;
  var semver_19 = semver.rsort;
  var semver_20 = semver.gt;
  var semver_21 = semver.lt;
  var semver_22 = semver.eq;
  var semver_23 = semver.neq;
  var semver_24 = semver.gte;
  var semver_25 = semver.lte;
  var semver_26 = semver.cmp;
  var semver_27 = semver.Comparator;
  var semver_28 = semver.Range;
  var semver_29 = semver.toComparators;
  var semver_30 = semver.satisfies;
  var semver_31 = semver.maxSatisfying;
  var semver_32 = semver.minSatisfying;
  var semver_33 = semver.minVersion;
  var semver_34 = semver.validRange;
  var semver_35 = semver.ltr;
  var semver_36 = semver.gtr;
  var semver_37 = semver.outside;
  var semver_38 = semver.prerelease;
  var semver_39 = semver.intersects;
  var semver_40 = semver.coerce;
  /* global fetch, localStorage */

  var MODULE_NAME = 'Ad Utilities';
  var MODULE_VERSION = 'v4.0.5';
  var objectProto = Object.prototype;
  var toString = objectProto.toString;

  var noop = function noop() {};

  var cdnRoot = function cdnRoot() {
    return typeof document !== 'undefined' && document.location !== 'undefined' && document.location.hostname !== 'undefined' && document.location.hostname !== '' ? document.location.hostname.indexOf('cnn.com') >= 0 ? 'cdn.cnn.com' : 'i.cdn.turner.com' : 'i.cdn.turner.com';
  };

  var isFunction = function isFunction(object) {
    return toString.call(object) === '[object Function]';
  };

  var getUMTOCookies = function getUMTOCookies() {
    var FreewheelNetwork = document.location.pathname.indexOf('/dev/') > 0 || document.location.pathname.indexOf('/qa/') > 0 ? '42448' : '48804';
    logger.log('getting UMTO cookies');
    return (readCookie('bea4') ? '_fw_vcid2=' + FreewheelNetwork + ':' + readCookie('bea4') : readCookie('bea4r') ? '_fw_vcid2=' + FreewheelNetwork + ':' + readCookie('bea4r') : '') + (readCookie('kxuser') ? '&krux_user=' + readCookie('kxuser') : '') + (readCookie('zwmc') ? '&zwmc=' + readCookie('zwmc') : '') + (readCookie('ifyr') ? '&ifyr=' + readCookie('ifyr') : '') + (readCookie('hkgc') ? '&hkgc=' + readCookie('hkgc') : '') + (readCookie('goiz') ? '&goiz=' + readCookie('goiz') : '');
  };

  var isObject = function isObject(object) {
    var type = _typeof4(object);

    return (type === 'function' || type === 'object') && !!object;
  };

  var getURLParam = function getURLParam(name) {
    if (typeof document === 'undefined') {
      return '';
    }

    var nameParam = name.replace(/[[]/, '\\[').replace(/[\]]/, '\\]');
    var regexS = '[\\?&]' + nameParam + '=([^&#]*)';
    var regex = new RegExp(regexS);

    if (document && document.location && document.location.search) {
      var results = regex.exec(document.location.search);

      if (results) {
        return results[1];
      }

      return '';
    }

    return '';
  };

  var hasCookie = function hasCookie(name) {
    if (typeof window === 'undefined') return false;

    if (document && document.cookie) {
      logger.log('found?', document.cookie.indexOf('; ' + name + '=') >= 0 || document.cookie.indexOf(name + '=') === 0);
      return document.cookie.indexOf('; ' + name + '=') >= 0 || document.cookie.indexOf(name + '=') === 0;
    }

    return false;
  };

  var getViewport = function getViewport() {
    var viewportWidth;
    var viewportHeight;

    if (typeof window !== 'undefined' && window && typeof window.innerWidth !== 'undefined') {
      viewportWidth = window.innerWidth;
      viewportHeight = window.innerHeight;
    } else if (typeof document !== 'undefined' && document && typeof document.documentElement !== 'undefined' && typeof document.documentElement.clientWidth !== 'undefined' && document.documentElement.clientWidth !== 0) {
      viewportWidth = document.documentElement.clientWidth;
      viewportHeight = document.documentElement.clientHeight;
    } else {
      viewportWidth = document.getElementsByTagName('body')[0].clientWidth;
      viewportHeight = document.getElementsByTagName('body')[0].clientHeight;
    }

    return [viewportWidth, viewportHeight];
  };

  var getBrowser = function getBrowser() {
    logger.time('Getting Browser Information');
    var ua = navigator.userAgent;
    var tem;
    var M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];

    if (/trident/i.test(M[1])) {
      tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
      return 'IE ' + (tem[1] || '');
    }

    if (M[1] === 'Chrome') {
      tem = ua.match(/\b(OPR|Edge)\/(\d+)/);

      if (tem !== null) {
        return tem.slice(1).join(' ').replace('OPR', 'Opera');
      }
    }

    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?']; // eslint-disable-next-line

    if ((tem = ua.match(/version\/(\d+)/i)) !== null) M.splice(1, 1, tem[1]);
    logger.timeEnd('Getting Browser Information');
    return M.join(' ');
  };

  var readCookie = function readCookie(name) {
    var readTheCookie = function readTheCookie(key) {
      if (typeof document === 'undefined' || !document.cookie) {
        // there is no cookie, so go no further
        return null;
      } // there is a cookie


      return document.cookie.match(RegExp(key + '=.*?;')) ? document.cookie.match(RegExp(key + '=.*?;'))[0].replace(RegExp(key + '=|;', 'g'), '') : null;
    };

    var lsSupport = false;
    var data = null; // Check for native support

    if (typeof localStorage !== 'undefined') {
      lsSupport = true;
    } // No value supplied, return value


    if (typeof value === 'undefined') {
      // Get value
      if (lsSupport) {
        // Native support
        data = localStorage.getItem(name);
      }

      if (!lsSupport || data === null) {
        // Use cookie
        data = readTheCookie(name);
      }
    }

    return data;
  };

  var emptyTarget = function emptyTarget(value) {
    return Array.isArray(value) ? [] : {};
  };

  var deepmerge = function deepmerge(target, source, optionsArgument) {
    var array = Array.isArray(source);
    var options = optionsArgument || {
      arrayMerge: combineMerge
    };
    var arrayMerge = options.arrayMerge || combineMerge;

    if (array) {
      return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument);
    } else {
      return mergeObject(target, source, optionsArgument);
    }
  };

  var combineMerge = function combineMerge(target, source, options) {
    var destination = target.slice();
    source.forEach(function (e, i) {
      if (typeof destination[i] === 'undefined') {
        var cloneRequested = clone !== false;
        var shouldClone = cloneRequested && isMergeableObject(e);
        destination[i] = shouldClone ? deepmerge(emptyTarget(e), e, options) : e;
      } else if (isMergeableObject(e)) {
        destination[i] = merge(target[i], e);
      } else if (target.indexOf(e) === -1) {
        destination.push(e);
      }
    });
    return destination;
  };

  var isMergeableObject = function isMergeableObject(val) {
    var nonNullObject = val && _typeof4(val) === 'object';
    return nonNullObject && Object.prototype.toString.call(val) !== '[object RegExp]' && Object.prototype.toString.call(val) !== '[object Date]';
  };

  var cloneIfNecessary = function cloneIfNecessary(value, optionsArgument) {
    var clone = optionsArgument && optionsArgument.clone === true;
    return clone && isMergeableObject(value) ? deepmerge(emptyTarget(value), value, optionsArgument) : value;
  };

  var mergeObject = function mergeObject(target, source, optionsArgument) {
    var destination = {};

    if (isMergeableObject(target)) {
      Object.keys(target).forEach(function (key) {
        destination[key] = cloneIfNecessary(target[key], optionsArgument);
      });
    }

    Object.keys(source).forEach(function (key) {
      if (!isMergeableObject(source[key]) || !target[key]) {
        destination[key] = cloneIfNecessary(source[key], optionsArgument);
      } else {
        destination[key] = deepmerge(target[key], source[key], optionsArgument);
      }
    });
    return destination;
  };

  deepmerge.all = function (array, optionsArgument) {
    if (!Array.isArray(array) || array.length < 2) {
      throw new Error('first argument should be an array with at least two elements');
    } // we are sure there are at least 2 values, so it is safe to have no initial value


    return array.reduce(function (prev, next) {
      return deepmerge(prev, next, optionsArgument);
    });
  };

  var mergeDeep = function mergeDeep(target, source) {
    return deepmerge(target, source);
  };

  var countryCode = readCookie('countryCode') || (readCookie('CG') ? readCookie('CG').substr(0, 2) : '');
  var appId = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwbGF0Zm9ybSI6IndlYiIsInByb2R1Y3QiOiJhZGZ1ZWwiLCJuZXR3b3JrIjoiY25uIiwiYXBwSWQiOiJjbm4tYWRmdWVsLXdlYi14bWQ2dTkifQ.N-lYZh_mvCV2gChDusNhd85B2BD7AiCIcNY2Gr5Rc6c';
  var locationServiceURL = 'https://geo.ngtv.io/locate?appId=' + appId;

  var getLocation = function getLocation() {
    return new Promise(function (resolve, reject) {
      fetch(locationServiceURL).then(function (resp) {
        resolve(resp.json());
      })["catch"](function (err) {
        reject(new Error("Could not get user location: ".concat(err)));
      });
    });
  };

  var selectedEdition = readCookie('SelectedEdition') ? readCookie('SelectedEdition') : 'www';
  var monetizedSizes = ['160x600', '300x250', '300x600', '320x50', '728x90', '970x90', '970x250'];
  var invalidMappings = ['_ns_', '_nfs_'];
  var invalidAdUnitSegments = [];
  var invalidAdUnits = ['CNN/health', 'CNN/health/healthgrades', 'CNN/health/leaf', 'CNN/health/list', 'CNN/health/photos', 'CNN/health/specials', 'CNN/health/video', 'CNN/student-news'];

  var getLogger = function getLogger(moduleName, moduleVersion, logKey, style, override) {
    var log = noop;
    var info = noop;
    var warn = noop;
    var time = noop;
    var timeEnd = noop;
    var group = noop;
    var groupEnd = noop;
    var error = noop;
    var inGroup = false;
    var tag;
    var styleFinal = style || '';
    var logKeyFinal = logKey || moduleName.toLowerCase();
    var debug = getURLParam('debug').split(',');
    var debugTest = isObject(console) && isFunction(console.log) && (debug[0] === 'true' || debug.indexOf(logKeyFinal.toLowerCase()) >= 0);
    if (override) debugTest = true;

    if (debugTest) {
      log = function log() {
        for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {
          args[_key13] = arguments[_key13];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.log.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.log.apply(console, tag);
        }
      };

      info = function info() {
        for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {
          args[_key14] = arguments[_key14];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.info.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.info.apply(console, tag);
        }
      };

      warn = function warn() {
        for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {
          args[_key15] = arguments[_key15];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.warn.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.warn.apply(console, tag);
        }
      };

      error = function error() {
        for (var _len16 = arguments.length, args = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {
          args[_key16] = arguments[_key16];
        }

        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.error.apply(console, tag);
        } else {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] ', styleFinal];
          tag.push.apply(tag, args);
          console.error.apply(console, tag);
        }
      };

      group = function group(groupName) {
        if (!inGroup) {
          tag = ['%c[' + moduleName + ' ' + moduleVersion + '] - START', styleFinal, groupName];
          inGroup = true;
          console.log.apply(console, tag);
        }
      };

      groupEnd = function groupEnd(groupName) {
        tag = ['%c[' + moduleName + ' ' + moduleVersion + '] - END', styleFinal, groupName];
        inGroup = false;

        try {
          console.log.apply(console, tag);
        } catch (err) {// Do Nothing
        }
      };

      time = function time(timeTag) {
        var timeKey = '[' + moduleName + ' ' + moduleVersion + '] - ' + timeTag;
        group(timeTag);
        addMark(timeKey + '-Start');
        console.time(timeKey);
      };

      timeEnd = function timeEnd(timeTag) {
        var timeKey = '[' + moduleName + ' ' + moduleVersion + '] - ' + timeTag;
        addMark(timeKey + '-End');
        addMeasure(timeKey, timeKey + '-Start', timeKey + '-End');
        groupEnd(timeTag);
        console.timeEnd(timeKey);
      };
    }

    var logger = {
      log: log,
      info: info,
      warn: warn,
      error: error,
      time: time,
      timeEnd: timeEnd,
      group: group,
      groupEnd: groupEnd
    };
    return logger;
  };

  var hostname = '';

  var setHostAndPathNames = function setHostAndPathNames() {
    var parser = typeof document !== 'undefined' ? document.createElement('a') : {
      href: '',
      hostname: '',
      pathname: ''
    };
    parser.href = typeof document !== 'undefined' ? document.location.href : '';
    hostname = parser.hostname;
  };

  var logger = getLogger(MODULE_NAME, MODULE_VERSION, 'utils', 'color: coral; padding: 2px');

  var addEvent = function addEvent(element, event, fn) {
    if (element.addEventListener) {
      element.addEventListener(event, fn, true);
    } else if (element.attachEvent) {
      element.attachEvent('on' + event, fn);
    }
  };

  var bind = function bind(fn, context) {
    for (var _len17 = arguments.length, args = new Array(_len17 > 2 ? _len17 - 2 : 0), _key17 = 2; _key17 < _len17; _key17++) {
      args[_key17 - 2] = arguments[_key17];
    }

    if (!isFunction(fn)) {
      throw new TypeError('Bind must be called on a function');
    }

    return function bound() {
      return fn.apply(context, args.concat(Array.prototype.slice.call(arguments)));
    };
  };
  /* eslint-disable-next-line */


  var re = /(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()\[\]\.,;:\s@\"]+\.)+[^<>()\[\]\.,;:\s@\"]{2,})/i;

  var piiIsPresentInQueryString = function piiIsPresentInQueryString() {
    if (document.location.search) {
      var dirtyResults = document.location.search.search(re) + 1;
      var cleanResults;

      try {
        cleanResults = decodeURIComponent(document.location.search).search(re) + 1;
      } catch (err) {
        cleanResults = dirtyResults;
      }

      return dirtyResults === 1 || cleanResults === 1;
    }

    return false;
  };

  var piiIsPresentInHash = function piiIsPresentInHash() {
    if (document.location.hash) {
      var dirtyResults = document.location.hash.search(re) + 1;
      var cleanResults;

      try {
        cleanResults = decodeURIComponent(document.location.hash).search(re) + 1;
      } catch (err) {
        cleanResults = dirtyResults;
      }

      return dirtyResults || cleanResults;
    }

    return false;
  };

  var piiIsPresentInReferrer = function piiIsPresentInReferrer() {
    if (document.referrer) {
      var dirtyResults = document.referrer.search(re) + 1;
      var cleanResults;

      try {
        cleanResults = decodeURIComponent(document.location.referrer).search(re) + 1;
      } catch (err) {
        cleanResults = dirtyResults;
      }

      return dirtyResults || cleanResults;
    }

    return false;
  };

  var piiIsPresent = function piiIsPresent() {
    return piiIsPresentInQueryString() || piiIsPresentInHash() || piiIsPresentInReferrer();
  };

  var filterDFPRequest = function filterDFPRequest() {
    if (piiIsPresentInQueryString() || piiIsPresentInHash() || piiIsPresentInReferrer()) {
      if (typeof window !== 'undefined' && window.AdFuel) {
        logger.log('Filtering DFP Request due to PII in query string.');
        var AdFuelMethods = Object.getOwnPropertyNames(window.AdFuel);

        for (var x = 0; x < AdFuelMethods.length; x++) {
          window.AdFuel[AdFuelMethods[x]] = function filteredAdFuelMethod() {};
        }

        window.googletag = null;
      }

      return true;
    }

    return false;
  };

  var piiFilter = {
    qs: piiIsPresentInQueryString,
    hash: piiIsPresentInHash,
    ref: piiIsPresentInReferrer,
    isPIIPresent: piiIsPresent,
    filter: filterDFPRequest
  };
  var consentStatus = false;
  var consentChecked = false;
  var gdprApplies = false;

  var getFullConsentState = function getFullConsentState() {
    return window.WM.UserConsent.getConsentState();
  };

  var getConsentVersion = function getConsentVersion() {
    return window.WM.UserConsent.getConsentVersion();
  };

  var getConsentString = function getConsentString() {
    var consentString = '';

    if (hasCookie('eupubconsent')) {
      logger.log('Getting Consent Object from cookie...');
      consentString = readCookie('eupubconsent');
    } else {
      if (typeof window !== 'undefined' && window.__tcfapi && typeof window.__tcfapi === 'function') {
        logger.log('Getting Consent Object from __tcfapi...');

        window.__tcfapi('getTCData', 2, function (tcData, success) {
          if (success) {
            return tcData.tcString;
          } else {
            return '';
          }
        });
      } else if (typeof window !== 'undefined' && window.__cmp && typeof window.__cmp === 'function') {
        logger.log('Getting Consent Object from __cmp...');

        window.__cmp('getVendorConsents', null, function (result) {
          consentString = result.metadata;
        });
      }
    }

    logger.log('Returning consent string...', consentString);
    return consentString;
  };

  var getConsent = function getConsent() {
    var consentStates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['data-store', 'ads-contextual', 'ads-person-prof', 'ads-person', 'vendor'];
    if (consentChecked) return consentStatus;
    var consentVersion = '1.3.6';

    try {
      consentVersion = window.WM.UserConsent.getVersion();
    } catch (err) {
      logger.warn('Running Older UserConsent - Please Update!');
    }

    logger.log('UserConsent Version: ', consentVersion);
    consentStatus = window.WM ? window.WM.UserConsent.isReady() ? semver.satisfies(consentVersion, '>=2.0.0') ? window.WM.UserConsent.inUserConsentState(consentStates) : window.WM.UserConsent.inUserConsentState(['ads-general', 'ads-vendor']) : true : true;
    logger.log('Consent Granted: ', consentStatus);
    var region = getUserConsentRegion();

    if (region === 'ccpa' && getURLParam('renderStatic') !== '') {
      logger.log('Render Static: ', getURLParam('renderStatic'));
      logger.log('Using override for Static Ad Rendering...');
      consentStatus = false;
    } else {
      logger.log('Not overriding for static rendering...');
    }

    consentChecked = true;
    return consentStatus;
  };

  var getGDPRApplies = function getGDPRApplies() {
    return window.WM.UserConsent.isInGdprRegion();
  };

  var getCCPAApplies = function getCCPAApplies() {
    return window.WM.UserConsent.isInCcpaRegion();
  };

  var getUserConsentRegion = function getUserConsentRegion() {
    return window.WM ? window.WM.UserConsent.getRegion() : '';
  };

  var monetizedSlots = {};

  var isMonetized = function isMonetized(slot) {
    var rktrSlotId = slot.rktr_slot_id;
    logger.group('Checking Monetization for: ' + rktrSlotId);
    var rktrAdId = slot.rktr_ad_id;
    var responsive = slot.responsive;
    var sizes = slot.sizes;

    if (typeof monetizedSlots[rktrSlotId] !== 'undefined') {
      logger.log('Slot already monetized.', monetizedSlots[rktrSlotId]);
      logger.groupEnd('Checking Monetization for: ' + rktrSlotId);
      return monetizedSlots[rktrSlotId];
    }

    var slotId = rktrSlotId;

    if (slotId === 'page') {
      logger.log('Skipping Page-Level Object.');
      logger.groupEnd('Checking Monetization for: ' + rktrSlotId);
      monetizedSlots[slotId] = {
        isMonetized: false,
        filteredSizes: []
      };
      return {
        isMonetized: false,
        filteredSizes: []
      };
    }

    var monetized = true;
    var viewportChecked = false;
    var browser = getViewport();
    var responsiveSizes = [];
    var filteredSizes = [];
    invalidMappings.forEach(function forEachMap(invalidMapping) {
      if (slotId.indexOf(invalidMapping) > 0) {
        logger.log('Slot includes invalid mapping: ', invalidMapping);
        monetizedSlots[slotId] = false;
        monetized = false;
      }
    });
    invalidAdUnitSegments.forEach(function forEachSegment(invalidAdUnitSegment) {
      if (rktrAdId && rktrAdId.indexOf(invalidAdUnitSegment) >= 0) {
        logger.log('Slot contains an invalid Ad Unit segment: ', invalidAdUnitSegment);
        monetized = false;
      }
    });
    invalidAdUnits.forEach(function forEachAdUnit(invalidAdUnit) {
      if (rktrAdId === invalidAdUnit) {
        logger.log('Slot uses an invalid Ad Unit: ', invalidAdUnit);
        monetized = false;
      }
    });

    if (responsive && responsive.length > 0) {
      responsive.map(function (viewport) {
        if (!viewportChecked && parseInt(viewport[0][0], 10) < browser[0] && parseInt(viewport[0][1], 10) < browser[1]) {
          viewportChecked = true;
          logger.log('Checking Responsive Sizes: ', viewport, browser);
          responsiveSizes = viewport[1];

          if (viewport[1][0] === 'suppress' || responsiveSizes === 'suppress') {
            logger.log('Slot is suppressed: ', viewport[1][0], responsiveSizes);
            monetized = false;
          }
        }

        return viewport;
      });
    }

    filteredSizes = monetized && responsiveSizes.length > 0 ? responsiveSizes : sizes;

    if (monetized) {
      filteredSizes = filteredSizes.filter(function sizeFilter(size) {
        var retSize = size;

        if (retSize !== 'suppress') {
          retSize = retSize.join('x');
        }

        return monetizedSizes.indexOf(retSize) !== -1;
      });
    }

    if (filteredSizes.length === 0) {
      logger.log('Slot contains no monetized sizes.', filteredSizes);
      monetizedSlots[slotId] = false;
      monetized = false;
    }

    logger.log('Slot is Monetized: ', monetized);
    logger.groupEnd('Checking Monetization for: ' + rktrSlotId);
    monetizedSlots[slotId] = {
      isMonetized: monetized,
      filteredSizes: filteredSizes
    };
    return {
      isMonetized: monetized,
      filteredSizes: filteredSizes
    };
  };

  var hasOwn = function hasOwn(object, key) {
    return object !== null && Object.prototype.hasOwnProperty.call(object, key);
  };

  var once = function once(fn) {
    return function () {
      if (fn) {
        fn.apply(this, arguments); // eslint-disable-next-line

        fn = null;
      }
    };
  };

  var keyMap = function () {
    var map = {};

    var has = function has(id) {
      return id in map;
    };

    var addKey = function addKey(id, key) {
      if (!has(id)) {
        map[id] = [];
      }

      map[id].push(key);
    };

    var getKeys = function getKeys(id) {
      return has(id) ? Array.prototype.slice.call(map[id]) : [];
    };

    var clearKeys = function clearKeys(id) {
      if (has(id)) {
        map[id].length = 0;
        return true;
      }

      return false;
    };

    return {
      has: has,
      clearKeys: clearKeys,
      getKeys: getKeys,
      addKey: addKey
    };
  }();

  var roundFloat = function roundFloat(value, toNearest, fixed) {
    return (Math.ceil(value / toNearest) * toNearest).toFixed(fixed);
  };

  var generateCacheBuster = function generateCacheBuster() {
    // return_<9-digit-random-hex>
    var cb = '';

    for (var i = 0; i < 10; i++) {
      cb += Math.floor(Math.random() * 9).toString();
    }

    return cb;
  };

  var debounce = function debounce(func, wait, immediate) {
    var timeout;
    return function () {
      for (var _len18 = arguments.length, args = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {
        args[_key18] = arguments[_key18];
      }

      var context = this;

      var later = function later() {
        timeout = null;
        if (!immediate) func.apply(context, args);
      };

      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) func.apply(context, args);
    };
  };

  var clone = function clone(obj) {
    // Handle the 3 simple types, and null or undefined
    if (obj === null || _typeof4(obj) !== 'object') return obj; // Handle Date

    if (obj instanceof Date) {
      var copyDate = new Date();
      copyDate.setTime(obj.getTime());
      return copyDate;
    } // Handle Array


    if (obj instanceof Array) {
      var copyArray = [];

      for (var i = 0, len = obj.length; i < len; i++) {
        copyArray[i] = clone(obj[i]);
      }

      return copyArray;
    } // Handle Object


    if (obj instanceof Object) {
      var copyObject = {};
      Object.keys(obj).forEach(function (attr) {
        copyObject[attr] = clone(obj[attr]);
      });
      return copyObject;
    }

    throw new Error("Unable to copy obj! Its type isn't supported.");
  };

  var logsSent = false;
  var onCNNE = false;

  var isIntl = function isIntl() {
    var isIntl = false;
    setHostAndPathNames();

    if (getURLParam('isIntl') === 'true') {
      if (!logsSent) {
        logsSent = true;
        logger.log('Faking international site. Using International PubIds.');
      }

      isIntl = true;
    } else if (hostname.search(/^.*(edition|edition-m|arabic)\./) >= 0) {
      if (!logsSent) {
        logsSent = true;
        logger.log('Full international site. Using International PubIds.');
      }

      isIntl = true;
    } else if (countryCode === '' || countryCode === null) {
      if (hostname.search(/^.*(cnnespanol|cnne-test)\./) >= 0) {
        logger.log('Setting isCNNE to `true`');
        onCNNE = true;
        var locationMeta = document && document.querySelectorAll('meta#geo-location-data');

        if (locationMeta && locationMeta.length > 0) {
          if (['US', 'CA'].indexOf(locationMeta[0].dataset.geoCountryCode) >= 0) {
            isIntl = false;
          } else {
            isIntl = true;
          }
        } else {
          if (!logsSent) {
            logsSent = true;
            logger.log('No country code.');
          }
        }
      } else {
        if (!logsSent) {
          logsSent = true;
          logger.log('No country code.');
        }

        isIntl = false;
      }
    } else if (countryCode !== 'US' && countryCode !== 'CA') {
      if (hostname.search(/^.*(money|cnnespanol|cnne-test|\.cnn)\./) >= 0) {
        if (hostname.search(/^.*(money\.cnn)\./) < 0) {
          logger.log('Setting isCNNE to `true`');
          onCNNE = true;
        }

        if (!logsSent) {
          logsSent = true;
          logger.log('International country code. Using International PubIds.');
        }

        isIntl = true;
      } else {
        if (!logsSent) {
          logsSent = true;
          logger.log('International country code but domestic site.');
        }

        isIntl = true;
      }
    } else {
      if (hostname.search(/^.*(cnnespanol|cnne-test)\./) >= 0) {
        if (!logsSent) {
          logger.log('On CNN Espanol... looking for geo-location-data meta tag...');
          logger.log('Setting isCNNE to `true`');
          onCNNE = true;
        }

        locationMeta = document && document.querySelectorAll('meta#geo-location-data');

        if (locationMeta && locationMeta.length > 0) {
          countryCode = locationMeta[0].dataset.geoCountryCode.toUpperCase();

          if (!logsSent) {
            logger.log('Found geo-location-data meta tag with countryCode: ', countryCode);
          }

          if (['US', 'CA'].indexOf(countryCode) >= 0) {
            if (!logsSent) {
              logger.log('Domestic country code. Using Domestic PubIds.');
              logsSent = true;
            }

            isIntl = false;
          } else {
            if (!logsSent) {
              logger.log('International country code. Using International PubIds.');
              logsSent = true;
            }

            isIntl = true;
          }
        } else {
          if (!logsSent) {
            logsSent = true;
            logger.log('No country code. Domestic Site.');
            isIntl = false;
          }
        }
      } else {
        if (!logsSent) {
          logsSent = true;
          logger.log('Domestic site or country code.');
          isIntl = false;
        }
      }
    }

    return isIntl;
  };

  var isCNNE = function isCNNE() {
    isIntl();
    logger.log('Is User on CNN Español? ', onCNNE);
    return onCNNE;
  };

  var merge = function merge(source, mods) {
    var dest = {};
    Object.keys(source).forEach(function (attrname) {
      dest[attrname] = source[attrname];
    });
    Object.keys(mods).forEach(function (attrname) {
      dest[attrname] = mods[attrname];
    });
    return dest;
  };

  var getTrackPerformance = function getTrackPerformance() {
    return new Promise(function (resolve, reject) {
      if (typeof window !== 'undefined' && !window.CNN || !window.jQuery) {
        reject(new Error('trackPerformance not needed'));
      } else if (typeof window !== 'undefined' && window.CNN.Analytics && window.CNN.Analytics.segment && typeof window.CNN.Analytics.segment.trackPerformance === 'function') {
        resolve();
      } else if (typeof window !== 'undefined' && typeof window.jQuery.fn.onSegmentReady === 'function') {
        window.jQuery(document).onSegmentReady(function _handleSegmentReady() {
          resolve();
        });
      } else {
        reject(new Error('trackPerformance not available'));
      }
    });
  };

  var adfuelEntries = [];

  var queueEntry = function queueEntry(eventName) {
    var entries = typeof window !== 'undefined' ? window.performance.getEntriesByName('[ADFUEL] ' + eventName) : [];

    for (var i = 0; i < entries.length; i++) {
      adfuelEntries.push(entries[i]);
    }
  };

  var addMark = function addMark(name) {
    typeof window !== 'undefined' && window.performance.mark('[ADFUEL] ' + name);
  };

  var addMeasure = function addMeasure(name, start, end) {
    typeof window !== 'undefined' && window.performance.measure('[ADFUEL] ' + name, '[ADFUEL] ' + start, '[ADFUEL] ' + end);
  };

  var getMarks = function getMarks() {
    return typeof window !== 'undefined' ? window.performance.getEntriesByType('mark').filter(function (mark) {
      return mark.name.indexOf('[ADFUEL]');
    }) : [];
  };

  var getMeasures = function getMeasures() {
    return typeof window !== 'undefined' ? window.performance.getEntriesByType('measure').filter(function (mark) {
      return mark.name.indexOf('[ADFUEL]');
    }) : [];
  };

  if (typeof document !== 'undefined') {
    addEvent(document, 'AdFuelCreated', filterDFPRequest);
  }

  var hasUserConsent = typeof window !== 'undefined' && window.WM && window.WM.UserConsent || false;
  var performance = {
    adfuelEntries: adfuelEntries,
    getTrackPerformance: getTrackPerformance,
    mark: addMark,
    measure: addMeasure,
    marks: getMarks,
    measures: getMeasures,
    queueEntry: queueEntry,
    slotDetails: {}
  };

  var loadError = function loadError(oError) {
    throw new URIError("The script ".concat(oError.target.src, " didn't load correctly."));
  };

  var affixScriptToHead = function affixScriptToHead(url) {
    var async = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var onloadFunction = arguments.length > 2 ? arguments[2] : undefined;
    var onerrorFunction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : loadError;
    var newScript = document.createElement('script');
    newScript.async = async;
    newScript.onerror = onerrorFunction;

    if (onloadFunction) {
      newScript.onload = onloadFunction;
    }

    var targetNode = document.getElementsByTagName('head')[0];
    targetNode.insertBefore(newScript, targetNode.firstChild);
    newScript.src = url;
  };

  var hasVideo = function hasVideo() {
    var videoElement = document.getElementsByTagName('video');

    if (videoElement.length) {
      return true;
    } else {
      return false;
    }
  };

  var AdFuelUtils = {
    addEvent: addEvent,
    affixScriptToHead: affixScriptToHead,
    bind: bind,
    cdnRoot: cdnRoot,
    clone: clone,
    countryCode: countryCode,
    debounce: debounce,
    gdprApplies: gdprApplies,
    getFullConsentState: getFullConsentState,
    getConsentVersion: getConsentVersion,
    getConsentString: getConsentString,
    getConsent: getConsent,
    getGDPRApplies: getGDPRApplies,
    getCCPAApplies: getCCPAApplies,
    getUserConsentRegion: getUserConsentRegion,
    getLocation: getLocation,
    generateCacheBuster: generateCacheBuster,
    getBrowser: getBrowser,
    getLogger: getLogger,
    getUMTOCookies: getUMTOCookies,
    getURLParam: getURLParam,
    getViewport: getViewport,
    hasCookie: hasCookie,
    hasOwn: hasOwn,
    hasUserConsent: hasUserConsent,
    hasVideo: hasVideo,
    isCNNE: isCNNE,
    isFunction: isFunction,
    isIntl: isIntl,
    isMobile: isMobile,
    isMonetized: isMonetized,
    isObject: isObject,
    keyMap: keyMap,
    merge: merge,
    mergeDeep: mergeDeep,
    noop: noop,
    once: once,
    performance: performance,
    piiFilter: piiFilter,
    readCookie: readCookie,
    roundFloat: roundFloat,
    selectedEdition: selectedEdition,
    setHostAndPathNames: setHostAndPathNames,
    setIsIntl: isIntl,
    __VERSION__: MODULE_VERSION
  };
  window.AdFuelUtils = AdFuelUtils;
  /*
      ------------------------------------------------------
      GDPR Status: Blocked
      CCPA Status: Allowed
  */

  var MODULE_NAME$1 = 'Sourcepoint Add-on: Ad Blocking';
  var MODULE_VERSION$1 = 'v4.0.1'; // Stub out AdFuelOptions in case it's not on the page.

  var blockerStatus;
  var initEventSet = false;
  var logger$1;

  var spIsBlocking = function spIsBlocking() {
    logger$1.log('Returning Ad Blocker Status: ', blockerStatus);
    return blockerStatus || false;
  };

  var init = function init(config) {
    var initPromise = new Promise(function (resolve) {
      logger$1 = getLogger(MODULE_NAME$1, MODULE_VERSION$1, 'spblocking', 'color: #00e1e1; padding: 2px', config.SOURCEPOINT.DEBUG);
      logger$1.log('Initializing Module Add-On...');

      var registerModuleWithAdFuel = function registerModuleWithAdFuel() {
        window.AdFuel.registerModule(MODULE_NAME$1, {}, MODULE_VERSION$1, config.SOURCEPOINT);
      };

      if (window.AdFuel) {
        // AdFuel loaded first
        registerModuleWithAdFuel();
      } else {
        // wait for AdFuel to load
        addEvent(document, 'AdFuelCreated', registerModuleWithAdFuel);
      }

      window.spIsBlocking = spIsBlocking;
      addEvent(document, 'sp.blocking', function (e) {
        logger$1.log('Ad Status: BLOCKED');
        blockerStatus = true;
      });
      addEvent(document, 'sp.not_blocking', function (e) {
        logger$1.log('Ad Status: Not Blocked');
        blockerStatus = false;
      });
    });
    initPromise.id = "".concat(MODULE_NAME$1, " ").concat(MODULE_VERSION$1);
    return initPromise;
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    init: init,
    spIsBlocking: spIsBlocking,
    buildSlot: function buildSlot(slotData) {
      var buildPromise = new Promise(function (resolve) {
        resolve();
      });
      buildPromise.id = "".concat(MODULE_NAME$1, " ").concat(MODULE_VERSION$1);
      return buildPromise;
    },
    runAuction: function runAuction(slotData) {
      var auctionPromise = new Promise(function (resolve) {
        resolve();
      });
      auctionPromise.id = "".concat(MODULE_NAME$1, " ").concat(MODULE_VERSION$1);
      return auctionPromise;
    },
    setTargeting: function setTargeting(slotData) {
      var targetingPromise = new Promise(function (resolve) {
        resolve();
      });
      targetingPromise.id = "".concat(MODULE_NAME$1, " ").concat(MODULE_VERSION$1);
      return targetingPromise;
    },
    __NAME__: MODULE_NAME$1,
    __VERSION__: MODULE_VERSION$1
  };
  return index;
}); ////////////////////////////////////////////
// TransactionID for 2.0
////////////////////////////////////////////


(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.TransactionID = factory());
})(void 0, function () {
  'use strict';
  /*
      Transaction ID Module - Version 4.0.1
      @4.0.0: - Initialization Update for GDPR/CCPA
      @4.0.1: - OptanonLoaded timing fix
       ------------------------------------------------------
      GDPR Status: Blocked
      CCPA Status: Allowed
  */

  var MODULE_NAME = 'Transaction ID Module';
  var MODULE_VERSION = 'v4.0.1';
  var getLogger = window.AdFuelUtils.getLogger;
  var getUserConsentRegion = window.AdFuelUtils.getUserConsentRegion;
  var getConsent = window.AdFuelUtils.getConsent;
  var addEvent = window.AdFuelUtils.addEvent;
  var logger;
  var targetingSet = false;
  var initEventSet = false;

  var registerModuleWithAdfuel = function registerModuleWithAdfuel() {
    window.AdFuel.registerModule(MODULE_NAME, {}, MODULE_VERSION, {});
    setTransIdTargeting();
  };

  var setTransIdTargeting = function setTransIdTargeting() {
    var transId = window.turner_getTransactionId();

    if (!targetingSet) {
      targetingSet = true;

      if (window.AdFuel) {
        logger.log('AdFuel: setting transid targeting', {
          transId: transId
        });
        window.AdFuel.addPageLevelTarget('transId', transId);
      } else {
        logger.log('googletag: setting transid targeting', {
          transId: transId
        });
        window.googletag.pubads().setTargeting('transId', transId);
      }
    }
  };

  var init = function init(siteConfig) {
    var initPromise = new Promise(function (resolve) {
      logger = getLogger(MODULE_NAME, MODULE_VERSION, 'transid', 'color: #d2b000; padding: 2px', siteConfig.TRANSACTION_ID.DEBUG);
      window.cnnad_transactionID = null; // referenced by registries

      window.cnnad_getTransactionID = function () {
        if (!window.cnnad_transactionID) {
          window.cnnad_transactionID = Math.round(new Date().getTime() / 1000) + '' + Math.floor(Math.random() * 9007199254740992);
        }

        return window.cnnad_transactionID;
      };

      window.turner_getTransactionId = window.cnnad_getTransactionID;
      window.turner_getTransactionId();

      if (siteConfig.USER_CONSENT && siteConfig.USER_CONSENT.ENABLED) {
        var consentRegion = getUserConsentRegion();
        var consentStatus = getConsent();

        if ((consentRegion === 'ccpa' || consentRegion === 'gdpr') && !consentStatus) {
          logger.log('Disabling module due to GDPR restrictions.');
        } else {
          logger.log('Initializing Module...');

          if (window.AdFuel) {
            // AdFuel loaded first
            registerModuleWithAdfuel();
          } else {
            // wait for AdFuel to load
            addEvent(document, 'AdFuelCreated', registerModuleWithAdfuel);
          }
        }
      } else {
        logger.log('Initializing Module...');

        if (window.AdFuel) {
          // AdFuel loaded first
          registerModuleWithAdfuel();
        } else {
          // wait for AdFuel to load
          addEvent(document, 'AdFuelCreated', registerModuleWithAdfuel);
        }
      }
    });
    initPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
    return initPromise;
  };

  if (window.AdFuelOptions) {
    if (window.AdFuelOptions.USER_CONSENT.ENABLED) {
      var callInit = function callInit() {
        setTimeout(function () {
          if (window.WM.UserConsent && window.WM.UserConsent.isReady()) {
            if (window.WM.UserConsent.getRegion() === 'ccpa') {
              init(window.AdFuelOptions);
            } else {
              if (initEventSet || window.WM.UserConsent.isOptanonLoaded()) {
                init(window.AdFuelOptions);
              } else {
                addEvent(window, 'optanonLoaded', callInit);
                initEventSet = true;
              }
            }
          }
        }, 100);
      };

      if (window.WM && window.WM.UserConsent && window.WM.UserConsent.isReady()) {
        callInit();
      } else {
        addEvent(window, 'userConsentReady', callInit);
      }
    } else {
      init(window.AdFuelOptions);
    }
  }

  var index = {
    init: init,
    buildSlot: function buildSlot(slotData) {
      var buildPromise = new Promise(function (resolve) {
        resolve();
      });
      buildPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return buildPromise;
    },
    runAuction: function runAuction(slotData) {
      var auctionPromise = new Promise(function (resolve) {
        resolve();
      });
      auctionPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return auctionPromise;
    },
    setTargeting: function setTargeting(slotData) {
      var targetingPromise = new Promise(function (resolve) {
        setTransIdTargeting();
        resolve();
      });
      targetingPromise.id = "".concat(MODULE_NAME, " ").concat(MODULE_VERSION);
      return targetingPromise;
    },
    __NAME__: MODULE_NAME,
    __VERSION__: MODULE_VERSION
  };
  return index;
});